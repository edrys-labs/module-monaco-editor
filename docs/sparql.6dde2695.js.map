{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,E,I,E,E,kD,E,iB,C,GA0M/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GAxMF,IAAI,EAAO,CACT,SAAU,CACR,YAAa,GACf,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAS,AAAC,EAC3C,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAS,AAAC,EAC3C,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,AACH,EACI,EAAW,CACb,aAAc,GACd,aAAc,MACd,SAAU,CACR,CAAE,MAAO,kBAAmB,KAAM,IAAK,MAAO,GAAI,EAClD,CAAE,MAAO,wBAAyB,KAAM,IAAK,MAAO,GAAI,EACxD,CAAE,MAAO,mBAAoB,KAAM,IAAK,MAAO,GAAI,EACnD,CAAE,MAAO,kBAAmB,KAAM,IAAK,MAAO,GAAI,EACnD,CACD,SAAU,CACR,MACA,KACA,MACA,MACA,OACA,KACA,QACA,YACA,OACA,SACA,OACA,SACA,OACA,WACA,WACA,OACA,QACA,SACA,OACA,QACA,QACA,SACA,KACA,SACA,QACA,OACA,QACA,OACA,QACA,MACA,SACA,WACA,QACA,SACA,UACA,SACA,UACA,SACA,KACA,OACA,QACA,QACA,QACA,SACA,QACA,OACD,CACD,iBAAkB,CAChB,IACA,MACA,MACA,OACA,QACA,QACA,OACA,WACA,SACA,WACA,QACA,WACA,MACA,iBACA,SACA,QACA,eACA,QACA,KACA,MACA,UACA,QACA,YACA,YACA,QACA,OACA,cACA,QACA,MACA,MACA,MACA,UACA,QACA,MACA,OACA,QACA,UACA,QACA,WACA,SACA,UACA,OACA,SACA,SACA,SACA,MACA,WACA,YACA,QACA,UACA,UACA,SACA,YACA,UACA,SACA,MACA,WACA,KACA,QACA,MACA,OACA,OACD,CAED,WAAY,CAAA,EACZ,UAAW,CACT,KAAM,CAEJ,CAAC,mBAAoB,MAAM,CAE3B,CAAE,QAAS,UAAW,EAEtB,CAAC,MAAO,UAAU,CAElB,CAAC,aAAc,YAAY,CAC3B,CAAC,QAAS,YAAY,CAEtB,CAAC,kFAAmF,MAAM,CAC1F,CAAC,0EAA2E,MAAM,CAElF,CACE,gBACA,CACE,MAAO,CACL,YAAa,CAAE,MAAO,SAAU,EAChC,oBAAqB,CAAE,MAAO,gBAAiB,EAC/C,WAAY,YACd,CACF,EACD,CAED,CAAC,OAAQ,eAAe,CACxB,CAAC,sBAAuB,eAAe,CACvC,CAAC,kBAAmB,eAAe,CAEnC,CAAC,cAAe,eAAe,CAE/B,CAAC,MAAO,QAAQ,CACjB,CACD,QAAS,CACP,CAAC,kBAAmB,iBAAiB,CAErC,CAAC,KAAM,aAAc,OAAO,CAC5B,CAAC,IAAK,aAAc,cAAc,CAClC,CAAC,kBAAmB,iBAAiB,CAErC,CAAC,KAAM,aAAc,OAAO,CAC5B,CAAC,IAAK,aAAc,iBAAiB,CACtC,CAED,WAAY,CACV,CAAC,UAAW,aAAa,CACzB,CAAC,MAAO,gBAAgB,CACxB,CAAC,IAAK,aAAc,OAAO,CAC5B,CAED,cAAe,CACb,CAAC,UAAW,aAAa,CACzB,CAAC,MAAO,gBAAgB,CACxB,CAAC,IAAK,aAAc,OAAO,CAC5B,AACH,CACF,C,E,C,iD,O,E,C,M,C,S,C,C,C,C,C,C,C,EC9MA,EAAQ,cAAc,CAAG,SAAU,CAAC,EAClC,OAAO,GAAK,EAAE,UAAU,CAAG,EAAI,CAAC,QAAS,CAAC,CAC5C,EAEA,EAAQ,iBAAiB,CAAG,SAAU,CAAC,EACrC,OAAO,cAAc,CAAC,EAAG,aAAc,CAAC,MAAO,CAAA,CAAI,EACrD,EAEA,EAAQ,SAAS,CAAG,SAAU,CAAM,CAAE,CAAI,EAkBxC,OAjBA,OAAO,IAAI,CAAC,GAAQ,OAAO,CAAC,SAAU,CAAG,EAE7B,YAAR,GACA,AAAQ,eAAR,GACA,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,IAK7C,OAAO,cAAc,CAAC,EAAM,EAAK,CAC/B,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,CAAM,CAAC,EAAI,AACpB,CACF,EACF,GAEO,CACT,EAEA,EAAQ,MAAM,CAAG,SAAU,CAAI,CAAE,CAAQ,CAAE,CAAG,EAC5C,OAAO,cAAc,CAAC,EAAM,EAAU,CACpC,WAAY,CAAA,EACZ,IAAK,CACP,EACF,C,E,C,E,E,E,C,E","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/sparql/sparql.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"2jcyf\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/sparql/sparql.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf);\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar conf = {\n    comments: {\n        lineComment: \"#\"\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"'\",\n            close: \"'\",\n            notIn: [\n                \"string\"\n            ]\n        },\n        {\n            open: '\"',\n            close: '\"',\n            notIn: [\n                \"string\"\n            ]\n        },\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        }\n    ]\n};\nvar language = {\n    defaultToken: \"\",\n    tokenPostfix: \".rq\",\n    brackets: [\n        {\n            token: \"delimiter.curly\",\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            token: \"delimiter.parenthesis\",\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            token: \"delimiter.square\",\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            token: \"delimiter.angle\",\n            open: \"<\",\n            close: \">\"\n        }\n    ],\n    keywords: [\n        \"add\",\n        \"as\",\n        \"asc\",\n        \"ask\",\n        \"base\",\n        \"by\",\n        \"clear\",\n        \"construct\",\n        \"copy\",\n        \"create\",\n        \"data\",\n        \"delete\",\n        \"desc\",\n        \"describe\",\n        \"distinct\",\n        \"drop\",\n        \"false\",\n        \"filter\",\n        \"from\",\n        \"graph\",\n        \"group\",\n        \"having\",\n        \"in\",\n        \"insert\",\n        \"limit\",\n        \"load\",\n        \"minus\",\n        \"move\",\n        \"named\",\n        \"not\",\n        \"offset\",\n        \"optional\",\n        \"order\",\n        \"prefix\",\n        \"reduced\",\n        \"select\",\n        \"service\",\n        \"silent\",\n        \"to\",\n        \"true\",\n        \"undef\",\n        \"union\",\n        \"using\",\n        \"values\",\n        \"where\",\n        \"with\"\n    ],\n    builtinFunctions: [\n        \"a\",\n        \"abs\",\n        \"avg\",\n        \"bind\",\n        \"bnode\",\n        \"bound\",\n        \"ceil\",\n        \"coalesce\",\n        \"concat\",\n        \"contains\",\n        \"count\",\n        \"datatype\",\n        \"day\",\n        \"encode_for_uri\",\n        \"exists\",\n        \"floor\",\n        \"group_concat\",\n        \"hours\",\n        \"if\",\n        \"iri\",\n        \"isblank\",\n        \"isiri\",\n        \"isliteral\",\n        \"isnumeric\",\n        \"isuri\",\n        \"lang\",\n        \"langmatches\",\n        \"lcase\",\n        \"max\",\n        \"md5\",\n        \"min\",\n        \"minutes\",\n        \"month\",\n        \"now\",\n        \"rand\",\n        \"regex\",\n        \"replace\",\n        \"round\",\n        \"sameterm\",\n        \"sample\",\n        \"seconds\",\n        \"sha1\",\n        \"sha256\",\n        \"sha384\",\n        \"sha512\",\n        \"str\",\n        \"strafter\",\n        \"strbefore\",\n        \"strdt\",\n        \"strends\",\n        \"strlang\",\n        \"strlen\",\n        \"strstarts\",\n        \"struuid\",\n        \"substr\",\n        \"sum\",\n        \"timezone\",\n        \"tz\",\n        \"ucase\",\n        \"uri\",\n        \"uuid\",\n        \"year\"\n    ],\n    // describe tokens\n    ignoreCase: true,\n    tokenizer: {\n        root: [\n            // resource indicators\n            [\n                /<[^\\s\\u00a0>]*>?/,\n                \"tag\"\n            ],\n            // strings\n            {\n                include: \"@strings\"\n            },\n            // line comment\n            [\n                /#.*/,\n                \"comment\"\n            ],\n            // special chars with special meaning\n            [\n                /[{}()\\[\\]]/,\n                \"@brackets\"\n            ],\n            [\n                /[;,.]/,\n                \"delimiter\"\n            ],\n            // (prefixed) name\n            [\n                /[_\\w\\d]+:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])*/,\n                \"tag\"\n            ],\n            [\n                /:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])+/,\n                \"tag\"\n            ],\n            // identifiers, builtinFunctions and keywords\n            [\n                /[$?]?[_\\w\\d]+/,\n                {\n                    cases: {\n                        \"@keywords\": {\n                            token: \"keyword\"\n                        },\n                        \"@builtinFunctions\": {\n                            token: \"predefined.sql\"\n                        },\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ],\n            // operators\n            [\n                /\\^\\^/,\n                \"operator.sql\"\n            ],\n            [\n                /\\^[*+\\-<>=&|^\\/!?]*/,\n                \"operator.sql\"\n            ],\n            [\n                /[*+\\-<>=&|\\/!?]/,\n                \"operator.sql\"\n            ],\n            // symbol\n            [\n                /@[a-z\\d\\-]*/,\n                \"metatag.html\"\n            ],\n            // whitespaces\n            [\n                /\\s+/,\n                \"white\"\n            ]\n        ],\n        strings: [\n            [\n                /'([^'\\\\]|\\\\.)*$/,\n                \"string.invalid\"\n            ],\n            // non-terminated single-quoted string\n            [\n                /'$/,\n                \"string.sql\",\n                \"@pop\"\n            ],\n            [\n                /'/,\n                \"string.sql\",\n                \"@stringBody\"\n            ],\n            [\n                /\"([^\"\\\\]|\\\\.)*$/,\n                \"string.invalid\"\n            ],\n            // non-terminated single-quoted string\n            [\n                /\"$/,\n                \"string.sql\",\n                \"@pop\"\n            ],\n            [\n                /\"/,\n                \"string.sql\",\n                \"@dblStringBody\"\n            ]\n        ],\n        // single-quoted strings\n        stringBody: [\n            [\n                /[^\\\\']+/,\n                \"string.sql\"\n            ],\n            [\n                /\\\\./,\n                \"string.escape\"\n            ],\n            [\n                /'/,\n                \"string.sql\",\n                \"@pop\"\n            ]\n        ],\n        // double-quoted strings\n        dblStringBody: [\n            [\n                /[^\\\\\"]+/,\n                \"string.sql\"\n            ],\n            [\n                /\\\\./,\n                \"string.escape\"\n            ],\n            [\n                /\"/,\n                \"string.sql\",\n                \"@pop\"\n            ]\n        ]\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=sparql.6dde2695.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/sparql/sparql.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"'\", close: \"'\", notIn: [\"string\"] },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".rq\",\n  brackets: [\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" },\n    { token: \"delimiter.angle\", open: \"<\", close: \">\" }\n  ],\n  keywords: [\n    \"add\",\n    \"as\",\n    \"asc\",\n    \"ask\",\n    \"base\",\n    \"by\",\n    \"clear\",\n    \"construct\",\n    \"copy\",\n    \"create\",\n    \"data\",\n    \"delete\",\n    \"desc\",\n    \"describe\",\n    \"distinct\",\n    \"drop\",\n    \"false\",\n    \"filter\",\n    \"from\",\n    \"graph\",\n    \"group\",\n    \"having\",\n    \"in\",\n    \"insert\",\n    \"limit\",\n    \"load\",\n    \"minus\",\n    \"move\",\n    \"named\",\n    \"not\",\n    \"offset\",\n    \"optional\",\n    \"order\",\n    \"prefix\",\n    \"reduced\",\n    \"select\",\n    \"service\",\n    \"silent\",\n    \"to\",\n    \"true\",\n    \"undef\",\n    \"union\",\n    \"using\",\n    \"values\",\n    \"where\",\n    \"with\"\n  ],\n  builtinFunctions: [\n    \"a\",\n    \"abs\",\n    \"avg\",\n    \"bind\",\n    \"bnode\",\n    \"bound\",\n    \"ceil\",\n    \"coalesce\",\n    \"concat\",\n    \"contains\",\n    \"count\",\n    \"datatype\",\n    \"day\",\n    \"encode_for_uri\",\n    \"exists\",\n    \"floor\",\n    \"group_concat\",\n    \"hours\",\n    \"if\",\n    \"iri\",\n    \"isblank\",\n    \"isiri\",\n    \"isliteral\",\n    \"isnumeric\",\n    \"isuri\",\n    \"lang\",\n    \"langmatches\",\n    \"lcase\",\n    \"max\",\n    \"md5\",\n    \"min\",\n    \"minutes\",\n    \"month\",\n    \"now\",\n    \"rand\",\n    \"regex\",\n    \"replace\",\n    \"round\",\n    \"sameterm\",\n    \"sample\",\n    \"seconds\",\n    \"sha1\",\n    \"sha256\",\n    \"sha384\",\n    \"sha512\",\n    \"str\",\n    \"strafter\",\n    \"strbefore\",\n    \"strdt\",\n    \"strends\",\n    \"strlang\",\n    \"strlen\",\n    \"strstarts\",\n    \"struuid\",\n    \"substr\",\n    \"sum\",\n    \"timezone\",\n    \"tz\",\n    \"ucase\",\n    \"uri\",\n    \"uuid\",\n    \"year\"\n  ],\n  // describe tokens\n  ignoreCase: true,\n  tokenizer: {\n    root: [\n      // resource indicators\n      [/<[^\\s\\u00a0>]*>?/, \"tag\"],\n      // strings\n      { include: \"@strings\" },\n      // line comment\n      [/#.*/, \"comment\"],\n      // special chars with special meaning\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[;,.]/, \"delimiter\"],\n      // (prefixed) name\n      [/[_\\w\\d]+:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])*/, \"tag\"],\n      [/:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])+/, \"tag\"],\n      // identifiers, builtinFunctions and keywords\n      [\n        /[$?]?[_\\w\\d]+/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@builtinFunctions\": { token: \"predefined.sql\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      // operators\n      [/\\^\\^/, \"operator.sql\"],\n      [/\\^[*+\\-<>=&|^\\/!?]*/, \"operator.sql\"],\n      [/[*+\\-<>=&|\\/!?]/, \"operator.sql\"],\n      // symbol\n      [/@[a-z\\d\\-]*/, \"metatag.html\"],\n      // whitespaces\n      [/\\s+/, \"white\"]\n    ],\n    strings: [\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n      // non-terminated single-quoted string\n      [/'$/, \"string.sql\", \"@pop\"],\n      [/'/, \"string.sql\", \"@stringBody\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      // non-terminated single-quoted string\n      [/\"$/, \"string.sql\", \"@pop\"],\n      [/\"/, \"string.sql\", \"@dblStringBody\"]\n    ],\n    // single-quoted strings\n    stringBody: [\n      [/[^\\\\']+/, \"string.sql\"],\n      [/\\\\./, \"string.escape\"],\n      [/'/, \"string.sql\", \"@pop\"]\n    ],\n    // double-quoted strings\n    dblStringBody: [\n      [/[^\\\\\"]+/, \"string.sql\"],\n      [/\\\\./, \"string.escape\"],\n      [/\"/, \"string.sql\", \"@pop\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","defaultToken","tokenPostfix","token","keywords","builtinFunctions","ignoreCase","tokenizer","root","include","cases","strings","stringBody","dblStringBody","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"sparql.6dde2695.js.map"}