{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,E,I,E,E,kD,E,iB,C,GAqf/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GAnfF,IAAI,EAAO,CACT,YAAa,uFACb,SAAU,CACR,YAAa,KACb,aAAc,CAAC,KAAM,KAAK,AAC5B,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAS,AAAC,EAC3C,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAS,AAAC,EAC3C,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAS,AAAC,EAC3C,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAS,AAAC,EAC3C,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAA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CH,EACA,YAAa,CACX,WACA,MACA,QACA,KACA,QACA,WACA,OACA,QACA,YACA,QACA,QACA,QACA,WACA,UACA,UACA,KACA,OACA,SACA,aACA,SACA,aACA,QACA,YACA,WACA,UACA,QACA,QACA,MACA,UACA,WACA,SACA,OACA,KACA,aACA,YACA,aACA,YACA,YACA,MACA,OACA,SACA,eACA,KACA,UACA,YACA,SACA,WACA,SACA,SACA,QACA,QACA,MACA,OACA,MACA,MACA,QACA,MACA,MACA,OACA,QACA,OACA,OACA,UACA,eACA,QACA,OACA,UACA,eACA,SACA,QACA,QACA,QACA,cACD,CACD,wBAAyB,CACvB,YACA,UACA,WACA,WACA,gBACA,aACA,eACA,YACD,CACD,uBAAwB,CACtB,WACA,WACA,QACA,SACA,UACA,YACA,YACA,QACA,WACA,gBACA,sBACA,wBACA,QACA,QACD,CACD,QAAS,uEACX,C,E,C,iD,O,E,C,M,C,S,C,C,C,C,C,C,C,ECzfA,EAAQ,cAAc,CAAG,SAAU,CAAC,EAClC,OAAO,GAAK,EAAE,UAAU,CAAG,EAAI,CAAC,QAAS,CAAC,CAC5C,EAEA,EAAQ,iBAAiB,CAAG,SAAU,CAAC,EACrC,OAAO,cAAc,CAAC,EAAG,aAAc,CAAC,MAAO,CAAA,CAAI,EACrD,EAEA,EAAQ,SAAS,CAAG,SAAU,CAAM,CAAE,CAAI,EAkBxC,OAjBA,OAAO,IAAI,CAAC,GAAQ,OAAO,CAAC,SAAU,CAAG,EAE7B,YAAR,GACA,AAAQ,eAAR,GACA,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,IAK7C,OAAO,cAAc,CAAC,EAAM,EAAK,CAC/B,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,CAAM,CAAC,EAAI,AACpB,CACF,EACF,GAEO,CACT,EAEA,EAAQ,MAAM,CAAG,SAAU,CAAI,CAAE,CAAQ,CAAE,CAAG,EAC5C,OAAO,cAAc,CAAC,EAAM,EAAU,CACpC,WAAY,CAAA,EACZ,IAAK,CACP,EACF,C,E,C,E,E,E,C,E","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/php/php.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"aki4d\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/php/php.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf);\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: \"//\",\n        blockComment: [\n            \"/*\",\n            \"*/\"\n        ]\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\",\n            notIn: [\n                \"string\"\n            ]\n        },\n        {\n            open: \"[\",\n            close: \"]\",\n            notIn: [\n                \"string\"\n            ]\n        },\n        {\n            open: \"(\",\n            close: \")\",\n            notIn: [\n                \"string\"\n            ]\n        },\n        {\n            open: '\"',\n            close: '\"',\n            notIn: [\n                \"string\"\n            ]\n        },\n        {\n            open: \"'\",\n            close: \"'\",\n            notIn: [\n                \"string\",\n                \"comment\"\n            ]\n        }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*(#|//)region\\\\b\"),\n            end: new RegExp(\"^\\\\s*(#|//)endregion\\\\b\")\n        }\n    }\n};\nvar language = {\n    defaultToken: \"\",\n    tokenPostfix: \"\",\n    // ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.root\"\n                }\n            ],\n            [\n                /<!DOCTYPE/,\n                \"metatag.html\",\n                \"@doctype\"\n            ],\n            [\n                /<!--/,\n                \"comment.html\",\n                \"@comment\"\n            ],\n            [\n                /(<)(\\w+)(\\/>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    \"delimiter.html\"\n                ]\n            ],\n            [\n                /(<)(script)/,\n                [\n                    \"delimiter.html\",\n                    {\n                        token: \"tag.html\",\n                        next: \"@script\"\n                    }\n                ]\n            ],\n            [\n                /(<)(style)/,\n                [\n                    \"delimiter.html\",\n                    {\n                        token: \"tag.html\",\n                        next: \"@style\"\n                    }\n                ]\n            ],\n            [\n                /(<)([:\\w]+)/,\n                [\n                    \"delimiter.html\",\n                    {\n                        token: \"tag.html\",\n                        next: \"@otherTag\"\n                    }\n                ]\n            ],\n            [\n                /(<\\/)(\\w+)/,\n                [\n                    \"delimiter.html\",\n                    {\n                        token: \"tag.html\",\n                        next: \"@otherTag\"\n                    }\n                ]\n            ],\n            [\n                /</,\n                \"delimiter.html\"\n            ],\n            [\n                /[^<]+/\n            ]\n        ],\n        doctype: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.comment\"\n                }\n            ],\n            [\n                /[^>]+/,\n                \"metatag.content.html\"\n            ],\n            [\n                />/,\n                \"metatag.html\",\n                \"@pop\"\n            ]\n        ],\n        comment: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.comment\"\n                }\n            ],\n            [\n                /-->/,\n                \"comment.html\",\n                \"@pop\"\n            ],\n            [\n                /[^-]+/,\n                \"comment.content.html\"\n            ],\n            [\n                /./,\n                \"comment.content.html\"\n            ]\n        ],\n        otherTag: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.otherTag\"\n                }\n            ],\n            [\n                /\\/?>/,\n                \"delimiter.html\",\n                \"@pop\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ]\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.script\"\n                }\n            ],\n            [\n                /type/,\n                \"attribute.name\",\n                \"@scriptAfterType\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@scriptEmbedded.text/javascript\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /(<\\/)(script\\s*)(>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    {\n                        token: \"delimiter.html\",\n                        next: \"@pop\"\n                    }\n                ]\n            ]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.scriptAfterType\"\n                }\n            ],\n            [\n                /=/,\n                \"delimiter\",\n                \"@scriptAfterTypeEquals\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@scriptEmbedded.text/javascript\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            // cover invalid e.g. <script type>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.scriptAfterTypeEquals\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@scriptWithCustomType.$1\"\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@scriptWithCustomType.$1\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@scriptEmbedded.text/javascript\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            // cover invalid e.g. <script type=>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.scriptWithCustomType.$S2\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@scriptEmbedded.$S2\",\n                    nextEmbedded: \"$S2\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        scriptEmbedded: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInEmbeddedState.scriptEmbedded.$S2\",\n                    nextEmbedded: \"@pop\"\n                }\n            ],\n            [\n                /<\\/script/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\",\n                    nextEmbedded: \"@pop\"\n                }\n            ]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.style\"\n                }\n            ],\n            [\n                /type/,\n                \"attribute.name\",\n                \"@styleAfterType\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@styleEmbedded.text/css\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /(<\\/)(style\\s*)(>)/,\n                [\n                    \"delimiter.html\",\n                    \"tag.html\",\n                    {\n                        token: \"delimiter.html\",\n                        next: \"@pop\"\n                    }\n                ]\n            ]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.styleAfterType\"\n                }\n            ],\n            [\n                /=/,\n                \"delimiter\",\n                \"@styleAfterTypeEquals\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@styleEmbedded.text/css\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            // cover invalid e.g. <style type>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.styleAfterTypeEquals\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@styleWithCustomType.$1\"\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@styleWithCustomType.$1\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@styleEmbedded.text/css\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            // cover invalid e.g. <style type=>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInSimpleState.styleWithCustomType.$S2\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter.html\",\n                    next: \"@styleEmbedded.$S2\",\n                    nextEmbedded: \"$S2\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        styleEmbedded: [\n            [\n                /<\\?((php)|=)?/,\n                {\n                    token: \"@rematch\",\n                    switchTo: \"@phpInEmbeddedState.styleEmbedded.$S2\",\n                    nextEmbedded: \"@pop\"\n                }\n            ],\n            [\n                /<\\/style/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\",\n                    nextEmbedded: \"@pop\"\n                }\n            ]\n        ],\n        // -- END <style> tags handling\n        phpInSimpleState: [\n            [\n                /<\\?((php)|=)?/,\n                \"metatag.php\"\n            ],\n            [\n                /\\?>/,\n                {\n                    token: \"metatag.php\",\n                    switchTo: \"@$S2.$S3\"\n                }\n            ],\n            {\n                include: \"phpRoot\"\n            }\n        ],\n        phpInEmbeddedState: [\n            [\n                /<\\?((php)|=)?/,\n                \"metatag.php\"\n            ],\n            [\n                /\\?>/,\n                {\n                    token: \"metatag.php\",\n                    switchTo: \"@$S2.$S3\",\n                    nextEmbedded: \"$S3\"\n                }\n            ],\n            {\n                include: \"phpRoot\"\n            }\n        ],\n        phpRoot: [\n            [\n                /[a-zA-Z_]\\w*/,\n                {\n                    cases: {\n                        \"@phpKeywords\": {\n                            token: \"keyword.php\"\n                        },\n                        \"@phpCompileTimeConstants\": {\n                            token: \"constant.php\"\n                        },\n                        \"@default\": \"identifier.php\"\n                    }\n                }\n            ],\n            [\n                /[$a-zA-Z_]\\w*/,\n                {\n                    cases: {\n                        \"@phpPreDefinedVariables\": {\n                            token: \"variable.predefined.php\"\n                        },\n                        \"@default\": \"variable.php\"\n                    }\n                }\n            ],\n            // brackets\n            [\n                /[{}]/,\n                \"delimiter.bracket.php\"\n            ],\n            [\n                /[\\[\\]]/,\n                \"delimiter.array.php\"\n            ],\n            [\n                /[()]/,\n                \"delimiter.parenthesis.php\"\n            ],\n            // whitespace\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // comments\n            [\n                /(#|\\/\\/)$/,\n                \"comment.php\"\n            ],\n            [\n                /(#|\\/\\/)/,\n                \"comment.php\",\n                \"@phpLineComment\"\n            ],\n            // block comments\n            [\n                /\\/\\*/,\n                \"comment.php\",\n                \"@phpComment\"\n            ],\n            // strings\n            [\n                /\"/,\n                \"string.php\",\n                \"@phpDoubleQuoteString\"\n            ],\n            [\n                /'/,\n                \"string.php\",\n                \"@phpSingleQuoteString\"\n            ],\n            // delimiters\n            [\n                /[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/,\n                \"delimiter.php\"\n            ],\n            // numbers\n            [\n                /\\d*\\d+[eE]([\\-+]?\\d+)?/,\n                \"number.float.php\"\n            ],\n            [\n                /\\d*\\.\\d+([eE][\\-+]?\\d+)?/,\n                \"number.float.php\"\n            ],\n            [\n                /0[xX][0-9a-fA-F']*[0-9a-fA-F]/,\n                \"number.hex.php\"\n            ],\n            [\n                /0[0-7']*[0-7]/,\n                \"number.octal.php\"\n            ],\n            [\n                /0[bB][0-1']*[0-1]/,\n                \"number.binary.php\"\n            ],\n            [\n                /\\d[\\d']*/,\n                \"number.php\"\n            ],\n            [\n                /\\d/,\n                \"number.php\"\n            ]\n        ],\n        phpComment: [\n            [\n                /\\*\\//,\n                \"comment.php\",\n                \"@pop\"\n            ],\n            [\n                /[^*]+/,\n                \"comment.php\"\n            ],\n            [\n                /./,\n                \"comment.php\"\n            ]\n        ],\n        phpLineComment: [\n            [\n                /\\?>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ],\n            [\n                /.$/,\n                \"comment.php\",\n                \"@pop\"\n            ],\n            [\n                /[^?]+$/,\n                \"comment.php\",\n                \"@pop\"\n            ],\n            [\n                /[^?]+/,\n                \"comment.php\"\n            ],\n            [\n                /./,\n                \"comment.php\"\n            ]\n        ],\n        phpDoubleQuoteString: [\n            [\n                /[^\\\\\"]+/,\n                \"string.php\"\n            ],\n            [\n                /@escapes/,\n                \"string.escape.php\"\n            ],\n            [\n                /\\\\./,\n                \"string.escape.invalid.php\"\n            ],\n            [\n                /\"/,\n                \"string.php\",\n                \"@pop\"\n            ]\n        ],\n        phpSingleQuoteString: [\n            [\n                /[^\\\\']+/,\n                \"string.php\"\n            ],\n            [\n                /@escapes/,\n                \"string.escape.php\"\n            ],\n            [\n                /\\\\./,\n                \"string.escape.invalid.php\"\n            ],\n            [\n                /'/,\n                \"string.php\",\n                \"@pop\"\n            ]\n        ]\n    },\n    phpKeywords: [\n        \"abstract\",\n        \"and\",\n        \"array\",\n        \"as\",\n        \"break\",\n        \"callable\",\n        \"case\",\n        \"catch\",\n        \"cfunction\",\n        \"class\",\n        \"clone\",\n        \"const\",\n        \"continue\",\n        \"declare\",\n        \"default\",\n        \"do\",\n        \"else\",\n        \"elseif\",\n        \"enddeclare\",\n        \"endfor\",\n        \"endforeach\",\n        \"endif\",\n        \"endswitch\",\n        \"endwhile\",\n        \"extends\",\n        \"false\",\n        \"final\",\n        \"for\",\n        \"foreach\",\n        \"function\",\n        \"global\",\n        \"goto\",\n        \"if\",\n        \"implements\",\n        \"interface\",\n        \"instanceof\",\n        \"insteadof\",\n        \"namespace\",\n        \"new\",\n        \"null\",\n        \"object\",\n        \"old_function\",\n        \"or\",\n        \"private\",\n        \"protected\",\n        \"public\",\n        \"resource\",\n        \"static\",\n        \"switch\",\n        \"throw\",\n        \"trait\",\n        \"try\",\n        \"true\",\n        \"use\",\n        \"var\",\n        \"while\",\n        \"xor\",\n        \"die\",\n        \"echo\",\n        \"empty\",\n        \"exit\",\n        \"eval\",\n        \"include\",\n        \"include_once\",\n        \"isset\",\n        \"list\",\n        \"require\",\n        \"require_once\",\n        \"return\",\n        \"print\",\n        \"unset\",\n        \"yield\",\n        \"__construct\"\n    ],\n    phpCompileTimeConstants: [\n        \"__CLASS__\",\n        \"__DIR__\",\n        \"__FILE__\",\n        \"__LINE__\",\n        \"__NAMESPACE__\",\n        \"__METHOD__\",\n        \"__FUNCTION__\",\n        \"__TRAIT__\"\n    ],\n    phpPreDefinedVariables: [\n        \"$GLOBALS\",\n        \"$_SERVER\",\n        \"$_GET\",\n        \"$_POST\",\n        \"$_FILES\",\n        \"$_REQUEST\",\n        \"$_SESSION\",\n        \"$_ENV\",\n        \"$_COOKIE\",\n        \"$php_errormsg\",\n        \"$HTTP_RAW_POST_DATA\",\n        \"$http_response_header\",\n        \"$argc\",\n        \"$argv\"\n    ],\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=php.df35a2f8.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/php/php.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\", notIn: [\"string\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\"] },\n    { open: '\"', close: '\"', notIn: [\"string\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*(#|//)region\\\\b\"),\n      end: new RegExp(\"^\\\\s*(#|//)endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \"\",\n  // ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.root\" }],\n      [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"],\n      [/<!--/, \"comment.html\", \"@comment\"],\n      [/(<)(\\w+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\n      [/(<)(script)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@script\" }]],\n      [/(<)(style)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@style\" }]],\n      [/(<)([:\\w]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\n      [/(<\\/)(\\w+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\n      [/</, \"delimiter.html\"],\n      [/[^<]+/]\n      // text\n    ],\n    doctype: [\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.comment\" }],\n      [/[^>]+/, \"metatag.content.html\"],\n      [/>/, \"metatag.html\", \"@pop\"]\n    ],\n    comment: [\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.comment\" }],\n      [/-->/, \"comment.html\", \"@pop\"],\n      [/[^-]+/, \"comment.content.html\"],\n      [/./, \"comment.content.html\"]\n    ],\n    otherTag: [\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.otherTag\" }],\n      [/\\/?>/, \"delimiter.html\", \"@pop\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/]\n      // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.script\" }],\n      [/type/, \"attribute.name\", \"@scriptAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.text/javascript\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [\n        /(<\\/)(script\\s*)(>)/,\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\n      ]\n    ],\n    // After <script ... type\n    scriptAfterType: [\n      [\n        /<\\?((php)|=)?/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@phpInSimpleState.scriptAfterType\"\n        }\n      ],\n      [/=/, \"delimiter\", \"@scriptAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.text/javascript\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type =\n    scriptAfterTypeEquals: [\n      [\n        /<\\?((php)|=)?/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@phpInSimpleState.scriptAfterTypeEquals\"\n        }\n      ],\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.text/javascript\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type = $S2\n    scriptWithCustomType: [\n      [\n        /<\\?((php)|=)?/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@phpInSimpleState.scriptWithCustomType.$S2\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    scriptEmbedded: [\n      [\n        /<\\?((php)|=)?/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@phpInEmbeddedState.scriptEmbedded.$S2\",\n          nextEmbedded: \"@pop\"\n        }\n      ],\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }]\n    ],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.style\" }],\n      [/type/, \"attribute.name\", \"@styleAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.text/css\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [\n        /(<\\/)(style\\s*)(>)/,\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\n      ]\n    ],\n    // After <style ... type\n    styleAfterType: [\n      [\n        /<\\?((php)|=)?/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@phpInSimpleState.styleAfterType\"\n        }\n      ],\n      [/=/, \"delimiter\", \"@styleAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.text/css\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type =\n    styleAfterTypeEquals: [\n      [\n        /<\\?((php)|=)?/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@phpInSimpleState.styleAfterTypeEquals\"\n        }\n      ],\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.text/css\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type = $S2\n    styleWithCustomType: [\n      [\n        /<\\?((php)|=)?/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@phpInSimpleState.styleWithCustomType.$S2\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    styleEmbedded: [\n      [\n        /<\\?((php)|=)?/,\n        {\n          token: \"@rematch\",\n          switchTo: \"@phpInEmbeddedState.styleEmbedded.$S2\",\n          nextEmbedded: \"@pop\"\n        }\n      ],\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }]\n    ],\n    // -- END <style> tags handling\n    phpInSimpleState: [\n      [/<\\?((php)|=)?/, \"metatag.php\"],\n      [/\\?>/, { token: \"metatag.php\", switchTo: \"@$S2.$S3\" }],\n      { include: \"phpRoot\" }\n    ],\n    phpInEmbeddedState: [\n      [/<\\?((php)|=)?/, \"metatag.php\"],\n      [\n        /\\?>/,\n        {\n          token: \"metatag.php\",\n          switchTo: \"@$S2.$S3\",\n          nextEmbedded: \"$S3\"\n        }\n      ],\n      { include: \"phpRoot\" }\n    ],\n    phpRoot: [\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@phpKeywords\": { token: \"keyword.php\" },\n            \"@phpCompileTimeConstants\": { token: \"constant.php\" },\n            \"@default\": \"identifier.php\"\n          }\n        }\n      ],\n      [\n        /[$a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@phpPreDefinedVariables\": {\n              token: \"variable.predefined.php\"\n            },\n            \"@default\": \"variable.php\"\n          }\n        }\n      ],\n      // brackets\n      [/[{}]/, \"delimiter.bracket.php\"],\n      [/[\\[\\]]/, \"delimiter.array.php\"],\n      [/[()]/, \"delimiter.parenthesis.php\"],\n      // whitespace\n      [/[ \\t\\r\\n]+/],\n      // comments\n      [/(#|\\/\\/)$/, \"comment.php\"],\n      [/(#|\\/\\/)/, \"comment.php\", \"@phpLineComment\"],\n      // block comments\n      [/\\/\\*/, \"comment.php\", \"@phpComment\"],\n      // strings\n      [/\"/, \"string.php\", \"@phpDoubleQuoteString\"],\n      [/'/, \"string.php\", \"@phpSingleQuoteString\"],\n      // delimiters\n      [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, \"delimiter.php\"],\n      // numbers\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?/, \"number.float.php\"],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float.php\"],\n      [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, \"number.hex.php\"],\n      [/0[0-7']*[0-7]/, \"number.octal.php\"],\n      [/0[bB][0-1']*[0-1]/, \"number.binary.php\"],\n      [/\\d[\\d']*/, \"number.php\"],\n      [/\\d/, \"number.php\"]\n    ],\n    phpComment: [\n      [/\\*\\//, \"comment.php\", \"@pop\"],\n      [/[^*]+/, \"comment.php\"],\n      [/./, \"comment.php\"]\n    ],\n    phpLineComment: [\n      [/\\?>/, { token: \"@rematch\", next: \"@pop\" }],\n      [/.$/, \"comment.php\", \"@pop\"],\n      [/[^?]+$/, \"comment.php\", \"@pop\"],\n      [/[^?]+/, \"comment.php\"],\n      [/./, \"comment.php\"]\n    ],\n    phpDoubleQuoteString: [\n      [/[^\\\\\"]+/, \"string.php\"],\n      [/@escapes/, \"string.escape.php\"],\n      [/\\\\./, \"string.escape.invalid.php\"],\n      [/\"/, \"string.php\", \"@pop\"]\n    ],\n    phpSingleQuoteString: [\n      [/[^\\\\']+/, \"string.php\"],\n      [/@escapes/, \"string.escape.php\"],\n      [/\\\\./, \"string.escape.invalid.php\"],\n      [/'/, \"string.php\", \"@pop\"]\n    ]\n  },\n  phpKeywords: [\n    \"abstract\",\n    \"and\",\n    \"array\",\n    \"as\",\n    \"break\",\n    \"callable\",\n    \"case\",\n    \"catch\",\n    \"cfunction\",\n    \"class\",\n    \"clone\",\n    \"const\",\n    \"continue\",\n    \"declare\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"elseif\",\n    \"enddeclare\",\n    \"endfor\",\n    \"endforeach\",\n    \"endif\",\n    \"endswitch\",\n    \"endwhile\",\n    \"extends\",\n    \"false\",\n    \"final\",\n    \"for\",\n    \"foreach\",\n    \"function\",\n    \"global\",\n    \"goto\",\n    \"if\",\n    \"implements\",\n    \"interface\",\n    \"instanceof\",\n    \"insteadof\",\n    \"namespace\",\n    \"new\",\n    \"null\",\n    \"object\",\n    \"old_function\",\n    \"or\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"resource\",\n    \"static\",\n    \"switch\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"true\",\n    \"use\",\n    \"var\",\n    \"while\",\n    \"xor\",\n    \"die\",\n    \"echo\",\n    \"empty\",\n    \"exit\",\n    \"eval\",\n    \"include\",\n    \"include_once\",\n    \"isset\",\n    \"list\",\n    \"require\",\n    \"require_once\",\n    \"return\",\n    \"print\",\n    \"unset\",\n    \"yield\",\n    \"__construct\"\n  ],\n  phpCompileTimeConstants: [\n    \"__CLASS__\",\n    \"__DIR__\",\n    \"__FILE__\",\n    \"__LINE__\",\n    \"__NAMESPACE__\",\n    \"__METHOD__\",\n    \"__FUNCTION__\",\n    \"__TRAIT__\"\n  ],\n  phpPreDefinedVariables: [\n    \"$GLOBALS\",\n    \"$_SERVER\",\n    \"$_GET\",\n    \"$_POST\",\n    \"$_FILES\",\n    \"$_REQUEST\",\n    \"$_SESSION\",\n    \"$_ENV\",\n    \"$_COOKIE\",\n    \"$php_errormsg\",\n    \"$HTTP_RAW_POST_DATA\",\n    \"$http_response_header\",\n    \"$argc\",\n    \"$argv\"\n  ],\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/\n};\nexport {\n  conf,\n  language\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","tokenizer","root","token","switchTo","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","phpInSimpleState","include","phpInEmbeddedState","phpRoot","cases","phpComment","phpLineComment","phpDoubleQuoteString","phpSingleQuoteString","phpKeywords","phpCompileTimeConstants","phpPreDefinedVariables","escapes","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"php.df35a2f8.js.map"}