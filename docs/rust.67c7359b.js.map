{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,E,I,E,E,kD,E,iB,C,GAwV/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GAtVF,IAAI,EAAO,CACT,SAAU,CACR,YAAa,KACb,aAAc,CAAC,KAAM,KAAK,AAC5B,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAS,AAAC,EAC5C,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,CACD,QAAS,CACP,QAAS,CACP,MAAO,AAAI,OAAO,6BAClB,IAAK,AAAI,OAAO,+BAClB,CACF,CACF,EACI,EAAW,CACb,aAAc,QACd,aAAc,UACd,SAAU,CACR,KACA,QACA,QACA,MACA,QACA,QACA,WACA,QACA,MACA,OACA,OACA,SACA,QACA,KACA,MACA,KACA,OACA,KACA,MACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,SACA,OACA,SACA,SACA,QACA,QACA,OACA,MACA,OACA,SACA,MACA,QACA,QACA,QACA,UACA,QACA,SACA,WACA,UACA,SACA,KACA,QACA,QACA,WACA,WACA,OACA,OACA,OACA,SACA,SACA,UACA,UACA,QACD,CACD,aAAc,CACZ,OACA,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,QACA,OACA,OACA,KACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,SACA,SACA,UACA,WACA,SACA,OACA,SACA,MACA,SACA,SACA,UACA,UACA,UACA,WACA,QACA,SACA,SACA,UACA,SACA,YACA,UACA,SACA,aACA,cACA,WACA,YACA,QACA,QACA,QACA,QACA,SACA,UACD,CACD,UAAW,CAAC,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,QAAS,KAAM,MAAM,CAC1E,iBAAkB,CAChB,eACA,eACA,WACA,MACA,WACA,WACA,WACA,SACA,SACA,SACA,SACA,YACA,eACA,WACA,UACA,WACA,WACA,SACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,UACA,OACA,OACA,OACA,OACA,eACA,gBACA,gBACD,CACD,cAAe,CACb,UACA,SACA,WACA,SACA,eACA,eACA,SACA,WACD,CACD,UAAW,CACT,IACA,KACA,IACA,KACA,IACA,KACA,KACA,IACA,KACA,IACA,KACA,IACA,KACA,K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","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/rust/rust.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"lKaCl\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/rust/rust.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf);\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar conf = {\n    comments: {\n        lineComment: \"//\",\n        blockComment: [\n            \"/*\",\n            \"*/\"\n        ]\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"',\n            notIn: [\n                \"string\"\n            ]\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n        }\n    }\n};\nvar language = {\n    tokenPostfix: \".rust\",\n    defaultToken: \"invalid\",\n    keywords: [\n        \"as\",\n        \"async\",\n        \"await\",\n        \"box\",\n        \"break\",\n        \"const\",\n        \"continue\",\n        \"crate\",\n        \"dyn\",\n        \"else\",\n        \"enum\",\n        \"extern\",\n        \"false\",\n        \"fn\",\n        \"for\",\n        \"if\",\n        \"impl\",\n        \"in\",\n        \"let\",\n        \"loop\",\n        \"match\",\n        \"mod\",\n        \"move\",\n        \"mut\",\n        \"pub\",\n        \"ref\",\n        \"return\",\n        \"self\",\n        \"static\",\n        \"struct\",\n        \"super\",\n        \"trait\",\n        \"true\",\n        \"try\",\n        \"type\",\n        \"unsafe\",\n        \"use\",\n        \"where\",\n        \"while\",\n        \"catch\",\n        \"default\",\n        \"union\",\n        \"static\",\n        \"abstract\",\n        \"alignof\",\n        \"become\",\n        \"do\",\n        \"final\",\n        \"macro\",\n        \"offsetof\",\n        \"override\",\n        \"priv\",\n        \"proc\",\n        \"pure\",\n        \"sizeof\",\n        \"typeof\",\n        \"unsized\",\n        \"virtual\",\n        \"yield\"\n    ],\n    typeKeywords: [\n        \"Self\",\n        \"m32\",\n        \"m64\",\n        \"m128\",\n        \"f80\",\n        \"f16\",\n        \"f128\",\n        \"int\",\n        \"uint\",\n        \"float\",\n        \"char\",\n        \"bool\",\n        \"u8\",\n        \"u16\",\n        \"u32\",\n        \"u64\",\n        \"f32\",\n        \"f64\",\n        \"i8\",\n        \"i16\",\n        \"i32\",\n        \"i64\",\n        \"str\",\n        \"Option\",\n        \"Either\",\n        \"c_float\",\n        \"c_double\",\n        \"c_void\",\n        \"FILE\",\n        \"fpos_t\",\n        \"DIR\",\n        \"dirent\",\n        \"c_char\",\n        \"c_schar\",\n        \"c_uchar\",\n        \"c_short\",\n        \"c_ushort\",\n        \"c_int\",\n        \"c_uint\",\n        \"c_long\",\n        \"c_ulong\",\n        \"size_t\",\n        \"ptrdiff_t\",\n        \"clock_t\",\n        \"time_t\",\n        \"c_longlong\",\n        \"c_ulonglong\",\n        \"intptr_t\",\n        \"uintptr_t\",\n        \"off_t\",\n        \"dev_t\",\n        \"ino_t\",\n        \"pid_t\",\n        \"mode_t\",\n        \"ssize_t\"\n    ],\n    constants: [\n        \"true\",\n        \"false\",\n        \"Some\",\n        \"None\",\n        \"Left\",\n        \"Right\",\n        \"Ok\",\n        \"Err\"\n    ],\n    supportConstants: [\n        \"EXIT_FAILURE\",\n        \"EXIT_SUCCESS\",\n        \"RAND_MAX\",\n        \"EOF\",\n        \"SEEK_SET\",\n        \"SEEK_CUR\",\n        \"SEEK_END\",\n        \"_IOFBF\",\n        \"_IONBF\",\n        \"_IOLBF\",\n        \"BUFSIZ\",\n        \"FOPEN_MAX\",\n        \"FILENAME_MAX\",\n        \"L_tmpnam\",\n        \"TMP_MAX\",\n        \"O_RDONLY\",\n        \"O_WRONLY\",\n        \"O_RDWR\",\n        \"O_APPEND\",\n        \"O_CREAT\",\n        \"O_EXCL\",\n        \"O_TRUNC\",\n        \"S_IFIFO\",\n        \"S_IFCHR\",\n        \"S_IFBLK\",\n        \"S_IFDIR\",\n        \"S_IFREG\",\n        \"S_IFMT\",\n        \"S_IEXEC\",\n        \"S_IWRITE\",\n        \"S_IREAD\",\n        \"S_IRWXU\",\n        \"S_IXUSR\",\n        \"S_IWUSR\",\n        \"S_IRUSR\",\n        \"F_OK\",\n        \"R_OK\",\n        \"W_OK\",\n        \"X_OK\",\n        \"STDIN_FILENO\",\n        \"STDOUT_FILENO\",\n        \"STDERR_FILENO\"\n    ],\n    supportMacros: [\n        \"format!\",\n        \"print!\",\n        \"println!\",\n        \"panic!\",\n        \"format_args!\",\n        \"unreachable!\",\n        \"write!\",\n        \"writeln!\"\n    ],\n    operators: [\n        \"!\",\n        \"!=\",\n        \"%\",\n        \"%=\",\n        \"&\",\n        \"&=\",\n        \"&&\",\n        \"*\",\n        \"*=\",\n        \"+\",\n        \"+=\",\n        \"-\",\n        \"-=\",\n        \"->\",\n        \".\",\n        \"..\",\n        \"...\",\n        \"/\",\n        \"/=\",\n        \":\",\n        \";\",\n        \"<<\",\n        \"<<=\",\n        \"<\",\n        \"<=\",\n        \"=\",\n        \"==\",\n        \"=>\",\n        \">\",\n        \">=\",\n        \">>\",\n        \">>=\",\n        \"@\",\n        \"^\",\n        \"^=\",\n        \"|\",\n        \"|=\",\n        \"||\",\n        \"_\",\n        \"?\",\n        \"#\"\n    ],\n    escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n    delimiters: /[,]/,\n    symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n    intSuffixes: /[iu](8|16|32|64|128|size)/,\n    floatSuffixes: /f(32|64)/,\n    tokenizer: {\n        root: [\n            // Raw string literals\n            [\n                /r(#*)\"/,\n                {\n                    token: \"string.quote\",\n                    bracket: \"@open\",\n                    next: \"@stringraw.$1\"\n                }\n            ],\n            [\n                /[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n                {\n                    cases: {\n                        \"@typeKeywords\": \"keyword.type\",\n                        \"@keywords\": \"keyword\",\n                        \"@supportConstants\": \"keyword\",\n                        \"@supportMacros\": \"keyword\",\n                        \"@constants\": \"keyword\",\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ],\n            // Designator\n            [\n                /\\$/,\n                \"identifier\"\n            ],\n            // Lifetime annotations\n            [\n                /'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/,\n                \"identifier\"\n            ],\n            // Byte literal\n            [\n                /'(\\S|@escapes)'/,\n                \"string.byteliteral\"\n            ],\n            // Strings\n            [\n                /\"/,\n                {\n                    token: \"string.quote\",\n                    bracket: \"@open\",\n                    next: \"@string\"\n                }\n            ],\n            {\n                include: \"@numbers\"\n            },\n            // Whitespace + comments\n            {\n                include: \"@whitespace\"\n            },\n            [\n                /@delimiters/,\n                {\n                    cases: {\n                        \"@keywords\": \"keyword\",\n                        \"@default\": \"delimiter\"\n                    }\n                }\n            ],\n            [\n                /[{}()\\[\\]<>]/,\n                \"@brackets\"\n            ],\n            [\n                /@symbols/,\n                {\n                    cases: {\n                        \"@operators\": \"operator\",\n                        \"@default\": \"\"\n                    }\n                }\n            ]\n        ],\n        whitespace: [\n            [\n                /[ \\t\\r\\n]+/,\n                \"white\"\n            ],\n            [\n                /\\/\\*/,\n                \"comment\",\n                \"@comment\"\n            ],\n            [\n                /\\/\\/.*$/,\n                \"comment\"\n            ]\n        ],\n        comment: [\n            [\n                /[^\\/*]+/,\n                \"comment\"\n            ],\n            [\n                /\\/\\*/,\n                \"comment\",\n                \"@push\"\n            ],\n            [\n                \"\\\\*/\",\n                \"comment\",\n                \"@pop\"\n            ],\n            [\n                /[\\/*]/,\n                \"comment\"\n            ]\n        ],\n        string: [\n            [\n                /[^\\\\\"]+/,\n                \"string\"\n            ],\n            [\n                /@escapes/,\n                \"string.escape\"\n            ],\n            [\n                /\\\\./,\n                \"string.escape.invalid\"\n            ],\n            [\n                /\"/,\n                {\n                    token: \"string.quote\",\n                    bracket: \"@close\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        stringraw: [\n            [\n                /[^\"#]+/,\n                {\n                    token: \"string\"\n                }\n            ],\n            [\n                /\"(#*)/,\n                {\n                    cases: {\n                        \"$1==$S2\": {\n                            token: \"string.quote\",\n                            bracket: \"@close\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": {\n                            token: \"string\"\n                        }\n                    }\n                }\n            ],\n            [\n                /[\"#]/,\n                {\n                    token: \"string\"\n                }\n            ]\n        ],\n        numbers: [\n            //Octal\n            [\n                /(0o[0-7_]+)(@intSuffixes)?/,\n                {\n                    token: \"number\"\n                }\n            ],\n            //Binary\n            [\n                /(0b[0-1_]+)(@intSuffixes)?/,\n                {\n                    token: \"number\"\n                }\n            ],\n            //Exponent\n            [\n                /[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/,\n                {\n                    token: \"number\"\n                }\n            ],\n            //Float\n            [\n                /\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/,\n                {\n                    token: \"number\"\n                }\n            ],\n            //Hexadecimal\n            [\n                /(0x[\\da-fA-F]+)_?(@intSuffixes)?/,\n                {\n                    token: \"number\"\n                }\n            ],\n            //Integer\n            [\n                /[\\d][\\d_]*(@intSuffixes?)?/,\n                {\n                    token: \"number\"\n                }\n            ]\n        ]\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=rust.67c7359b.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/rust/rust.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"', notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#pragma\\\\s+region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#pragma\\\\s+endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  tokenPostfix: \".rust\",\n  defaultToken: \"invalid\",\n  keywords: [\n    \"as\",\n    \"async\",\n    \"await\",\n    \"box\",\n    \"break\",\n    \"const\",\n    \"continue\",\n    \"crate\",\n    \"dyn\",\n    \"else\",\n    \"enum\",\n    \"extern\",\n    \"false\",\n    \"fn\",\n    \"for\",\n    \"if\",\n    \"impl\",\n    \"in\",\n    \"let\",\n    \"loop\",\n    \"match\",\n    \"mod\",\n    \"move\",\n    \"mut\",\n    \"pub\",\n    \"ref\",\n    \"return\",\n    \"self\",\n    \"static\",\n    \"struct\",\n    \"super\",\n    \"trait\",\n    \"true\",\n    \"try\",\n    \"type\",\n    \"unsafe\",\n    \"use\",\n    \"where\",\n    \"while\",\n    \"catch\",\n    \"default\",\n    \"union\",\n    \"static\",\n    \"abstract\",\n    \"alignof\",\n    \"become\",\n    \"do\",\n    \"final\",\n    \"macro\",\n    \"offsetof\",\n    \"override\",\n    \"priv\",\n    \"proc\",\n    \"pure\",\n    \"sizeof\",\n    \"typeof\",\n    \"unsized\",\n    \"virtual\",\n    \"yield\"\n  ],\n  typeKeywords: [\n    \"Self\",\n    \"m32\",\n    \"m64\",\n    \"m128\",\n    \"f80\",\n    \"f16\",\n    \"f128\",\n    \"int\",\n    \"uint\",\n    \"float\",\n    \"char\",\n    \"bool\",\n    \"u8\",\n    \"u16\",\n    \"u32\",\n    \"u64\",\n    \"f32\",\n    \"f64\",\n    \"i8\",\n    \"i16\",\n    \"i32\",\n    \"i64\",\n    \"str\",\n    \"Option\",\n    \"Either\",\n    \"c_float\",\n    \"c_double\",\n    \"c_void\",\n    \"FILE\",\n    \"fpos_t\",\n    \"DIR\",\n    \"dirent\",\n    \"c_char\",\n    \"c_schar\",\n    \"c_uchar\",\n    \"c_short\",\n    \"c_ushort\",\n    \"c_int\",\n    \"c_uint\",\n    \"c_long\",\n    \"c_ulong\",\n    \"size_t\",\n    \"ptrdiff_t\",\n    \"clock_t\",\n    \"time_t\",\n    \"c_longlong\",\n    \"c_ulonglong\",\n    \"intptr_t\",\n    \"uintptr_t\",\n    \"off_t\",\n    \"dev_t\",\n    \"ino_t\",\n    \"pid_t\",\n    \"mode_t\",\n    \"ssize_t\"\n  ],\n  constants: [\"true\", \"false\", \"Some\", \"None\", \"Left\", \"Right\", \"Ok\", \"Err\"],\n  supportConstants: [\n    \"EXIT_FAILURE\",\n    \"EXIT_SUCCESS\",\n    \"RAND_MAX\",\n    \"EOF\",\n    \"SEEK_SET\",\n    \"SEEK_CUR\",\n    \"SEEK_END\",\n    \"_IOFBF\",\n    \"_IONBF\",\n    \"_IOLBF\",\n    \"BUFSIZ\",\n    \"FOPEN_MAX\",\n    \"FILENAME_MAX\",\n    \"L_tmpnam\",\n    \"TMP_MAX\",\n    \"O_RDONLY\",\n    \"O_WRONLY\",\n    \"O_RDWR\",\n    \"O_APPEND\",\n    \"O_CREAT\",\n    \"O_EXCL\",\n    \"O_TRUNC\",\n    \"S_IFIFO\",\n    \"S_IFCHR\",\n    \"S_IFBLK\",\n    \"S_IFDIR\",\n    \"S_IFREG\",\n    \"S_IFMT\",\n    \"S_IEXEC\",\n    \"S_IWRITE\",\n    \"S_IREAD\",\n    \"S_IRWXU\",\n    \"S_IXUSR\",\n    \"S_IWUSR\",\n    \"S_IRUSR\",\n    \"F_OK\",\n    \"R_OK\",\n    \"W_OK\",\n    \"X_OK\",\n    \"STDIN_FILENO\",\n    \"STDOUT_FILENO\",\n    \"STDERR_FILENO\"\n  ],\n  supportMacros: [\n    \"format!\",\n    \"print!\",\n    \"println!\",\n    \"panic!\",\n    \"format_args!\",\n    \"unreachable!\",\n    \"write!\",\n    \"writeln!\"\n  ],\n  operators: [\n    \"!\",\n    \"!=\",\n    \"%\",\n    \"%=\",\n    \"&\",\n    \"&=\",\n    \"&&\",\n    \"*\",\n    \"*=\",\n    \"+\",\n    \"+=\",\n    \"-\",\n    \"-=\",\n    \"->\",\n    \".\",\n    \"..\",\n    \"...\",\n    \"/\",\n    \"/=\",\n    \":\",\n    \";\",\n    \"<<\",\n    \"<<=\",\n    \"<\",\n    \"<=\",\n    \"=\",\n    \"==\",\n    \"=>\",\n    \">\",\n    \">=\",\n    \">>\",\n    \">>=\",\n    \"@\",\n    \"^\",\n    \"^=\",\n    \"|\",\n    \"|=\",\n    \"||\",\n    \"_\",\n    \"?\",\n    \"#\"\n  ],\n  escapes: /\\\\([nrt0\\\"''\\\\]|x\\h{2}|u\\{\\h{1,6}\\})/,\n  delimiters: /[,]/,\n  symbols: /[\\#\\!\\%\\&\\*\\+\\-\\.\\/\\:\\;\\<\\=\\>\\@\\^\\|_\\?]+/,\n  intSuffixes: /[iu](8|16|32|64|128|size)/,\n  floatSuffixes: /f(32|64)/,\n  tokenizer: {\n    root: [\n      // Raw string literals\n      [/r(#*)\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringraw.$1\" }],\n      [\n        /[a-zA-Z][a-zA-Z0-9_]*!?|_[a-zA-Z0-9_]+/,\n        {\n          cases: {\n            \"@typeKeywords\": \"keyword.type\",\n            \"@keywords\": \"keyword\",\n            \"@supportConstants\": \"keyword\",\n            \"@supportMacros\": \"keyword\",\n            \"@constants\": \"keyword\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      // Designator\n      [/\\$/, \"identifier\"],\n      // Lifetime annotations\n      [/'[a-zA-Z_][a-zA-Z0-9_]*(?=[^\\'])/, \"identifier\"],\n      // Byte literal\n      [/'(\\S|@escapes)'/, \"string.byteliteral\"],\n      // Strings\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      { include: \"@numbers\" },\n      // Whitespace + comments\n      { include: \"@whitespace\" },\n      [\n        /@delimiters/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"delimiter\"\n          }\n        }\n      ],\n      [/[{}()\\[\\]<>]/, \"@brackets\"],\n      [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    stringraw: [\n      [/[^\"#]+/, { token: \"string\" }],\n      [\n        /\"(#*)/,\n        {\n          cases: {\n            \"$1==$S2\": { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" },\n            \"@default\": { token: \"string\" }\n          }\n        }\n      ],\n      [/[\"#]/, { token: \"string\" }]\n    ],\n    numbers: [\n      //Octal\n      [/(0o[0-7_]+)(@intSuffixes)?/, { token: \"number\" }],\n      //Binary\n      [/(0b[0-1_]+)(@intSuffixes)?/, { token: \"number\" }],\n      //Exponent\n      [/[\\d][\\d_]*(\\.[\\d][\\d_]*)?[eE][+-][\\d_]+(@floatSuffixes)?/, { token: \"number\" }],\n      //Float\n      [/\\b(\\d\\.?[\\d_]*)(@floatSuffixes)?\\b/, { token: \"number\" }],\n      //Hexadecimal\n      [/(0x[\\da-fA-F]+)_?(@intSuffixes)?/, { token: \"number\" }],\n      //Integer\n      [/[\\d][\\d_]*(@intSuffixes?)?/, { token: \"number\" }]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","tokenPostfix","defaultToken","keywords","typeKeywords","constants","supportConstants","supportMacros","operators","escapes","delimiters","symbols","intSuffixes","floatSuffixes","tokenizer","root","token","bracket","next","cases","include","whitespace","comment","string","stringraw","numbers","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"rust.67c7359b.js.map"}