{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,E,I,E,E,kD,E,iB,C,GAwQ/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GAtQF,IAAI,EAAO,CACT,SAAU,CACR,YAAa,KACb,aAAc,CAAC,KAAM,KAAK,AAC5B,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,AACH,EACI,EAAW,CACb,aAAc,GACd,aAAc,UACd,WAAY,CAAA,EACZ,SAAU,CACR,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,iBAAkB,EAClD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,mBAAoB,EACpD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,uBAAwB,EACzD,CACD,SAAU,CACR,MACA,MACA,KACA,MACA,YACA,KACA,OACA,OACA,WACA,SACA,SACA,OACA,aACA,SACA,WACA,OACA,MACA,OACA,SACA,KACA,KACA,QACA,YACA,QACA,QACA,MACA,KACA,KACA,WACA,KACA,QACA,SACA,SACA,MACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,MACA,QACD,CACD,gBAAiB,CAAC,OAAQ,OAAQ,QAAS,QAAS,OAAQ,OAAO,CACnE,iBAAkB,CAChB,MACA,OACA,OACA,OACA,QACA,MACA,OACA,WACA,UACA,MACA,MACA,QACA,UACA,IACA,UACA,SACA,MACA,QACA,OACA,KACA,OACA,SACA,OACA,OACA,SACA,MACA,QACA,QACA,MACA,MACA,QACA,iBACA,iBACA,KACA,aACA,UACA,OACA,QACA,gBACA,UACA,UACA,QACA,QACA,QACA,OACA,MACA,OACA,QACA,OACA,YACA,QACA,SACA,YACA,MACA,OACA,MACA,YACA,YACA,UACA,YACA,UACA,WACA,UACA,OACA,OACD,CACD,UAAW,CAET,IACA,IACA,IACA,IACA,IACA,IAEA,IACA,KACA,IACA,IACA,KACA,KAEA,KACA,KACA,SACA,MACD,CACD,QAAS,qDACT,OAAQ,MACR,YAAa,SACb,UAAW,eACX,UAAW,CACT,KAAM,CAAC,CAAC,YAAa,YAAY,CAAE,CAAE,QAAS,QAAS,EAAE,CACzD,OAAQ,CACN,CAAE,QAAS,aAAc,EACzB,CAAE,QAAS,UAAW,EACtB,CAAE,QAAS,UAAW,EAEtB,CAAC,kBAAmB,kBAAkB,CACtC,CACE,uBACA,CACE,MAAO,CACL,oBAAqB,qBACvB,CACF,EACD,CACD,CACE,mBACA,CACE,MAAO,CACL,YAAa,UACb,mBAAoB,qBACpB,WAAY,YACd,CACF,EACD,CACD,CAAC,IAAK,oBAAqB,sBAAsB,CAEjD,CAAC,UAAW,YAAY,CACxB,CACE,gBACA,CACE,MAAO,CACL,aAAc,YACd,WAAY,EACd,CACF,EACD,CACF,CACD,QAAS,CACP,CAAC,gCAAiC,eAAe,CACjD,CAAC,4CAA6C,eAAe,CAC7D,CAAC,mBAAoB,aAAa,CAClC,CAAC,oBAAqB,eAAe,CACrC,CAAC,cAAe,SAAS,CAC1B,CACD,QAAS,CACP,CAAC,kBAAmB,iBAAiB,CAErC,CAAC,kBAAmB,iBAAiB,CAErC,CAAC,IAAK,SAAU,gBAAgB,CAChC,CAAC,IAAK,SAAU,gBAAgB,CACjC,CACD,WAAY,CACV,CAAC,aAAc,QAAQ,CACvB,CAAC,OAAQ,UAAW,WAAW,CAC/B,CAAC,UAAW,UAAU,CACvB,CACD,QAAS,CACP,CAAC,SAAU,UAAU,CACrB,CAAC,SAAU,UAAU,CACrB,CAAC,OAAQ,UAAW,OAAO,CAC3B,CAAC,OAAQ,UAAU,CACpB,CACD,aAAc,CACZ,CAAC,UAAW,SAAS,CACrB,CAAC,WAAY,SAAS,CACtB,CAAC,MAAO,iBAAiB,CACzB,CAAC,IAAK,SAAU,OAAO,CACxB,CACD,aAAc,CACZ,CAAC,UAAW,SAAS,CACrB,CAAC,WAAY,SAAS,CACtB,CAAC,MAAO,iBAAiB,CACzB,CAAC,IAAK,SAAU,OAAO,CACxB,CACD,mBAAoB,CAClB,CAAC,UAAW,oBAAoB,CAChC,CAAC,WAAY,oBAAoB,CACjC,CAAC,MAAO,4BAA4B,CACpC,CAAC,IAAK,oBAAqB,OAAO,CACnC,AACH,CACF,C,E,C,iD,O,E,C,M,C,S,C,C,C,C,C,C,C,EC5QA,EAAQ,cAAc,CAAG,SAAU,CAAC,EAClC,OAAO,GAAK,EAAE,UAAU,CAAG,EAAI,CAAC,QAAS,CAAC,CAC5C,EAEA,EAAQ,iBAAiB,CAAG,SAAU,CAAC,EACrC,OAAO,cAAc,CAAC,EAAG,aAAc,CAAC,MAAO,CAAA,CAAI,EACrD,EAEA,EAAQ,SAAS,CAAG,SAAU,CAAM,CAAE,CAAI,EAkBxC,OAjBA,OAAO,IAAI,CAAC,GAAQ,OAAO,CAAC,SAAU,CAAG,EAE7B,YAAR,GACA,AAAQ,eAAR,GACA,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,EAAM,IAK7C,OAAO,cAAc,CAAC,EAAM,EAAK,CAC/B,WAAY,CAAA,EACZ,IAAK,WACH,OAAO,CAAM,CAAC,EAAI,AACpB,CACF,EACF,GAEO,CACT,EAEA,EAAQ,MAAM,CAAG,SAAU,CAAI,CAAE,CAAQ,CAAE,CAAG,EAC5C,OAAO,cAAc,CAAC,EAAM,EAAU,CACpC,WAAY,CAAA,EACZ,IAAK,CACP,EACF,C,E,C,E,E,E,C,E","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"7PjFP\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/cypher/cypher.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf);\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar conf = {\n    comments: {\n        lineComment: \"//\",\n        blockComment: [\n            \"/*\",\n            \"*/\"\n        ]\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        },\n        {\n            open: \"`\",\n            close: \"`\"\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        },\n        {\n            open: \"`\",\n            close: \"`\"\n        }\n    ]\n};\nvar language = {\n    defaultToken: \"\",\n    tokenPostfix: `.cypher`,\n    ignoreCase: true,\n    brackets: [\n        {\n            open: \"{\",\n            close: \"}\",\n            token: \"delimiter.curly\"\n        },\n        {\n            open: \"[\",\n            close: \"]\",\n            token: \"delimiter.bracket\"\n        },\n        {\n            open: \"(\",\n            close: \")\",\n            token: \"delimiter.parenthesis\"\n        }\n    ],\n    keywords: [\n        \"ALL\",\n        \"AND\",\n        \"AS\",\n        \"ASC\",\n        \"ASCENDING\",\n        \"BY\",\n        \"CALL\",\n        \"CASE\",\n        \"CONTAINS\",\n        \"CREATE\",\n        \"DELETE\",\n        \"DESC\",\n        \"DESCENDING\",\n        \"DETACH\",\n        \"DISTINCT\",\n        \"ELSE\",\n        \"END\",\n        \"ENDS\",\n        \"EXISTS\",\n        \"IN\",\n        \"IS\",\n        \"LIMIT\",\n        \"MANDATORY\",\n        \"MATCH\",\n        \"MERGE\",\n        \"NOT\",\n        \"ON\",\n        \"ON\",\n        \"OPTIONAL\",\n        \"OR\",\n        \"ORDER\",\n        \"REMOVE\",\n        \"RETURN\",\n        \"SET\",\n        \"SKIP\",\n        \"STARTS\",\n        \"THEN\",\n        \"UNION\",\n        \"UNWIND\",\n        \"WHEN\",\n        \"WHERE\",\n        \"WITH\",\n        \"XOR\",\n        \"YIELD\"\n    ],\n    builtinLiterals: [\n        \"true\",\n        \"TRUE\",\n        \"false\",\n        \"FALSE\",\n        \"null\",\n        \"NULL\"\n    ],\n    builtinFunctions: [\n        \"abs\",\n        \"acos\",\n        \"asin\",\n        \"atan\",\n        \"atan2\",\n        \"avg\",\n        \"ceil\",\n        \"coalesce\",\n        \"collect\",\n        \"cos\",\n        \"cot\",\n        \"count\",\n        \"degrees\",\n        \"e\",\n        \"endNode\",\n        \"exists\",\n        \"exp\",\n        \"floor\",\n        \"head\",\n        \"id\",\n        \"keys\",\n        \"labels\",\n        \"last\",\n        \"left\",\n        \"length\",\n        \"log\",\n        \"log10\",\n        \"lTrim\",\n        \"max\",\n        \"min\",\n        \"nodes\",\n        \"percentileCont\",\n        \"percentileDisc\",\n        \"pi\",\n        \"properties\",\n        \"radians\",\n        \"rand\",\n        \"range\",\n        \"relationships\",\n        \"replace\",\n        \"reverse\",\n        \"right\",\n        \"round\",\n        \"rTrim\",\n        \"sign\",\n        \"sin\",\n        \"size\",\n        \"split\",\n        \"sqrt\",\n        \"startNode\",\n        \"stDev\",\n        \"stDevP\",\n        \"substring\",\n        \"sum\",\n        \"tail\",\n        \"tan\",\n        \"timestamp\",\n        \"toBoolean\",\n        \"toFloat\",\n        \"toInteger\",\n        \"toLower\",\n        \"toString\",\n        \"toUpper\",\n        \"trim\",\n        \"type\"\n    ],\n    operators: [\n        // Math operators\n        \"+\",\n        \"-\",\n        \"*\",\n        \"/\",\n        \"%\",\n        \"^\",\n        // Comparison operators\n        \"=\",\n        \"<>\",\n        \"<\",\n        \">\",\n        \"<=\",\n        \">=\",\n        // Pattern operators\n        \"->\",\n        \"<-\",\n        \"-->\",\n        \"<--\"\n    ],\n    escapes: /\\\\(?:[tbnrf\\\\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    digits: /\\d+/,\n    octaldigits: /[0-7]+/,\n    hexdigits: /[0-9a-fA-F]+/,\n    tokenizer: {\n        root: [\n            [\n                /[{}[\\]()]/,\n                \"@brackets\"\n            ],\n            {\n                include: \"common\"\n            }\n        ],\n        common: [\n            {\n                include: \"@whitespace\"\n            },\n            {\n                include: \"@numbers\"\n            },\n            {\n                include: \"@strings\"\n            },\n            // Cypher labels on nodes/relationships, e.g. (n:NodeLabel)-[e:RelationshipLabel]\n            [\n                /:[a-zA-Z_][\\w]*/,\n                \"type.identifier\"\n            ],\n            [\n                /[a-zA-Z_][\\w]*(?=\\()/,\n                {\n                    cases: {\n                        \"@builtinFunctions\": \"predefined.function\"\n                    }\n                }\n            ],\n            [\n                /[a-zA-Z_$][\\w$]*/,\n                {\n                    cases: {\n                        \"@keywords\": \"keyword\",\n                        \"@builtinLiterals\": \"predefined.literal\",\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ],\n            [\n                /`/,\n                \"identifier.escape\",\n                \"@identifierBacktick\"\n            ],\n            // delimiter and operator after number because of `.\\d` floats and `:` in labels\n            [\n                /[;,.:|]/,\n                \"delimiter\"\n            ],\n            [\n                /[<>=%+\\-*/^]+/,\n                {\n                    cases: {\n                        \"@operators\": \"delimiter\",\n                        \"@default\": \"\"\n                    }\n                }\n            ]\n        ],\n        numbers: [\n            [\n                /-?(@digits)[eE](-?(@digits))?/,\n                \"number.float\"\n            ],\n            [\n                /-?(@digits)?\\.(@digits)([eE]-?(@digits))?/,\n                \"number.float\"\n            ],\n            [\n                /-?0x(@hexdigits)/,\n                \"number.hex\"\n            ],\n            [\n                /-?0(@octaldigits)/,\n                \"number.octal\"\n            ],\n            [\n                /-?(@digits)/,\n                \"number\"\n            ]\n        ],\n        strings: [\n            [\n                /\"([^\"\\\\]|\\\\.)*$/,\n                \"string.invalid\"\n            ],\n            // non-teminated string\n            [\n                /'([^'\\\\]|\\\\.)*$/,\n                \"string.invalid\"\n            ],\n            // non-teminated string\n            [\n                /\"/,\n                \"string\",\n                \"@stringDouble\"\n            ],\n            [\n                /'/,\n                \"string\",\n                \"@stringSingle\"\n            ]\n        ],\n        whitespace: [\n            [\n                /[ \\t\\r\\n]+/,\n                \"white\"\n            ],\n            [\n                /\\/\\*/,\n                \"comment\",\n                \"@comment\"\n            ],\n            [\n                /\\/\\/.*$/,\n                \"comment\"\n            ]\n        ],\n        comment: [\n            [\n                /\\/\\/.*/,\n                \"comment\"\n            ],\n            [\n                /[^/*]+/,\n                \"comment\"\n            ],\n            [\n                /\\*\\//,\n                \"comment\",\n                \"@pop\"\n            ],\n            [\n                /[/*]/,\n                \"comment\"\n            ]\n        ],\n        stringDouble: [\n            [\n                /[^\\\\\"]+/,\n                \"string\"\n            ],\n            [\n                /@escapes/,\n                \"string\"\n            ],\n            [\n                /\\\\./,\n                \"string.invalid\"\n            ],\n            [\n                /\"/,\n                \"string\",\n                \"@pop\"\n            ]\n        ],\n        stringSingle: [\n            [\n                /[^\\\\']+/,\n                \"string\"\n            ],\n            [\n                /@escapes/,\n                \"string\"\n            ],\n            [\n                /\\\\./,\n                \"string.invalid\"\n            ],\n            [\n                /'/,\n                \"string\",\n                \"@pop\"\n            ]\n        ],\n        identifierBacktick: [\n            [\n                /[^\\\\`]+/,\n                \"identifier.escape\"\n            ],\n            [\n                /@escapes/,\n                \"identifier.escape\"\n            ],\n            [\n                /\\\\./,\n                \"identifier.escape.invalid\"\n            ],\n            [\n                /`/,\n                \"identifier.escape\",\n                \"@pop\"\n            ]\n        ]\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=cypher.d898bc1a.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/cypher/cypher.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: `.cypher`,\n  ignoreCase: true,\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  keywords: [\n    \"ALL\",\n    \"AND\",\n    \"AS\",\n    \"ASC\",\n    \"ASCENDING\",\n    \"BY\",\n    \"CALL\",\n    \"CASE\",\n    \"CONTAINS\",\n    \"CREATE\",\n    \"DELETE\",\n    \"DESC\",\n    \"DESCENDING\",\n    \"DETACH\",\n    \"DISTINCT\",\n    \"ELSE\",\n    \"END\",\n    \"ENDS\",\n    \"EXISTS\",\n    \"IN\",\n    \"IS\",\n    \"LIMIT\",\n    \"MANDATORY\",\n    \"MATCH\",\n    \"MERGE\",\n    \"NOT\",\n    \"ON\",\n    \"ON\",\n    \"OPTIONAL\",\n    \"OR\",\n    \"ORDER\",\n    \"REMOVE\",\n    \"RETURN\",\n    \"SET\",\n    \"SKIP\",\n    \"STARTS\",\n    \"THEN\",\n    \"UNION\",\n    \"UNWIND\",\n    \"WHEN\",\n    \"WHERE\",\n    \"WITH\",\n    \"XOR\",\n    \"YIELD\"\n  ],\n  builtinLiterals: [\"true\", \"TRUE\", \"false\", \"FALSE\", \"null\", \"NULL\"],\n  builtinFunctions: [\n    \"abs\",\n    \"acos\",\n    \"asin\",\n    \"atan\",\n    \"atan2\",\n    \"avg\",\n    \"ceil\",\n    \"coalesce\",\n    \"collect\",\n    \"cos\",\n    \"cot\",\n    \"count\",\n    \"degrees\",\n    \"e\",\n    \"endNode\",\n    \"exists\",\n    \"exp\",\n    \"floor\",\n    \"head\",\n    \"id\",\n    \"keys\",\n    \"labels\",\n    \"last\",\n    \"left\",\n    \"length\",\n    \"log\",\n    \"log10\",\n    \"lTrim\",\n    \"max\",\n    \"min\",\n    \"nodes\",\n    \"percentileCont\",\n    \"percentileDisc\",\n    \"pi\",\n    \"properties\",\n    \"radians\",\n    \"rand\",\n    \"range\",\n    \"relationships\",\n    \"replace\",\n    \"reverse\",\n    \"right\",\n    \"round\",\n    \"rTrim\",\n    \"sign\",\n    \"sin\",\n    \"size\",\n    \"split\",\n    \"sqrt\",\n    \"startNode\",\n    \"stDev\",\n    \"stDevP\",\n    \"substring\",\n    \"sum\",\n    \"tail\",\n    \"tan\",\n    \"timestamp\",\n    \"toBoolean\",\n    \"toFloat\",\n    \"toInteger\",\n    \"toLower\",\n    \"toString\",\n    \"toUpper\",\n    \"trim\",\n    \"type\"\n  ],\n  operators: [\n    // Math operators\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \"^\",\n    // Comparison operators\n    \"=\",\n    \"<>\",\n    \"<\",\n    \">\",\n    \"<=\",\n    \">=\",\n    // Pattern operators\n    \"->\",\n    \"<-\",\n    \"-->\",\n    \"<--\"\n  ],\n  escapes: /\\\\(?:[tbnrf\\\\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+/,\n  octaldigits: /[0-7]+/,\n  hexdigits: /[0-9a-fA-F]+/,\n  tokenizer: {\n    root: [[/[{}[\\]()]/, \"@brackets\"], { include: \"common\" }],\n    common: [\n      { include: \"@whitespace\" },\n      { include: \"@numbers\" },\n      { include: \"@strings\" },\n      // Cypher labels on nodes/relationships, e.g. (n:NodeLabel)-[e:RelationshipLabel]\n      [/:[a-zA-Z_][\\w]*/, \"type.identifier\"],\n      [\n        /[a-zA-Z_][\\w]*(?=\\()/,\n        {\n          cases: {\n            \"@builtinFunctions\": \"predefined.function\"\n          }\n        }\n      ],\n      [\n        /[a-zA-Z_$][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@builtinLiterals\": \"predefined.literal\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/`/, \"identifier.escape\", \"@identifierBacktick\"],\n      // delimiter and operator after number because of `.\\d` floats and `:` in labels\n      [/[;,.:|]/, \"delimiter\"],\n      [\n        /[<>=%+\\-*/^]+/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ],\n    numbers: [\n      [/-?(@digits)[eE](-?(@digits))?/, \"number.float\"],\n      [/-?(@digits)?\\.(@digits)([eE]-?(@digits))?/, \"number.float\"],\n      [/-?0x(@hexdigits)/, \"number.hex\"],\n      [/-?0(@octaldigits)/, \"number.octal\"],\n      [/-?(@digits)/, \"number\"]\n    ],\n    strings: [\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      // non-teminated string\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n      // non-teminated string\n      [/\"/, \"string\", \"@stringDouble\"],\n      [/'/, \"string\", \"@stringSingle\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    comment: [\n      [/\\/\\/.*/, \"comment\"],\n      [/[^/*]+/, \"comment\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[/*]/, \"comment\"]\n    ],\n    stringDouble: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string\"],\n      [/\\\\./, \"string.invalid\"],\n      [/\"/, \"string\", \"@pop\"]\n    ],\n    stringSingle: [\n      [/[^\\\\']+/, \"string\"],\n      [/@escapes/, \"string\"],\n      [/\\\\./, \"string.invalid\"],\n      [/'/, \"string\", \"@pop\"]\n    ],\n    identifierBacktick: [\n      [/[^\\\\`]+/, \"identifier.escape\"],\n      [/@escapes/, \"identifier.escape\"],\n      [/\\\\./, \"identifier.escape.invalid\"],\n      [/`/, \"identifier.escape\", \"@pop\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","ignoreCase","token","keywords","builtinLiterals","builtinFunctions","operators","escapes","digits","octaldigits","hexdigits","tokenizer","root","include","common","cases","numbers","strings","whitespace","comment","stringDouble","stringSingle","identifierBacktick","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"cypher.d898bc1a.js.map"}