{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,MCmB+B,CAnB/B;;;;;+EAK+E,EAAA,IAypC3E,EACA,EA1pC2E,EAAA,EAAA,kD,E,iB,C,GAoyC/E,EAAA,MAAA,CAAA,EAAA,UAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,oBAAA,IAEE,GAFF,EAAA,MAAA,CAAA,EAAA,oBAAA,IAGE,GAHF,EAAA,MAAA,CAAA,EAAA,qBAAA,IAIE,GAJF,EAAA,MAAA,CAAA,EAAA,2BAAA,IAKE,GALF,EAAA,MAAA,CAAA,EAAA,gBAAA,IAME,GANF,EAAA,MAAA,CAAA,EAAA,eAAA,IAOE,GAPF,EAAA,MAAA,CAAA,EAAA,sBAAA,IAQE,GARF,EAAA,MAAA,CAAA,EAAA,oBAAA,IASE,GATF,EAAA,MAAA,CAAA,EAAA,OAAA,IAUE,GAVF,EAAA,MAAA,CAAA,EAAA,WAAA,IAWE,GAXF,EAAA,MAAA,CAAA,EAAA,iBAAA,IAYE,GAZF,EAAA,MA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","sources":["<anon>","node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js","node_modules/monaco-editor/esm/vs/language/typescript/monaco.contribution.js","node_modules/@parcel/runtime-js/lib/runtime-2f452c80e0c0c075.js","node_modules/@parcel/runtime-js/lib/helpers/browser/css-loader.js","node_modules/@parcel/runtime-js/lib/helpers/cacheLoader.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/browser/js-loader.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"a2WUE\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"Adapter\", ()=>Adapter);\nparcelHelpers.export(exports, \"CodeActionAdaptor\", ()=>CodeActionAdaptor);\nparcelHelpers.export(exports, \"DefinitionAdapter\", ()=>DefinitionAdapter);\nparcelHelpers.export(exports, \"DiagnosticsAdapter\", ()=>DiagnosticsAdapter);\nparcelHelpers.export(exports, \"DocumentHighlightAdapter\", ()=>DocumentHighlightAdapter);\nparcelHelpers.export(exports, \"FormatAdapter\", ()=>FormatAdapter);\nparcelHelpers.export(exports, \"FormatHelper\", ()=>FormatHelper);\nparcelHelpers.export(exports, \"FormatOnTypeAdapter\", ()=>FormatOnTypeAdapter);\nparcelHelpers.export(exports, \"InlayHintsAdapter\", ()=>InlayHintsAdapter);\nparcelHelpers.export(exports, \"Kind\", ()=>Kind);\nparcelHelpers.export(exports, \"LibFiles\", ()=>LibFiles);\nparcelHelpers.export(exports, \"OutlineAdapter\", ()=>OutlineAdapter);\nparcelHelpers.export(exports, \"QuickInfoAdapter\", ()=>QuickInfoAdapter);\nparcelHelpers.export(exports, \"ReferenceAdapter\", ()=>ReferenceAdapter);\nparcelHelpers.export(exports, \"RenameAdapter\", ()=>RenameAdapter);\nparcelHelpers.export(exports, \"SignatureHelpAdapter\", ()=>SignatureHelpAdapter);\nparcelHelpers.export(exports, \"SuggestAdapter\", ()=>SuggestAdapter);\nparcelHelpers.export(exports, \"WorkerManager\", ()=>WorkerManager);\nparcelHelpers.export(exports, \"flattenDiagnosticMessageText\", ()=>flattenDiagnosticMessageText);\nparcelHelpers.export(exports, \"getJavaScriptWorker\", ()=>getJavaScriptWorker);\nparcelHelpers.export(exports, \"getTypeScriptWorker\", ()=>getTypeScriptWorker);\nparcelHelpers.export(exports, \"setupJavaScript\", ()=>setupJavaScript);\nparcelHelpers.export(exports, \"setupTypeScript\", ()=>setupTypeScript);\nvar _editorApiJs = require(\"../../editor/editor.api.js\");\n// src/language/typescript/languageFeatures.ts\nvar _monacoContributionJs = require(\"./monaco.contribution.js\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, _editorApiJs);\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n    constructor(_modeId, _defaults){\n        this._modeId = _modeId;\n        this._defaults = _defaults;\n        this._worker = null;\n        this._client = null;\n        this._configChangeListener = this._defaults.onDidChange(()=>this._stopWorker());\n        this._updateExtraLibsToken = 0;\n        this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(()=>this._updateExtraLibs());\n    }\n    dispose() {\n        this._configChangeListener.dispose();\n        this._extraLibsChangeListener.dispose();\n        this._stopWorker();\n    }\n    _stopWorker() {\n        if (this._worker) {\n            this._worker.dispose();\n            this._worker = null;\n        }\n        this._client = null;\n    }\n    async _updateExtraLibs() {\n        if (!this._worker) return;\n        const myToken = ++this._updateExtraLibsToken;\n        const proxy = await this._worker.getProxy();\n        if (this._updateExtraLibsToken !== myToken) return;\n        proxy.updateExtraLibs(this._defaults.getExtraLibs());\n    }\n    _getClient() {\n        if (!this._client) this._client = (async ()=>{\n            this._worker = monaco_editor_core_exports.editor.createWebWorker({\n                // module that exports the create() method and returns a `TypeScriptWorker` instance\n                moduleId: \"vs/language/typescript/tsWorker\",\n                label: this._modeId,\n                keepIdleModels: true,\n                // passed in to the create() method\n                createData: {\n                    compilerOptions: this._defaults.getCompilerOptions(),\n                    extraLibs: this._defaults.getExtraLibs(),\n                    customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n                    inlayHintsOptions: this._defaults.inlayHintsOptions\n                }\n            });\n            if (this._defaults.getEagerModelSync()) return await this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter((model)=>model.getLanguageId() === this._modeId).map((model)=>model.uri));\n            return await this._worker.getProxy();\n        })();\n        return this._client;\n    }\n    async getLanguageServiceWorker(...resources) {\n        const client = await this._getClient();\n        if (this._worker) await this._worker.withSyncedResources(resources);\n        return client;\n    }\n};\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.decorators.d.ts\"] = true;\nlibFileSet[\"lib.decorators.legacy.d.ts\"] = true;\nlibFileSet[\"lib.dom.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2016.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.date.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.date.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.number.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es2022.array.d.ts\"] = true;\nlibFileSet[\"lib.es2022.d.ts\"] = true;\nlibFileSet[\"lib.es2022.error.d.ts\"] = true;\nlibFileSet[\"lib.es2022.full.d.ts\"] = true;\nlibFileSet[\"lib.es2022.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2022.object.d.ts\"] = true;\nlibFileSet[\"lib.es2022.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2022.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2022.string.d.ts\"] = true;\nlibFileSet[\"lib.es2023.array.d.ts\"] = true;\nlibFileSet[\"lib.es2023.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2023.d.ts\"] = true;\nlibFileSet[\"lib.es2023.full.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.collection.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.decorators.d.ts\"] = true;\nlibFileSet[\"lib.esnext.disposable.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.esnext.object.d.ts\"] = true;\nlibFileSet[\"lib.esnext.promise.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n    if (typeof diag === \"string\") return diag;\n    else if (diag === void 0) return \"\";\n    let result = \"\";\n    if (indent) {\n        result += newLine;\n        for(let i = 0; i < indent; i++)result += \"  \";\n    }\n    result += diag.messageText;\n    indent++;\n    if (diag.next) for (const kid of diag.next)result += flattenDiagnosticMessageText(kid, newLine, indent);\n    return result;\n}\nfunction displayPartsToString(displayParts) {\n    if (displayParts) return displayParts.map((displayPart)=>displayPart.text).join(\"\");\n    return \"\";\n}\nvar Adapter = class {\n    constructor(_worker){\n        this._worker = _worker;\n    }\n    // protected _positionToOffset(model: editor.ITextModel, position: monaco.IPosition): number {\n    // \treturn model.getOffsetAt(position);\n    // }\n    // protected _offsetToPosition(model: editor.ITextModel, offset: number): monaco.IPosition {\n    // \treturn model.getPositionAt(offset);\n    // }\n    _textSpanToRange(model, span) {\n        let p1 = model.getPositionAt(span.start);\n        let p2 = model.getPositionAt(span.start + span.length);\n        let { lineNumber: startLineNumber, column: startColumn } = p1;\n        let { lineNumber: endLineNumber, column: endColumn } = p2;\n        return {\n            startLineNumber,\n            startColumn,\n            endLineNumber,\n            endColumn\n        };\n    }\n};\nvar LibFiles = class {\n    constructor(_worker){\n        this._worker = _worker;\n        this._libFiles = {};\n        this._hasFetchedLibFiles = false;\n        this._fetchLibFilesPromise = null;\n    }\n    isLibFile(uri) {\n        if (!uri) return false;\n        if (uri.path.indexOf(\"/lib.\") === 0) return !!libFileSet[uri.path.slice(1)];\n        return false;\n    }\n    getOrCreateModel(fileName) {\n        const uri = monaco_editor_core_exports.Uri.parse(fileName);\n        const model = monaco_editor_core_exports.editor.getModel(uri);\n        if (model) return model;\n        if (this.isLibFile(uri) && this._hasFetchedLibFiles) return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n        const matchedLibFile = (0, _monacoContributionJs.typescriptDefaults).getExtraLibs()[fileName];\n        if (matchedLibFile) return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n        return null;\n    }\n    _containsLibFile(uris) {\n        for (let uri of uris){\n            if (this.isLibFile(uri)) return true;\n        }\n        return false;\n    }\n    async fetchLibFilesIfNecessary(uris) {\n        if (!this._containsLibFile(uris)) return;\n        await this._fetchLibFiles();\n    }\n    _fetchLibFiles() {\n        if (!this._fetchLibFilesPromise) this._fetchLibFilesPromise = this._worker().then((w)=>w.getLibFiles()).then((libFiles)=>{\n            this._hasFetchedLibFiles = true;\n            this._libFiles = libFiles;\n        });\n        return this._fetchLibFilesPromise;\n    }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n    constructor(_libFiles, _defaults, _selector, worker){\n        super(worker);\n        this._libFiles = _libFiles;\n        this._defaults = _defaults;\n        this._selector = _selector;\n        this._disposables = [];\n        this._listener = /* @__PURE__ */ Object.create(null);\n        const onModelAdd = (model)=>{\n            if (model.getLanguageId() !== _selector) return;\n            const maybeValidate = ()=>{\n                const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n                if (onlyVisible) {\n                    if (model.isAttachedToEditor()) this._doValidate(model);\n                } else this._doValidate(model);\n            };\n            let handle;\n            const changeSubscription = model.onDidChangeContent(()=>{\n                clearTimeout(handle);\n                handle = window.setTimeout(maybeValidate, 500);\n            });\n            const visibleSubscription = model.onDidChangeAttached(()=>{\n                const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n                if (onlyVisible) {\n                    if (model.isAttachedToEditor()) maybeValidate();\n                    else monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n                }\n            });\n            this._listener[model.uri.toString()] = {\n                dispose () {\n                    changeSubscription.dispose();\n                    visibleSubscription.dispose();\n                    clearTimeout(handle);\n                }\n            };\n            maybeValidate();\n        };\n        const onModelRemoved = (model)=>{\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n            const key = model.uri.toString();\n            if (this._listener[key]) {\n                this._listener[key].dispose();\n                delete this._listener[key];\n            }\n        };\n        this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel((model)=>onModelAdd(model)));\n        this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n        this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage((event)=>{\n            onModelRemoved(event.model);\n            onModelAdd(event.model);\n        }));\n        this._disposables.push({\n            dispose () {\n                for (const model of monaco_editor_core_exports.editor.getModels())onModelRemoved(model);\n            }\n        });\n        const recomputeDiagostics = ()=>{\n            for (const model of monaco_editor_core_exports.editor.getModels()){\n                onModelRemoved(model);\n                onModelAdd(model);\n            }\n        };\n        this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n        this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n        monaco_editor_core_exports.editor.getModels().forEach((model)=>onModelAdd(model));\n    }\n    dispose() {\n        this._disposables.forEach((d)=>d && d.dispose());\n        this._disposables = [];\n    }\n    async _doValidate(model) {\n        const worker = await this._worker(model.uri);\n        if (model.isDisposed()) return;\n        const promises = [];\n        const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n        if (!noSyntaxValidation) promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n        if (!noSemanticValidation) promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n        if (!noSuggestionDiagnostics) promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n        const allDiagnostics = await Promise.all(promises);\n        if (!allDiagnostics || model.isDisposed()) return;\n        const diagnostics = allDiagnostics.reduce((p, c)=>c.concat(p), []).filter((d)=>(this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n        const relatedUris = diagnostics.map((d)=>d.relatedInformation || []).reduce((p, c)=>c.concat(p), []).map((relatedInformation)=>relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n        await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n        if (model.isDisposed()) return;\n        monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map((d)=>this._convertDiagnostics(model, d)));\n    }\n    _convertDiagnostics(model, diag) {\n        const diagStart = diag.start || 0;\n        const diagLength = diag.length || 1;\n        const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n        const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(diagStart + diagLength);\n        const tags = [];\n        if (diag.reportsUnnecessary) tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n        if (diag.reportsDeprecated) tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n        return {\n            severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n            startLineNumber,\n            startColumn,\n            endLineNumber,\n            endColumn,\n            message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n            code: diag.code.toString(),\n            tags,\n            relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n        };\n    }\n    _convertRelatedInformation(model, relatedInformation) {\n        if (!relatedInformation) return [];\n        const result = [];\n        relatedInformation.forEach((info)=>{\n            let relatedResource = model;\n            if (info.file) relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n            if (!relatedResource) return;\n            const infoStart = info.start || 0;\n            const infoLength = info.length || 1;\n            const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n            const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(infoStart + infoLength);\n            result.push({\n                resource: relatedResource.uri,\n                startLineNumber,\n                startColumn,\n                endLineNumber,\n                endColumn,\n                message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n            });\n        });\n        return result;\n    }\n    _tsDiagnosticCategoryToMarkerSeverity(category) {\n        switch(category){\n            case 1 /* Error */ :\n                return monaco_editor_core_exports.MarkerSeverity.Error;\n            case 3 /* Message */ :\n                return monaco_editor_core_exports.MarkerSeverity.Info;\n            case 0 /* Warning */ :\n                return monaco_editor_core_exports.MarkerSeverity.Warning;\n            case 2 /* Suggestion */ :\n                return monaco_editor_core_exports.MarkerSeverity.Hint;\n        }\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n    }\n};\nvar SuggestAdapter = class _SuggestAdapter extends Adapter {\n    get triggerCharacters() {\n        return [\n            \".\"\n        ];\n    }\n    async provideCompletionItems(model, position, _context, token) {\n        const wordInfo = model.getWordUntilPosition(position);\n        const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n        const resource = model.uri;\n        const offset = model.getOffsetAt(position);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n        if (!info || model.isDisposed()) return;\n        const suggestions = info.entries.map((entry)=>{\n            let range = wordRange;\n            if (entry.replacementSpan) {\n                const p1 = model.getPositionAt(entry.replacementSpan.start);\n                const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n                range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n            }\n            const tags = [];\n            if (entry.kindModifiers !== void 0 && entry.kindModifiers.indexOf(\"deprecated\") !== -1) tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n            return {\n                uri: resource,\n                position,\n                offset,\n                range,\n                label: entry.name,\n                insertText: entry.name,\n                sortText: entry.sortText,\n                kind: _SuggestAdapter.convertKind(entry.kind),\n                tags\n            };\n        });\n        return {\n            suggestions\n        };\n    }\n    async resolveCompletionItem(item, token) {\n        const myItem = item;\n        const resource = myItem.uri;\n        const position = myItem.position;\n        const offset = myItem.offset;\n        const worker = await this._worker(resource);\n        const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n        if (!details) return myItem;\n        return {\n            uri: resource,\n            position,\n            label: details.name,\n            kind: _SuggestAdapter.convertKind(details.kind),\n            detail: displayPartsToString(details.displayParts),\n            documentation: {\n                value: _SuggestAdapter.createDocumentationString(details)\n            }\n        };\n    }\n    static convertKind(kind) {\n        switch(kind){\n            case Kind.primitiveType:\n            case Kind.keyword:\n                return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n            case Kind.variable:\n            case Kind.localVariable:\n                return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n            case Kind.memberVariable:\n            case Kind.memberGetAccessor:\n            case Kind.memberSetAccessor:\n                return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n            case Kind.function:\n            case Kind.memberFunction:\n            case Kind.constructSignature:\n            case Kind.callSignature:\n            case Kind.indexSignature:\n                return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n            case Kind.enum:\n                return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n            case Kind.module:\n                return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n            case Kind.class:\n                return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n            case Kind.interface:\n                return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n            case Kind.warning:\n                return monaco_editor_core_exports.languages.CompletionItemKind.File;\n        }\n        return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n    }\n    static createDocumentationString(details) {\n        let documentationString = displayPartsToString(details.documentation);\n        if (details.tags) for (const tag of details.tags)documentationString += `\n\n${tagToString(tag)}`;\n        return documentationString;\n    }\n};\nfunction tagToString(tag) {\n    let tagLabel = `*@${tag.name}*`;\n    if (tag.name === \"param\" && tag.text) {\n        const [paramName, ...rest] = tag.text;\n        tagLabel += `\\`${paramName.text}\\``;\n        if (rest.length > 0) tagLabel += ` \\u2014 ${rest.map((r)=>r.text).join(\" \")}`;\n    } else if (Array.isArray(tag.text)) tagLabel += ` \\u2014 ${tag.text.map((r)=>r.text).join(\" \")}`;\n    else if (tag.text) tagLabel += ` \\u2014 ${tag.text}`;\n    return tagLabel;\n}\nvar SignatureHelpAdapter = class _SignatureHelpAdapter extends Adapter {\n    constructor(){\n        super(...arguments);\n        this.signatureHelpTriggerCharacters = [\n            \"(\",\n            \",\"\n        ];\n    }\n    static _toSignatureHelpTriggerReason(context) {\n        switch(context.triggerKind){\n            case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n                if (context.triggerCharacter) {\n                    if (context.isRetrigger) return {\n                        kind: \"retrigger\",\n                        triggerCharacter: context.triggerCharacter\n                    };\n                    else return {\n                        kind: \"characterTyped\",\n                        triggerCharacter: context.triggerCharacter\n                    };\n                } else return {\n                    kind: \"invoked\"\n                };\n            case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n                return context.isRetrigger ? {\n                    kind: \"retrigger\"\n                } : {\n                    kind: \"invoked\"\n                };\n            case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n            default:\n                return {\n                    kind: \"invoked\"\n                };\n        }\n    }\n    async provideSignatureHelp(model, position, token, context) {\n        const resource = model.uri;\n        const offset = model.getOffsetAt(position);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n            triggerReason: _SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n        });\n        if (!info || model.isDisposed()) return;\n        const ret = {\n            activeSignature: info.selectedItemIndex,\n            activeParameter: info.argumentIndex,\n            signatures: []\n        };\n        info.items.forEach((item)=>{\n            const signature = {\n                label: \"\",\n                parameters: []\n            };\n            signature.documentation = {\n                value: displayPartsToString(item.documentation)\n            };\n            signature.label += displayPartsToString(item.prefixDisplayParts);\n            item.parameters.forEach((p, i, a)=>{\n                const label = displayPartsToString(p.displayParts);\n                const parameter = {\n                    label,\n                    documentation: {\n                        value: displayPartsToString(p.documentation)\n                    }\n                };\n                signature.label += label;\n                signature.parameters.push(parameter);\n                if (i < a.length - 1) signature.label += displayPartsToString(item.separatorDisplayParts);\n            });\n            signature.label += displayPartsToString(item.suffixDisplayParts);\n            ret.signatures.push(signature);\n        });\n        return {\n            value: ret,\n            dispose () {}\n        };\n    }\n};\nvar QuickInfoAdapter = class extends Adapter {\n    async provideHover(model, position, token) {\n        const resource = model.uri;\n        const offset = model.getOffsetAt(position);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n        if (!info || model.isDisposed()) return;\n        const documentation = displayPartsToString(info.documentation);\n        const tags = info.tags ? info.tags.map((tag)=>tagToString(tag)).join(\"  \\n\\n\") : \"\";\n        const contents = displayPartsToString(info.displayParts);\n        return {\n            range: this._textSpanToRange(model, info.textSpan),\n            contents: [\n                {\n                    value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n                },\n                {\n                    value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n                }\n            ]\n        };\n    }\n};\nvar DocumentHighlightAdapter = class extends Adapter {\n    async provideDocumentHighlights(model, position, token) {\n        const resource = model.uri;\n        const offset = model.getOffsetAt(position);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const entries = await worker.getDocumentHighlights(resource.toString(), offset, [\n            resource.toString()\n        ]);\n        if (!entries || model.isDisposed()) return;\n        return entries.flatMap((entry)=>{\n            return entry.highlightSpans.map((highlightSpans)=>{\n                return {\n                    range: this._textSpanToRange(model, highlightSpans.textSpan),\n                    kind: highlightSpans.kind === \"writtenReference\" ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n                };\n            });\n        });\n    }\n};\nvar DefinitionAdapter = class extends Adapter {\n    constructor(_libFiles, worker){\n        super(worker);\n        this._libFiles = _libFiles;\n    }\n    async provideDefinition(model, position, token) {\n        const resource = model.uri;\n        const offset = model.getOffsetAt(position);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n        if (!entries || model.isDisposed()) return;\n        await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry)=>monaco_editor_core_exports.Uri.parse(entry.fileName)));\n        if (model.isDisposed()) return;\n        const result = [];\n        for (let entry of entries){\n            const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n            if (refModel) result.push({\n                uri: refModel.uri,\n                range: this._textSpanToRange(refModel, entry.textSpan)\n            });\n        }\n        return result;\n    }\n};\nvar ReferenceAdapter = class extends Adapter {\n    constructor(_libFiles, worker){\n        super(worker);\n        this._libFiles = _libFiles;\n    }\n    async provideReferences(model, position, context, token) {\n        const resource = model.uri;\n        const offset = model.getOffsetAt(position);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n        if (!entries || model.isDisposed()) return;\n        await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry)=>monaco_editor_core_exports.Uri.parse(entry.fileName)));\n        if (model.isDisposed()) return;\n        const result = [];\n        for (let entry of entries){\n            const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n            if (refModel) result.push({\n                uri: refModel.uri,\n                range: this._textSpanToRange(refModel, entry.textSpan)\n            });\n        }\n        return result;\n    }\n};\nvar OutlineAdapter = class extends Adapter {\n    async provideDocumentSymbols(model, token) {\n        const resource = model.uri;\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const root = await worker.getNavigationTree(resource.toString());\n        if (!root || model.isDisposed()) return;\n        const convert = (item, containerLabel)=>{\n            const result2 = {\n                name: item.text,\n                detail: \"\",\n                kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n                range: this._textSpanToRange(model, item.spans[0]),\n                selectionRange: this._textSpanToRange(model, item.spans[0]),\n                tags: [],\n                children: item.childItems?.map((child)=>convert(child, item.text)),\n                containerName: containerLabel\n            };\n            return result2;\n        };\n        const result = root.childItems ? root.childItems.map((item)=>convert(item)) : [];\n        return result;\n    }\n};\nvar Kind = class {\n    static{\n        this.unknown = \"\";\n    }\n    static{\n        this.keyword = \"keyword\";\n    }\n    static{\n        this.script = \"script\";\n    }\n    static{\n        this.module = \"module\";\n    }\n    static{\n        this.class = \"class\";\n    }\n    static{\n        this.interface = \"interface\";\n    }\n    static{\n        this.type = \"type\";\n    }\n    static{\n        this.enum = \"enum\";\n    }\n    static{\n        this.variable = \"var\";\n    }\n    static{\n        this.localVariable = \"local var\";\n    }\n    static{\n        this.function = \"function\";\n    }\n    static{\n        this.localFunction = \"local function\";\n    }\n    static{\n        this.memberFunction = \"method\";\n    }\n    static{\n        this.memberGetAccessor = \"getter\";\n    }\n    static{\n        this.memberSetAccessor = \"setter\";\n    }\n    static{\n        this.memberVariable = \"property\";\n    }\n    static{\n        this.constructorImplementation = \"constructor\";\n    }\n    static{\n        this.callSignature = \"call\";\n    }\n    static{\n        this.indexSignature = \"index\";\n    }\n    static{\n        this.constructSignature = \"construct\";\n    }\n    static{\n        this.parameter = \"parameter\";\n    }\n    static{\n        this.typeParameter = \"type parameter\";\n    }\n    static{\n        this.primitiveType = \"primitive type\";\n    }\n    static{\n        this.label = \"label\";\n    }\n    static{\n        this.alias = \"alias\";\n    }\n    static{\n        this.const = \"const\";\n    }\n    static{\n        this.let = \"let\";\n    }\n    static{\n        this.warning = \"warning\";\n    }\n};\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n    static _convertOptions(options) {\n        return {\n            ConvertTabsToSpaces: options.insertSpaces,\n            TabSize: options.tabSize,\n            IndentSize: options.tabSize,\n            IndentStyle: 2 /* Smart */ ,\n            NewLineCharacter: \"\\n\",\n            InsertSpaceAfterCommaDelimiter: true,\n            InsertSpaceAfterSemicolonInForStatements: true,\n            InsertSpaceBeforeAndAfterBinaryOperators: true,\n            InsertSpaceAfterKeywordsInControlFlowStatements: true,\n            InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n            InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n            InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n            PlaceOpenBraceOnNewLineForControlBlocks: false,\n            PlaceOpenBraceOnNewLineForFunctions: false\n        };\n    }\n    _convertTextChanges(model, change) {\n        return {\n            text: change.newText,\n            range: this._textSpanToRange(model, change.span)\n        };\n    }\n};\nvar FormatAdapter = class extends FormatHelper {\n    constructor(){\n        super(...arguments);\n        this.canFormatMultipleRanges = false;\n    }\n    async provideDocumentRangeFormattingEdits(model, range, options, token) {\n        const resource = model.uri;\n        const startOffset = model.getOffsetAt({\n            lineNumber: range.startLineNumber,\n            column: range.startColumn\n        });\n        const endOffset = model.getOffsetAt({\n            lineNumber: range.endLineNumber,\n            column: range.endColumn\n        });\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n        if (!edits || model.isDisposed()) return;\n        return edits.map((edit)=>this._convertTextChanges(model, edit));\n    }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n    get autoFormatTriggerCharacters() {\n        return [\n            \";\",\n            \"}\",\n            \"\\n\"\n        ];\n    }\n    async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n        const resource = model.uri;\n        const offset = model.getOffsetAt(position);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n        if (!edits || model.isDisposed()) return;\n        return edits.map((edit)=>this._convertTextChanges(model, edit));\n    }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n    async provideCodeActions(model, range, context, token) {\n        const resource = model.uri;\n        const start = model.getOffsetAt({\n            lineNumber: range.startLineNumber,\n            column: range.startColumn\n        });\n        const end = model.getOffsetAt({\n            lineNumber: range.endLineNumber,\n            column: range.endColumn\n        });\n        const formatOptions = FormatHelper._convertOptions(model.getOptions());\n        const errorCodes = context.markers.filter((m)=>m.code).map((m)=>m.code).map(Number);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n        if (!codeFixes || model.isDisposed()) return {\n            actions: [],\n            dispose: ()=>{}\n        };\n        const actions = codeFixes.filter((fix)=>{\n            return fix.changes.filter((change)=>change.isNewFile).length === 0;\n        }).map((fix)=>{\n            return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n        });\n        return {\n            actions,\n            dispose: ()=>{}\n        };\n    }\n    _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n        const edits = [];\n        for (const change of codeFix.changes)for (const textChange of change.textChanges)edits.push({\n            resource: model.uri,\n            versionId: void 0,\n            textEdit: {\n                range: this._textSpanToRange(model, textChange.span),\n                text: textChange.newText\n            }\n        });\n        const action = {\n            title: codeFix.description,\n            edit: {\n                edits\n            },\n            diagnostics: context.markers,\n            kind: \"quickfix\"\n        };\n        return action;\n    }\n};\nvar RenameAdapter = class extends Adapter {\n    constructor(_libFiles, worker){\n        super(worker);\n        this._libFiles = _libFiles;\n    }\n    async provideRenameEdits(model, position, newName, token) {\n        const resource = model.uri;\n        const fileName = resource.toString();\n        const offset = model.getOffsetAt(position);\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return;\n        const renameInfo = await worker.getRenameInfo(fileName, offset, {\n            allowRenameOfImportPath: false\n        });\n        if (renameInfo.canRename === false) return {\n            edits: [],\n            rejectReason: renameInfo.localizedErrorMessage\n        };\n        if (renameInfo.fileToRename !== void 0) throw new Error(\"Renaming files is not supported.\");\n        const renameLocations = await worker.findRenameLocations(fileName, offset, /*strings*/ false, /*comments*/ false, /*prefixAndSuffix*/ false);\n        if (!renameLocations || model.isDisposed()) return;\n        const edits = [];\n        for (const renameLocation of renameLocations){\n            const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n            if (model2) edits.push({\n                resource: model2.uri,\n                versionId: void 0,\n                textEdit: {\n                    range: this._textSpanToRange(model2, renameLocation.textSpan),\n                    text: newName\n                }\n            });\n            else throw new Error(`Unknown file ${renameLocation.fileName}.`);\n        }\n        return {\n            edits\n        };\n    }\n};\nvar InlayHintsAdapter = class extends Adapter {\n    async provideInlayHints(model, range, token) {\n        const resource = model.uri;\n        const fileName = resource.toString();\n        const start = model.getOffsetAt({\n            lineNumber: range.startLineNumber,\n            column: range.startColumn\n        });\n        const end = model.getOffsetAt({\n            lineNumber: range.endLineNumber,\n            column: range.endColumn\n        });\n        const worker = await this._worker(resource);\n        if (model.isDisposed()) return null;\n        const tsHints = await worker.provideInlayHints(fileName, start, end);\n        const hints = tsHints.map((hint)=>{\n            return {\n                ...hint,\n                label: hint.text,\n                position: model.getPositionAt(hint.position),\n                kind: this._convertHintKind(hint.kind)\n            };\n        });\n        return {\n            hints,\n            dispose: ()=>{}\n        };\n    }\n    _convertHintKind(kind) {\n        switch(kind){\n            case \"Parameter\":\n                return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n            case \"Type\":\n                return monaco_editor_core_exports.languages.InlayHintKind.Type;\n            default:\n                return monaco_editor_core_exports.languages.InlayHintKind.Type;\n        }\n    }\n};\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n    typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n    javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n    return new Promise((resolve, reject)=>{\n        if (!javaScriptWorker) return reject(\"JavaScript not registered!\");\n        resolve(javaScriptWorker);\n    });\n}\nfunction getTypeScriptWorker() {\n    return new Promise((resolve, reject)=>{\n        if (!typeScriptWorker) return reject(\"TypeScript not registered!\");\n        resolve(typeScriptWorker);\n    });\n}\nfunction setupMode(defaults, modeId) {\n    const disposables = [];\n    const providers = [];\n    const client = new WorkerManager(modeId, defaults);\n    disposables.push(client);\n    const worker = (...uris)=>{\n        return client.getLanguageServiceWorker(...uris);\n    };\n    const libFiles = new LibFiles(worker);\n    function registerProviders() {\n        const { modeConfiguration } = defaults;\n        disposeAll(providers);\n        if (modeConfiguration.completionItems) providers.push(monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker)));\n        if (modeConfiguration.signatureHelp) providers.push(monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker)));\n        if (modeConfiguration.hovers) providers.push(monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker)));\n        if (modeConfiguration.documentHighlights) providers.push(monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new DocumentHighlightAdapter(worker)));\n        if (modeConfiguration.definitions) providers.push(monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker)));\n        if (modeConfiguration.references) providers.push(monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker)));\n        if (modeConfiguration.documentSymbols) providers.push(monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker)));\n        if (modeConfiguration.rename) providers.push(monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker)));\n        if (modeConfiguration.documentRangeFormattingEdits) providers.push(monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker)));\n        if (modeConfiguration.onTypeFormattingEdits) providers.push(monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker)));\n        if (modeConfiguration.codeActions) providers.push(monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker)));\n        if (modeConfiguration.inlayHints) providers.push(monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker)));\n        if (modeConfiguration.diagnostics) providers.push(new DiagnosticsAdapter(libFiles, defaults, modeId, worker));\n    }\n    registerProviders();\n    disposables.push(asDisposable(providers));\n    return worker;\n}\nfunction asDisposable(disposables) {\n    return {\n        dispose: ()=>disposeAll(disposables)\n    };\n}\nfunction disposeAll(disposables) {\n    while(disposables.length)disposables.pop().dispose();\n}\n\n},{\"../../editor/editor.api.js\":\"6ZKre\",\"./monaco.contribution.js\":\"jS83e\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"jS83e\":[function(require,module,exports,__globalThis) {\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"JsxEmit\", ()=>JsxEmit);\nparcelHelpers.export(exports, \"ModuleKind\", ()=>ModuleKind);\nparcelHelpers.export(exports, \"ModuleResolutionKind\", ()=>ModuleResolutionKind);\nparcelHelpers.export(exports, \"NewLineKind\", ()=>NewLineKind);\nparcelHelpers.export(exports, \"ScriptTarget\", ()=>ScriptTarget);\nparcelHelpers.export(exports, \"getJavaScriptWorker\", ()=>getJavaScriptWorker);\nparcelHelpers.export(exports, \"getTypeScriptWorker\", ()=>getTypeScriptWorker);\nparcelHelpers.export(exports, \"javascriptDefaults\", ()=>javascriptDefaults);\nparcelHelpers.export(exports, \"typescriptDefaults\", ()=>typescriptDefaults);\nparcelHelpers.export(exports, \"typescriptVersion\", ()=>typescriptVersion2);\nvar _editorApiJs = require(\"../../editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n// src/language/typescript/lib/typescriptServicesMetadata.ts\nvar typescriptVersion = \"5.4.5\";\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, _editorApiJs);\n// src/language/typescript/monaco.contribution.ts\nvar ModuleKind = /* @__PURE__ */ ((ModuleKind2)=>{\n    ModuleKind2[ModuleKind2[\"None\"] = 0] = \"None\";\n    ModuleKind2[ModuleKind2[\"CommonJS\"] = 1] = \"CommonJS\";\n    ModuleKind2[ModuleKind2[\"AMD\"] = 2] = \"AMD\";\n    ModuleKind2[ModuleKind2[\"UMD\"] = 3] = \"UMD\";\n    ModuleKind2[ModuleKind2[\"System\"] = 4] = \"System\";\n    ModuleKind2[ModuleKind2[\"ES2015\"] = 5] = \"ES2015\";\n    ModuleKind2[ModuleKind2[\"ESNext\"] = 99] = \"ESNext\";\n    return ModuleKind2;\n})(ModuleKind || {});\nvar JsxEmit = /* @__PURE__ */ ((JsxEmit2)=>{\n    JsxEmit2[JsxEmit2[\"None\"] = 0] = \"None\";\n    JsxEmit2[JsxEmit2[\"Preserve\"] = 1] = \"Preserve\";\n    JsxEmit2[JsxEmit2[\"React\"] = 2] = \"React\";\n    JsxEmit2[JsxEmit2[\"ReactNative\"] = 3] = \"ReactNative\";\n    JsxEmit2[JsxEmit2[\"ReactJSX\"] = 4] = \"ReactJSX\";\n    JsxEmit2[JsxEmit2[\"ReactJSXDev\"] = 5] = \"ReactJSXDev\";\n    return JsxEmit2;\n})(JsxEmit || {});\nvar NewLineKind = /* @__PURE__ */ ((NewLineKind2)=>{\n    NewLineKind2[NewLineKind2[\"CarriageReturnLineFeed\"] = 0] = \"CarriageReturnLineFeed\";\n    NewLineKind2[NewLineKind2[\"LineFeed\"] = 1] = \"LineFeed\";\n    return NewLineKind2;\n})(NewLineKind || {});\nvar ScriptTarget = /* @__PURE__ */ ((ScriptTarget2)=>{\n    ScriptTarget2[ScriptTarget2[\"ES3\"] = 0] = \"ES3\";\n    ScriptTarget2[ScriptTarget2[\"ES5\"] = 1] = \"ES5\";\n    ScriptTarget2[ScriptTarget2[\"ES2015\"] = 2] = \"ES2015\";\n    ScriptTarget2[ScriptTarget2[\"ES2016\"] = 3] = \"ES2016\";\n    ScriptTarget2[ScriptTarget2[\"ES2017\"] = 4] = \"ES2017\";\n    ScriptTarget2[ScriptTarget2[\"ES2018\"] = 5] = \"ES2018\";\n    ScriptTarget2[ScriptTarget2[\"ES2019\"] = 6] = \"ES2019\";\n    ScriptTarget2[ScriptTarget2[\"ES2020\"] = 7] = \"ES2020\";\n    ScriptTarget2[ScriptTarget2[\"ESNext\"] = 99] = \"ESNext\";\n    ScriptTarget2[ScriptTarget2[\"JSON\"] = 100] = \"JSON\";\n    ScriptTarget2[ScriptTarget2[\"Latest\"] = 99 /* ESNext */ ] = \"Latest\";\n    return ScriptTarget2;\n})(ScriptTarget || {});\nvar ModuleResolutionKind = /* @__PURE__ */ ((ModuleResolutionKind2)=>{\n    ModuleResolutionKind2[ModuleResolutionKind2[\"Classic\"] = 1] = \"Classic\";\n    ModuleResolutionKind2[ModuleResolutionKind2[\"NodeJs\"] = 2] = \"NodeJs\";\n    return ModuleResolutionKind2;\n})(ModuleResolutionKind || {});\nvar LanguageServiceDefaultsImpl = class {\n    constructor(compilerOptions, diagnosticsOptions, workerOptions, inlayHintsOptions, modeConfiguration){\n        this._onDidChange = new monaco_editor_core_exports.Emitter();\n        this._onDidExtraLibsChange = new monaco_editor_core_exports.Emitter();\n        this._extraLibs = /* @__PURE__ */ Object.create(null);\n        this._removedExtraLibs = /* @__PURE__ */ Object.create(null);\n        this._eagerModelSync = false;\n        this.setCompilerOptions(compilerOptions);\n        this.setDiagnosticsOptions(diagnosticsOptions);\n        this.setWorkerOptions(workerOptions);\n        this.setInlayHintsOptions(inlayHintsOptions);\n        this.setModeConfiguration(modeConfiguration);\n        this._onDidExtraLibsChangeTimeout = -1;\n    }\n    get onDidChange() {\n        return this._onDidChange.event;\n    }\n    get onDidExtraLibsChange() {\n        return this._onDidExtraLibsChange.event;\n    }\n    get modeConfiguration() {\n        return this._modeConfiguration;\n    }\n    get workerOptions() {\n        return this._workerOptions;\n    }\n    get inlayHintsOptions() {\n        return this._inlayHintsOptions;\n    }\n    getExtraLibs() {\n        return this._extraLibs;\n    }\n    addExtraLib(content, _filePath) {\n        let filePath;\n        if (typeof _filePath === \"undefined\") filePath = `ts:extralib-${Math.random().toString(36).substring(2, 15)}`;\n        else filePath = _filePath;\n        if (this._extraLibs[filePath] && this._extraLibs[filePath].content === content) return {\n            dispose: ()=>{}\n        };\n        let myVersion = 1;\n        if (this._removedExtraLibs[filePath]) myVersion = this._removedExtraLibs[filePath] + 1;\n        if (this._extraLibs[filePath]) myVersion = this._extraLibs[filePath].version + 1;\n        this._extraLibs[filePath] = {\n            content,\n            version: myVersion\n        };\n        this._fireOnDidExtraLibsChangeSoon();\n        return {\n            dispose: ()=>{\n                let extraLib = this._extraLibs[filePath];\n                if (!extraLib) return;\n                if (extraLib.version !== myVersion) return;\n                delete this._extraLibs[filePath];\n                this._removedExtraLibs[filePath] = myVersion;\n                this._fireOnDidExtraLibsChangeSoon();\n            }\n        };\n    }\n    setExtraLibs(libs) {\n        for(const filePath in this._extraLibs)this._removedExtraLibs[filePath] = this._extraLibs[filePath].version;\n        this._extraLibs = /* @__PURE__ */ Object.create(null);\n        if (libs && libs.length > 0) for (const lib of libs){\n            const filePath = lib.filePath || `ts:extralib-${Math.random().toString(36).substring(2, 15)}`;\n            const content = lib.content;\n            let myVersion = 1;\n            if (this._removedExtraLibs[filePath]) myVersion = this._removedExtraLibs[filePath] + 1;\n            this._extraLibs[filePath] = {\n                content,\n                version: myVersion\n            };\n        }\n        this._fireOnDidExtraLibsChangeSoon();\n    }\n    _fireOnDidExtraLibsChangeSoon() {\n        if (this._onDidExtraLibsChangeTimeout !== -1) return;\n        this._onDidExtraLibsChangeTimeout = window.setTimeout(()=>{\n            this._onDidExtraLibsChangeTimeout = -1;\n            this._onDidExtraLibsChange.fire(void 0);\n        }, 0);\n    }\n    getCompilerOptions() {\n        return this._compilerOptions;\n    }\n    setCompilerOptions(options) {\n        this._compilerOptions = options || /* @__PURE__ */ Object.create(null);\n        this._onDidChange.fire(void 0);\n    }\n    getDiagnosticsOptions() {\n        return this._diagnosticsOptions;\n    }\n    setDiagnosticsOptions(options) {\n        this._diagnosticsOptions = options || /* @__PURE__ */ Object.create(null);\n        this._onDidChange.fire(void 0);\n    }\n    setWorkerOptions(options) {\n        this._workerOptions = options || /* @__PURE__ */ Object.create(null);\n        this._onDidChange.fire(void 0);\n    }\n    setInlayHintsOptions(options) {\n        this._inlayHintsOptions = options || /* @__PURE__ */ Object.create(null);\n        this._onDidChange.fire(void 0);\n    }\n    setMaximumWorkerIdleTime(value) {}\n    setEagerModelSync(value) {\n        this._eagerModelSync = value;\n    }\n    getEagerModelSync() {\n        return this._eagerModelSync;\n    }\n    setModeConfiguration(modeConfiguration) {\n        this._modeConfiguration = modeConfiguration || /* @__PURE__ */ Object.create(null);\n        this._onDidChange.fire(void 0);\n    }\n};\nvar typescriptVersion2 = typescriptVersion;\nvar modeConfigurationDefault = {\n    completionItems: true,\n    hovers: true,\n    documentSymbols: true,\n    definitions: true,\n    references: true,\n    documentHighlights: true,\n    rename: true,\n    diagnostics: true,\n    documentRangeFormattingEdits: true,\n    signatureHelp: true,\n    onTypeFormattingEdits: true,\n    codeActions: true,\n    inlayHints: true\n};\nvar typescriptDefaults = new LanguageServiceDefaultsImpl({\n    allowNonTsExtensions: true,\n    target: 99 /* Latest */ \n}, {\n    noSemanticValidation: false,\n    noSyntaxValidation: false,\n    onlyVisible: false\n}, {}, {}, modeConfigurationDefault);\nvar javascriptDefaults = new LanguageServiceDefaultsImpl({\n    allowNonTsExtensions: true,\n    allowJs: true,\n    target: 99 /* Latest */ \n}, {\n    noSemanticValidation: true,\n    noSyntaxValidation: false,\n    onlyVisible: false\n}, {}, {}, modeConfigurationDefault);\nvar getTypeScriptWorker = ()=>{\n    return getMode().then((mode)=>mode.getTypeScriptWorker());\n};\nvar getJavaScriptWorker = ()=>{\n    return getMode().then((mode)=>mode.getJavaScriptWorker());\n};\nmonaco_editor_core_exports.languages.typescript = {\n    ModuleKind,\n    JsxEmit,\n    NewLineKind,\n    ScriptTarget,\n    ModuleResolutionKind,\n    typescriptVersion: typescriptVersion2,\n    typescriptDefaults,\n    javascriptDefaults,\n    getTypeScriptWorker,\n    getJavaScriptWorker\n};\nfunction getMode() {\n    var resolve, reject;\n    return require(\"8ab55ad7f213c06e\");\n}\nmonaco_editor_core_exports.languages.onLanguage(\"typescript\", ()=>{\n    return getMode().then((mode)=>mode.setupTypeScript(typescriptDefaults));\n});\nmonaco_editor_core_exports.languages.onLanguage(\"javascript\", ()=>{\n    return getMode().then((mode)=>mode.setupJavaScript(javascriptDefaults));\n});\n\n},{\"../../editor/editor.api.js\":\"6ZKre\",\"8ab55ad7f213c06e\":\"cpU7y\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"cpU7y\":[function(require,module,exports,__globalThis) {\nmodule.exports = Promise.all([\n    require(\"606ec9ee8e2eaec8\")(require(\"69605ef41d7ab113\").resolve(\"7bw3L\")),\n    require(\"aeb113f396d83466\")(require(\"69605ef41d7ab113\").resolve(\"rh858\")),\n    require(\"aeb113f396d83466\")(require(\"69605ef41d7ab113\").resolve(\"4DtIN\"))\n]).then(()=>module.bundle.root('a2WUE'));\n\n},{\"606ec9ee8e2eaec8\":\"bpdkb\",\"69605ef41d7ab113\":\"fyJL2\",\"aeb113f396d83466\":\"hpx0h\"}],\"bpdkb\":[function(require,module,exports,__globalThis) {\n\"use strict\";\nvar cacheLoader = require(\"ae7c5e215a4907e2\");\nmodule.exports = cacheLoader(function(bundle) {\n    return new Promise(function(resolve, reject) {\n        // Don't insert the same link element twice (e.g. if it was already in the HTML)\n        var existingLinks = document.getElementsByTagName('link');\n        if ([].concat(existingLinks).some(function(link) {\n            return link.href === bundle && link.rel.indexOf('stylesheet') > -1;\n        })) {\n            resolve();\n            return;\n        }\n        var link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = bundle;\n        link.onerror = function(e) {\n            link.onerror = link.onload = null;\n            link.remove();\n            reject(e);\n        };\n        link.onload = function() {\n            link.onerror = link.onload = null;\n            resolve();\n        };\n        document.getElementsByTagName('head')[0].appendChild(link);\n    });\n});\n\n},{\"ae7c5e215a4907e2\":\"1uYxD\"}],\"1uYxD\":[function(require,module,exports,__globalThis) {\n\"use strict\";\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\nfunction getCache(type) {\n    switch(type){\n        case 'preload':\n            return cachedPreloads;\n        case 'prefetch':\n            return cachedPrefetches;\n        default:\n            return cachedBundles;\n    }\n}\nmodule.exports = function(loader, type) {\n    return function(bundle) {\n        var cache = getCache(type);\n        if (cache[bundle]) return cache[bundle];\n        return cache[bundle] = loader.apply(null, arguments).catch(function(e) {\n            delete cache[bundle];\n            throw e;\n        });\n    };\n};\n\n},{}],\"fyJL2\":[function(require,module,exports,__globalThis) {\n\"use strict\";\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction resolve(id) {\n    var resolved = mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;\n\n},{}],\"hpx0h\":[function(require,module,exports,__globalThis) {\n\"use strict\";\nvar cacheLoader = require(\"ca2a84f7fa4a3bb0\");\nmodule.exports = cacheLoader(function(bundle) {\n    return new Promise(function(resolve, reject) {\n        // Don't insert the same script twice (e.g. if it was already in the HTML)\n        var existingScripts = document.getElementsByTagName('script');\n        if ([].concat(existingScripts).some(function(script) {\n            return script.src === bundle;\n        })) {\n            resolve();\n            return;\n        }\n        var preloadLink = document.createElement('link');\n        preloadLink.href = bundle;\n        preloadLink.rel = 'preload';\n        preloadLink.as = 'script';\n        document.head.appendChild(preloadLink);\n        var script = document.createElement('script');\n        script.async = true;\n        script.type = 'text/javascript';\n        script.src = bundle;\n        script.onerror = function(e) {\n            var error = new TypeError(\"Failed to fetch dynamically imported module: \".concat(bundle, \". Error: \").concat(e.message));\n            script.onerror = script.onload = null;\n            script.remove();\n            reject(error);\n        };\n        script.onload = function() {\n            script.onerror = script.onload = null;\n            resolve();\n        };\n        document.getElementsByTagName('head')[0].appendChild(script);\n    });\n});\n\n},{\"ca2a84f7fa4a3bb0\":\"1uYxD\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=tsMode.48b500ee.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(\n      () => this._updateExtraLibs()\n    );\n  }\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          // module that exports the create() method and returns a `TypeScriptWorker` instance\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          // passed in to the create() method\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(\n            monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri)\n          );\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.decorators.d.ts\"] = true;\nlibFileSet[\"lib.decorators.legacy.d.ts\"] = true;\nlibFileSet[\"lib.dom.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2016.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.date.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.date.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.number.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es2022.array.d.ts\"] = true;\nlibFileSet[\"lib.es2022.d.ts\"] = true;\nlibFileSet[\"lib.es2022.error.d.ts\"] = true;\nlibFileSet[\"lib.es2022.full.d.ts\"] = true;\nlibFileSet[\"lib.es2022.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2022.object.d.ts\"] = true;\nlibFileSet[\"lib.es2022.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2022.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2022.string.d.ts\"] = true;\nlibFileSet[\"lib.es2023.array.d.ts\"] = true;\nlibFileSet[\"lib.es2023.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2023.d.ts\"] = true;\nlibFileSet[\"lib.es2023.full.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.collection.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.decorators.d.ts\"] = true;\nlibFileSet[\"lib.esnext.disposable.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.esnext.object.d.ts\"] = true;\nlibFileSet[\"lib.esnext.promise.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  // protected _positionToOffset(model: editor.ITextModel, position: monaco.IPosition): number {\n  // \treturn model.getOffsetAt(position);\n  // }\n  // protected _offsetToPosition(model: editor.ITextModel, offset: number): monaco.IPosition {\n  // \treturn model.getPositionAt(offset);\n  // }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    this._disposables = [];\n    this._listener = /* @__PURE__ */ Object.create(null);\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(\n      monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model))\n    );\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(\n      monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n        onModelRemoved(event.model);\n        onModelAdd(event.model);\n      })\n    );\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter(\n      (d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1\n    );\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map(\n      (relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null\n    );\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(\n      model,\n      this._selector,\n      diagnostics.map((d) => this._convertDiagnostics(model, d))\n    );\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(\n      diagStart + diagLength\n    );\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(\n        infoStart + infoLength\n      );\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class _SuggestAdapter extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(\n      position.lineNumber,\n      wordInfo.startColumn,\n      position.lineNumber,\n      wordInfo.endColumn\n    );\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers !== void 0 && entry.kindModifiers.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: _SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(\n      resource.toString(),\n      offset,\n      myItem.label\n    );\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: _SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: _SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class _SignatureHelpAdapter extends Adapter {\n  constructor() {\n    super(...arguments);\n    this.signatureHelpTriggerCharacters = [\"(\", \",\"];\n  }\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: _SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar DocumentHighlightAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDocumentHighlights(resource.toString(), offset, [\n      resource.toString()\n    ]);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.flatMap((entry) => {\n      return entry.highlightSpans.map((highlightSpans) => {\n        return {\n          range: this._textSpanToRange(model, highlightSpans.textSpan),\n          kind: highlightSpans.kind === \"writtenReference\" ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n        };\n      });\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(\n      entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName))\n    );\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(\n      entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName))\n    );\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const root = await worker.getNavigationTree(resource.toString());\n    if (!root || model.isDisposed()) {\n      return;\n    }\n    const convert = (item, containerLabel) => {\n      const result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: [],\n        children: item.childItems?.map((child) => convert(child, item.text)),\n        containerName: containerLabel\n      };\n      return result2;\n    };\n    const result = root.childItems ? root.childItems.map((item) => convert(item)) : [];\n    return result;\n  }\n};\nvar Kind = class {\n  static {\n    this.unknown = \"\";\n  }\n  static {\n    this.keyword = \"keyword\";\n  }\n  static {\n    this.script = \"script\";\n  }\n  static {\n    this.module = \"module\";\n  }\n  static {\n    this.class = \"class\";\n  }\n  static {\n    this.interface = \"interface\";\n  }\n  static {\n    this.type = \"type\";\n  }\n  static {\n    this.enum = \"enum\";\n  }\n  static {\n    this.variable = \"var\";\n  }\n  static {\n    this.localVariable = \"local var\";\n  }\n  static {\n    this.function = \"function\";\n  }\n  static {\n    this.localFunction = \"local function\";\n  }\n  static {\n    this.memberFunction = \"method\";\n  }\n  static {\n    this.memberGetAccessor = \"getter\";\n  }\n  static {\n    this.memberSetAccessor = \"setter\";\n  }\n  static {\n    this.memberVariable = \"property\";\n  }\n  static {\n    this.constructorImplementation = \"constructor\";\n  }\n  static {\n    this.callSignature = \"call\";\n  }\n  static {\n    this.indexSignature = \"index\";\n  }\n  static {\n    this.constructSignature = \"construct\";\n  }\n  static {\n    this.parameter = \"parameter\";\n  }\n  static {\n    this.typeParameter = \"type parameter\";\n  }\n  static {\n    this.primitiveType = \"primitive type\";\n  }\n  static {\n    this.label = \"label\";\n  }\n  static {\n    this.alias = \"alias\";\n  }\n  static {\n    this.const = \"const\";\n  }\n  static {\n    this.let = \"let\";\n  }\n  static {\n    this.warning = \"warning\";\n  }\n};\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  constructor() {\n    super(...arguments);\n    this.canFormatMultipleRanges = false;\n  }\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(\n      resource.toString(),\n      startOffset,\n      endOffset,\n      FormatHelper._convertOptions(options)\n    );\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(\n      resource.toString(),\n      offset,\n      ch,\n      FormatHelper._convertOptions(options)\n    );\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(\n      resource.toString(),\n      start,\n      end,\n      errorCodes,\n      formatOptions\n    );\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(\n      fileName,\n      offset,\n      /*strings*/\n      false,\n      /*comments*/\n      false,\n      /*prefixAndSuffix*/\n      false\n    );\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const disposables = [];\n  const providers = [];\n  const client = new WorkerManager(modeId, defaults);\n  disposables.push(client);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  function registerProviders() {\n    const { modeConfiguration } = defaults;\n    disposeAll(providers);\n    if (modeConfiguration.completionItems) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerCompletionItemProvider(\n          modeId,\n          new SuggestAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.signatureHelp) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerSignatureHelpProvider(\n          modeId,\n          new SignatureHelpAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.hovers) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker))\n      );\n    }\n    if (modeConfiguration.documentHighlights) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentHighlightProvider(\n          modeId,\n          new DocumentHighlightAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.definitions) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDefinitionProvider(\n          modeId,\n          new DefinitionAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.references) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerReferenceProvider(\n          modeId,\n          new ReferenceAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.documentSymbols) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentSymbolProvider(\n          modeId,\n          new OutlineAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.rename) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerRenameProvider(\n          modeId,\n          new RenameAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.documentRangeFormattingEdits) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(\n          modeId,\n          new FormatAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.onTypeFormattingEdits) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(\n          modeId,\n          new FormatOnTypeAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.codeActions) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker))\n      );\n    }\n    if (modeConfiguration.inlayHints) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker))\n      );\n    }\n    if (modeConfiguration.diagnostics) {\n      providers.push(new DiagnosticsAdapter(libFiles, defaults, modeId, worker));\n    }\n  }\n  registerProviders();\n  disposables.push(asDisposable(providers));\n  return worker;\n}\nfunction asDisposable(disposables) {\n  return { dispose: () => disposeAll(disposables) };\n}\nfunction disposeAll(disposables) {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  DocumentHighlightAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n","import '../../editor/editor.api.js';\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/language/typescript/lib/typescriptServicesMetadata.ts\nvar typescriptVersion = \"5.4.5\";\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/monaco.contribution.ts\nvar ModuleKind = /* @__PURE__ */ ((ModuleKind2) => {\n  ModuleKind2[ModuleKind2[\"None\"] = 0] = \"None\";\n  ModuleKind2[ModuleKind2[\"CommonJS\"] = 1] = \"CommonJS\";\n  ModuleKind2[ModuleKind2[\"AMD\"] = 2] = \"AMD\";\n  ModuleKind2[ModuleKind2[\"UMD\"] = 3] = \"UMD\";\n  ModuleKind2[ModuleKind2[\"System\"] = 4] = \"System\";\n  ModuleKind2[ModuleKind2[\"ES2015\"] = 5] = \"ES2015\";\n  ModuleKind2[ModuleKind2[\"ESNext\"] = 99] = \"ESNext\";\n  return ModuleKind2;\n})(ModuleKind || {});\nvar JsxEmit = /* @__PURE__ */ ((JsxEmit2) => {\n  JsxEmit2[JsxEmit2[\"None\"] = 0] = \"None\";\n  JsxEmit2[JsxEmit2[\"Preserve\"] = 1] = \"Preserve\";\n  JsxEmit2[JsxEmit2[\"React\"] = 2] = \"React\";\n  JsxEmit2[JsxEmit2[\"ReactNative\"] = 3] = \"ReactNative\";\n  JsxEmit2[JsxEmit2[\"ReactJSX\"] = 4] = \"ReactJSX\";\n  JsxEmit2[JsxEmit2[\"ReactJSXDev\"] = 5] = \"ReactJSXDev\";\n  return JsxEmit2;\n})(JsxEmit || {});\nvar NewLineKind = /* @__PURE__ */ ((NewLineKind2) => {\n  NewLineKind2[NewLineKind2[\"CarriageReturnLineFeed\"] = 0] = \"CarriageReturnLineFeed\";\n  NewLineKind2[NewLineKind2[\"LineFeed\"] = 1] = \"LineFeed\";\n  return NewLineKind2;\n})(NewLineKind || {});\nvar ScriptTarget = /* @__PURE__ */ ((ScriptTarget2) => {\n  ScriptTarget2[ScriptTarget2[\"ES3\"] = 0] = \"ES3\";\n  ScriptTarget2[ScriptTarget2[\"ES5\"] = 1] = \"ES5\";\n  ScriptTarget2[ScriptTarget2[\"ES2015\"] = 2] = \"ES2015\";\n  ScriptTarget2[ScriptTarget2[\"ES2016\"] = 3] = \"ES2016\";\n  ScriptTarget2[ScriptTarget2[\"ES2017\"] = 4] = \"ES2017\";\n  ScriptTarget2[ScriptTarget2[\"ES2018\"] = 5] = \"ES2018\";\n  ScriptTarget2[ScriptTarget2[\"ES2019\"] = 6] = \"ES2019\";\n  ScriptTarget2[ScriptTarget2[\"ES2020\"] = 7] = \"ES2020\";\n  ScriptTarget2[ScriptTarget2[\"ESNext\"] = 99] = \"ESNext\";\n  ScriptTarget2[ScriptTarget2[\"JSON\"] = 100] = \"JSON\";\n  ScriptTarget2[ScriptTarget2[\"Latest\"] = 99 /* ESNext */] = \"Latest\";\n  return ScriptTarget2;\n})(ScriptTarget || {});\nvar ModuleResolutionKind = /* @__PURE__ */ ((ModuleResolutionKind2) => {\n  ModuleResolutionKind2[ModuleResolutionKind2[\"Classic\"] = 1] = \"Classic\";\n  ModuleResolutionKind2[ModuleResolutionKind2[\"NodeJs\"] = 2] = \"NodeJs\";\n  return ModuleResolutionKind2;\n})(ModuleResolutionKind || {});\nvar LanguageServiceDefaultsImpl = class {\n  constructor(compilerOptions, diagnosticsOptions, workerOptions, inlayHintsOptions, modeConfiguration) {\n    this._onDidChange = new monaco_editor_core_exports.Emitter();\n    this._onDidExtraLibsChange = new monaco_editor_core_exports.Emitter();\n    this._extraLibs = /* @__PURE__ */ Object.create(null);\n    this._removedExtraLibs = /* @__PURE__ */ Object.create(null);\n    this._eagerModelSync = false;\n    this.setCompilerOptions(compilerOptions);\n    this.setDiagnosticsOptions(diagnosticsOptions);\n    this.setWorkerOptions(workerOptions);\n    this.setInlayHintsOptions(inlayHintsOptions);\n    this.setModeConfiguration(modeConfiguration);\n    this._onDidExtraLibsChangeTimeout = -1;\n  }\n  get onDidChange() {\n    return this._onDidChange.event;\n  }\n  get onDidExtraLibsChange() {\n    return this._onDidExtraLibsChange.event;\n  }\n  get modeConfiguration() {\n    return this._modeConfiguration;\n  }\n  get workerOptions() {\n    return this._workerOptions;\n  }\n  get inlayHintsOptions() {\n    return this._inlayHintsOptions;\n  }\n  getExtraLibs() {\n    return this._extraLibs;\n  }\n  addExtraLib(content, _filePath) {\n    let filePath;\n    if (typeof _filePath === \"undefined\") {\n      filePath = `ts:extralib-${Math.random().toString(36).substring(2, 15)}`;\n    } else {\n      filePath = _filePath;\n    }\n    if (this._extraLibs[filePath] && this._extraLibs[filePath].content === content) {\n      return {\n        dispose: () => {\n        }\n      };\n    }\n    let myVersion = 1;\n    if (this._removedExtraLibs[filePath]) {\n      myVersion = this._removedExtraLibs[filePath] + 1;\n    }\n    if (this._extraLibs[filePath]) {\n      myVersion = this._extraLibs[filePath].version + 1;\n    }\n    this._extraLibs[filePath] = {\n      content,\n      version: myVersion\n    };\n    this._fireOnDidExtraLibsChangeSoon();\n    return {\n      dispose: () => {\n        let extraLib = this._extraLibs[filePath];\n        if (!extraLib) {\n          return;\n        }\n        if (extraLib.version !== myVersion) {\n          return;\n        }\n        delete this._extraLibs[filePath];\n        this._removedExtraLibs[filePath] = myVersion;\n        this._fireOnDidExtraLibsChangeSoon();\n      }\n    };\n  }\n  setExtraLibs(libs) {\n    for (const filePath in this._extraLibs) {\n      this._removedExtraLibs[filePath] = this._extraLibs[filePath].version;\n    }\n    this._extraLibs = /* @__PURE__ */ Object.create(null);\n    if (libs && libs.length > 0) {\n      for (const lib of libs) {\n        const filePath = lib.filePath || `ts:extralib-${Math.random().toString(36).substring(2, 15)}`;\n        const content = lib.content;\n        let myVersion = 1;\n        if (this._removedExtraLibs[filePath]) {\n          myVersion = this._removedExtraLibs[filePath] + 1;\n        }\n        this._extraLibs[filePath] = {\n          content,\n          version: myVersion\n        };\n      }\n    }\n    this._fireOnDidExtraLibsChangeSoon();\n  }\n  _fireOnDidExtraLibsChangeSoon() {\n    if (this._onDidExtraLibsChangeTimeout !== -1) {\n      return;\n    }\n    this._onDidExtraLibsChangeTimeout = window.setTimeout(() => {\n      this._onDidExtraLibsChangeTimeout = -1;\n      this._onDidExtraLibsChange.fire(void 0);\n    }, 0);\n  }\n  getCompilerOptions() {\n    return this._compilerOptions;\n  }\n  setCompilerOptions(options) {\n    this._compilerOptions = options || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(void 0);\n  }\n  getDiagnosticsOptions() {\n    return this._diagnosticsOptions;\n  }\n  setDiagnosticsOptions(options) {\n    this._diagnosticsOptions = options || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(void 0);\n  }\n  setWorkerOptions(options) {\n    this._workerOptions = options || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(void 0);\n  }\n  setInlayHintsOptions(options) {\n    this._inlayHintsOptions = options || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(void 0);\n  }\n  setMaximumWorkerIdleTime(value) {\n  }\n  setEagerModelSync(value) {\n    this._eagerModelSync = value;\n  }\n  getEagerModelSync() {\n    return this._eagerModelSync;\n  }\n  setModeConfiguration(modeConfiguration) {\n    this._modeConfiguration = modeConfiguration || /* @__PURE__ */ Object.create(null);\n    this._onDidChange.fire(void 0);\n  }\n};\nvar typescriptVersion2 = typescriptVersion;\nvar modeConfigurationDefault = {\n  completionItems: true,\n  hovers: true,\n  documentSymbols: true,\n  definitions: true,\n  references: true,\n  documentHighlights: true,\n  rename: true,\n  diagnostics: true,\n  documentRangeFormattingEdits: true,\n  signatureHelp: true,\n  onTypeFormattingEdits: true,\n  codeActions: true,\n  inlayHints: true\n};\nvar typescriptDefaults = new LanguageServiceDefaultsImpl(\n  { allowNonTsExtensions: true, target: 99 /* Latest */ },\n  { noSemanticValidation: false, noSyntaxValidation: false, onlyVisible: false },\n  {},\n  {},\n  modeConfigurationDefault\n);\nvar javascriptDefaults = new LanguageServiceDefaultsImpl(\n  { allowNonTsExtensions: true, allowJs: true, target: 99 /* Latest */ },\n  { noSemanticValidation: true, noSyntaxValidation: false, onlyVisible: false },\n  {},\n  {},\n  modeConfigurationDefault\n);\nvar getTypeScriptWorker = () => {\n  return getMode().then((mode) => mode.getTypeScriptWorker());\n};\nvar getJavaScriptWorker = () => {\n  return getMode().then((mode) => mode.getJavaScriptWorker());\n};\nmonaco_editor_core_exports.languages.typescript = {\n  ModuleKind,\n  JsxEmit,\n  NewLineKind,\n  ScriptTarget,\n  ModuleResolutionKind,\n  typescriptVersion: typescriptVersion2,\n  typescriptDefaults,\n  javascriptDefaults,\n  getTypeScriptWorker,\n  getJavaScriptWorker\n};\nfunction getMode() {\n  if (false) {\n    return new Promise((resolve, reject) => {\n      __require([\"vs/language/typescript/tsMode\"], resolve, reject);\n    });\n  } else {\n    return import(\"./tsMode.js\");\n  }\n}\nmonaco_editor_core_exports.languages.onLanguage(\"typescript\", () => {\n  return getMode().then((mode) => mode.setupTypeScript(typescriptDefaults));\n});\nmonaco_editor_core_exports.languages.onLanguage(\"javascript\", () => {\n  return getMode().then((mode) => mode.setupJavaScript(javascriptDefaults));\n});\nexport {\n  JsxEmit,\n  ModuleKind,\n  ModuleResolutionKind,\n  NewLineKind,\n  ScriptTarget,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  javascriptDefaults,\n  typescriptDefaults,\n  typescriptVersion2 as typescriptVersion\n};\n","module.exports = Promise.all([require(\"./helpers/browser/css-loader\")(require('./helpers/bundle-manifest').resolve(\"7bw3L\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-manifest').resolve(\"rh858\")), require(\"./helpers/browser/js-loader\")(require('./helpers/bundle-manifest').resolve(\"4DtIN\"))]).then(() => module.bundle.root('a2WUE'));","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same link element twice (e.g. if it was already in the HTML)\n    var existingLinks = document.getElementsByTagName('link');\n    if ([].concat(existingLinks).some(function (link) {\n      return link.href === bundle && link.rel.indexOf('stylesheet') > -1;\n    })) {\n      resolve();\n      return;\n    }\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = bundle;\n    link.onerror = function (e) {\n      link.onerror = link.onload = null;\n      link.remove();\n      reject(e);\n    };\n    link.onload = function () {\n      link.onerror = link.onload = null;\n      resolve();\n    };\n    document.getElementsByTagName('head')[0].appendChild(link);\n  });\n});","\"use strict\";\n\nvar cachedBundles = {};\nvar cachedPreloads = {};\nvar cachedPrefetches = {};\nfunction getCache(type) {\n  switch (type) {\n    case 'preload':\n      return cachedPreloads;\n    case 'prefetch':\n      return cachedPrefetches;\n    default:\n      return cachedBundles;\n  }\n}\nmodule.exports = function (loader, type) {\n  return function (bundle) {\n    var cache = getCache(type);\n    if (cache[bundle]) {\n      return cache[bundle];\n    }\n    return cache[bundle] = loader.apply(null, arguments).catch(function (e) {\n      delete cache[bundle];\n      throw e;\n    });\n  };\n};","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar cacheLoader = require('../cacheLoader');\nmodule.exports = cacheLoader(function (bundle) {\n  return new Promise(function (resolve, reject) {\n    // Don't insert the same script twice (e.g. if it was already in the HTML)\n    var existingScripts = document.getElementsByTagName('script');\n    if ([].concat(existingScripts).some(function (script) {\n      return script.src === bundle;\n    })) {\n      resolve();\n      return;\n    }\n    var preloadLink = document.createElement('link');\n    preloadLink.href = bundle;\n    preloadLink.rel = 'preload';\n    preloadLink.as = 'script';\n    document.head.appendChild(preloadLink);\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.src = bundle;\n    script.onerror = function (e) {\n      var error = new TypeError(\"Failed to fetch dynamically imported module: \".concat(bundle, \". Error: \").concat(e.message));\n      script.onerror = script.onload = null;\n      script.remove();\n      reject(error);\n    };\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n});","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","secondTarget","javaScriptWorker","typeScriptWorker","parcelHelpers","defineInteropFlag","export","Adapter","CodeActionAdaptor","DefinitionAdapter","DiagnosticsAdapter","DocumentHighlightAdapter","FormatAdapter","FormatHelper","FormatOnTypeAdapter","InlayHintsAdapter","Kind","LibFiles","OutlineAdapter","QuickInfoAdapter","ReferenceAdapter","RenameAdapter","SignatureHelpAdapter","SuggestAdapter","WorkerManager","flattenDiagnosticMessageText","getJavaScriptWorker","getTypeScriptWorker","setupJavaScript","setupTypeScript","_editorApiJs","_monacoContributionJs","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","enumerable","monaco_editor_core_exports","constructor","_modeId","_defaults","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","getEagerModelSync","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","client","libFileSet","diag","newLine","indent","result","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","_textSpanToRange","span","p1","getPositionAt","start","p2","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","typescriptDefaults","content","_containsLibFile","uris","fetchLibFilesIfNecessary","_fetchLibFiles","then","w","getLibFiles","libFiles","_selector","worker","_disposables","_listener","create","onModelAdd","handle","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","changeSubscription","onDidChangeContent","clearTimeout","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","toString","onModelRemoved","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","p","c","concat","diagnosticCodesToIgnore","relatedUris","relatedInformation","file","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Warning","Hint","Info","_SuggestAdapter","triggerCharacters","provideCompletionItems","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","range","replacementSpan","kindModifiers","languages","CompletionItemTag","insertText","sortText","kind","convertKind","resolveCompletionItem","item","myItem","details","getCompletionEntryDetails","detail","documentation","value","createDocumentationString","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","_SignatureHelpAdapter","arguments","signatureHelpTriggerCharacters","_toSignatureHelpTriggerReason","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","provideSignatureHelp","getSignatureHelpItems","triggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","provideHover","getQuickInfoAtPosition","contents","textSpan","provideDocumentHighlights","getDocumentHighlights","flatMap","highlightSpans","DocumentHighlightKind","Write","Text","provideDefinition","getDefinitionAtPosition","refModel","provideReferences","getReferencesAtPosition","provideDocumentSymbols","root","getNavigationTree","convert","containerLabel","outlineTypeTable","SymbolKind","spans","selectionRange","children","childItems","child","containerName","unknown","script","type","localFunction","constructorImplementation","typeParameter","alias","const","let","Method","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","canFormatMultipleRanges","provideDocumentRangeFormattingEdits","startOffset","endOffset","edits","getFormattingEditsForRange","edit","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","ch","getFormattingEditsAfterKeystroke","provideCodeActions","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","versionId","textEdit","title","description","provideRenameEdits","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","provideInlayHints","hints","tsHints","hint","_convertHintKind","InlayHintKind","Parameter","Type","defaults","setupMode","reject","modeId","disposables","providers","registerProviders","modeConfiguration","disposeAll","completionItems","registerCompletionItemProvider","signatureHelp","registerSignatureHelpProvider","hovers","registerHoverProvider","documentHighlights","registerDocumentHighlightProvider","definitions","registerDefinitionProvider","references","registerReferenceProvider","documentSymbols","registerDocumentSymbolProvider","rename","registerRenameProvider","documentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","onTypeFormattingEdits","registerOnTypeFormattingEditProvider","codeActions","registerCodeActionProvider","inlayHints","registerInlayHintsProvider","pop","ModuleKind2","JsxEmit2","NewLineKind2","ScriptTarget2","ModuleResolutionKind2","JsxEmit","ModuleKind","ModuleResolutionKind","NewLineKind","ScriptTarget","javascriptDefaults","typescriptVersion2","LanguageServiceDefaultsImpl","diagnosticsOptions","_onDidChange","Emitter","_onDidExtraLibsChange","_extraLibs","_removedExtraLibs","_eagerModelSync","setCompilerOptions","setDiagnosticsOptions","setWorkerOptions","setInlayHintsOptions","setModeConfiguration","_onDidExtraLibsChangeTimeout","_modeConfiguration","_workerOptions","_inlayHintsOptions","addExtraLib","_filePath","filePath","Math","random","substring","myVersion","version","_fireOnDidExtraLibsChangeSoon","extraLib","setExtraLibs","libs","lib","fire","_compilerOptions","_diagnosticsOptions","setMaximumWorkerIdleTime","setEagerModelSync","modeConfigurationDefault","allowNonTsExtensions","target","allowJs","getMode","mode","typescript","typescriptVersion","onLanguage","cacheLoader","document","getElementsByTagName","some","link","href","rel","createElement","onerror","e","onload","remove","appendChild","cachedBundles","cachedPreloads","cachedPrefetches","loader","getCache","apply","catch","mapping","Map","baseUrl","manifest","set","resolved","URL","src","preloadLink","as","head","async","error","TypeError","interopDefault","__esModule","default","exportAll","source","dest","keys","destName"],"version":3,"file":"tsMode.48b500ee.js.map"}