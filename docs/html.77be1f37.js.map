{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,EAAA,IAAA,EAAA,EAAA,kD,E,iB,C,GAgU/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GA/SF,IAAA,EAAA,EAAA,8BAjBI,EAAY,OAAO,cAAc,CACjC,EAAmB,OAAO,wBAAwB,CAClD,EAAoB,OAAO,mBAAmB,CAC9C,EAAe,OAAO,SAAS,CAAC,cAAc,CAY9C,EAA6B,CAAC,EAHe,AAR/B,CAAA,CAAC,EAAI,EAAM,EAAQ,KACnC,GAAI,GAAQ,AAAgB,UAAhB,OAAO,GAAqB,AAAgB,YAAhB,OAAO,EAC7C,IAAK,IAAI,KAAO,EAAkB,GAC3B,EAAa,IAAI,CAAC,EAAI,IAAQ,IAAQ,GACzC,EAAU,EAAI,EAAK,CAAE,IAAK,IAAM,CAAI,CAAC,EAAI,CAAE,WAAY,CAAE,CAAA,EAAO,EAAiB,EAAM,EAAA,GAAS,EAAK,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","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/html/html.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"52Iq5\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf);\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar _editorApiJs = require(\"../../editor/editor.api.js\");\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __reExport = (target, mod, secondTarget)=>(__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, _editorApiJs);\n// src/basic-languages/html/html.ts\nvar EMPTY_ELEMENTS = [\n    \"area\",\n    \"base\",\n    \"br\",\n    \"col\",\n    \"embed\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"keygen\",\n    \"link\",\n    \"menuitem\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\"\n];\nvar conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: [\n            \"<!--\",\n            \"-->\"\n        ]\n    },\n    brackets: [\n        [\n            \"<!--\",\n            \"-->\"\n        ],\n        [\n            \"<\",\n            \">\"\n        ],\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        },\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: \"<\",\n            close: \">\"\n        }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n            afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n            action: {\n                indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n            }\n        },\n        {\n            beforeText: new RegExp(`<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n            action: {\n                indentAction: monaco_editor_core_exports.languages.IndentAction.Indent\n            }\n        }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n        }\n    }\n};\nvar language = {\n    defaultToken: \"\",\n    tokenPostfix: \".html\",\n    ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [\n                /<!DOCTYPE/,\n                \"metatag\",\n                \"@doctype\"\n            ],\n            [\n                /<!--/,\n                \"comment\",\n                \"@comment\"\n            ],\n            [\n                /(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/,\n                [\n                    \"delimiter\",\n                    \"tag\",\n                    \"\",\n                    \"delimiter\"\n                ]\n            ],\n            [\n                /(<)(script)/,\n                [\n                    \"delimiter\",\n                    {\n                        token: \"tag\",\n                        next: \"@script\"\n                    }\n                ]\n            ],\n            [\n                /(<)(style)/,\n                [\n                    \"delimiter\",\n                    {\n                        token: \"tag\",\n                        next: \"@style\"\n                    }\n                ]\n            ],\n            [\n                /(<)((?:[\\w\\-]+:)?[\\w\\-]+)/,\n                [\n                    \"delimiter\",\n                    {\n                        token: \"tag\",\n                        next: \"@otherTag\"\n                    }\n                ]\n            ],\n            [\n                /(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/,\n                [\n                    \"delimiter\",\n                    {\n                        token: \"tag\",\n                        next: \"@otherTag\"\n                    }\n                ]\n            ],\n            [\n                /</,\n                \"delimiter\"\n            ],\n            [\n                /[^<]+/\n            ]\n        ],\n        doctype: [\n            [\n                /[^>]+/,\n                \"metatag.content\"\n            ],\n            [\n                />/,\n                \"metatag\",\n                \"@pop\"\n            ]\n        ],\n        comment: [\n            [\n                /-->/,\n                \"comment\",\n                \"@pop\"\n            ],\n            [\n                /[^-]+/,\n                \"comment.content\"\n            ],\n            [\n                /./,\n                \"comment.content\"\n            ]\n        ],\n        otherTag: [\n            [\n                /\\/?>/,\n                \"delimiter\",\n                \"@pop\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ]\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [\n                /type/,\n                \"attribute.name\",\n                \"@scriptAfterType\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter\",\n                    next: \"@scriptEmbedded\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /(<\\/)(script\\s*)(>)/,\n                [\n                    \"delimiter\",\n                    \"tag\",\n                    {\n                        token: \"delimiter\",\n                        next: \"@pop\"\n                    }\n                ]\n            ]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [\n                /=/,\n                \"delimiter\",\n                \"@scriptAfterTypeEquals\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter\",\n                    next: \"@scriptEmbedded\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            // cover invalid e.g. <script type>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [\n                /\"module\"/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@scriptWithCustomType.text/javascript\"\n                }\n            ],\n            [\n                /'module'/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@scriptWithCustomType.text/javascript\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@scriptWithCustomType.$1\"\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@scriptWithCustomType.$1\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter\",\n                    next: \"@scriptEmbedded\",\n                    nextEmbedded: \"text/javascript\"\n                }\n            ],\n            // cover invalid e.g. <script type=>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [\n                />/,\n                {\n                    token: \"delimiter\",\n                    next: \"@scriptEmbedded.$S2\",\n                    nextEmbedded: \"$S2\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/script\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        scriptEmbedded: [\n            [\n                /<\\/script/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\",\n                    nextEmbedded: \"@pop\"\n                }\n            ],\n            [\n                /[^<]+/,\n                \"\"\n            ]\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [\n                /type/,\n                \"attribute.name\",\n                \"@styleAfterType\"\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter\",\n                    next: \"@styleEmbedded\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /(<\\/)(style\\s*)(>)/,\n                [\n                    \"delimiter\",\n                    \"tag\",\n                    {\n                        token: \"delimiter\",\n                        next: \"@pop\"\n                    }\n                ]\n            ]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [\n                /=/,\n                \"delimiter\",\n                \"@styleAfterTypeEquals\"\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter\",\n                    next: \"@styleEmbedded\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            // cover invalid e.g. <style type>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@styleWithCustomType.$1\"\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: \"attribute.value\",\n                    switchTo: \"@styleWithCustomType.$1\"\n                }\n            ],\n            [\n                />/,\n                {\n                    token: \"delimiter\",\n                    next: \"@styleEmbedded\",\n                    nextEmbedded: \"text/css\"\n                }\n            ],\n            // cover invalid e.g. <style type=>\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [\n                />/,\n                {\n                    token: \"delimiter\",\n                    next: \"@styleEmbedded.$S2\",\n                    nextEmbedded: \"$S2\"\n                }\n            ],\n            [\n                /\"([^\"]*)\"/,\n                \"attribute.value\"\n            ],\n            [\n                /'([^']*)'/,\n                \"attribute.value\"\n            ],\n            [\n                /[\\w\\-]+/,\n                \"attribute.name\"\n            ],\n            [\n                /=/,\n                \"delimiter\"\n            ],\n            [\n                /[ \\t\\r\\n]+/\n            ],\n            // whitespace\n            [\n                /<\\/style\\s*>/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        styleEmbedded: [\n            [\n                /<\\/style/,\n                {\n                    token: \"@rematch\",\n                    next: \"@pop\",\n                    nextEmbedded: \"@pop\"\n                }\n            ],\n            [\n                /[^<]+/,\n                \"\"\n            ]\n        ]\n    }\n};\n\n},{\"../../editor/editor.api.js\":\"6ZKre\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=html.77be1f37.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/html/html.ts\nvar EMPTY_ELEMENTS = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"menuitem\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\"\n];\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [\n    [\"<!--\", \"-->\"],\n    [\"<\", \">\"],\n    [\"{\", \"}\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\n        \"i\"\n      ),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\n        \"i\"\n      ),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".html\",\n  ignoreCase: true,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      [/<!DOCTYPE/, \"metatag\", \"@doctype\"],\n      [/<!--/, \"comment\", \"@comment\"],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter\", \"tag\", \"\", \"delimiter\"]],\n      [/(<)(script)/, [\"delimiter\", { token: \"tag\", next: \"@script\" }]],\n      [/(<)(style)/, [\"delimiter\", { token: \"tag\", next: \"@style\" }]],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", { token: \"tag\", next: \"@otherTag\" }]],\n      [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter\", { token: \"tag\", next: \"@otherTag\" }]],\n      [/</, \"delimiter\"],\n      [/[^<]+/]\n      // text\n    ],\n    doctype: [\n      [/[^>]+/, \"metatag.content\"],\n      [/>/, \"metatag\", \"@pop\"]\n    ],\n    comment: [\n      [/-->/, \"comment\", \"@pop\"],\n      [/[^-]+/, \"comment.content\"],\n      [/./, \"comment.content\"]\n    ],\n    otherTag: [\n      [/\\/?>/, \"delimiter\", \"@pop\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/]\n      // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [\n      [/type/, \"attribute.name\", \"@scriptAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/(<\\/)(script\\s*)(>)/, [\"delimiter\", \"tag\", { token: \"delimiter\", next: \"@pop\" }]]\n    ],\n    // After <script ... type\n    scriptAfterType: [\n      [/=/, \"delimiter\", \"@scriptAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type =\n    scriptAfterTypeEquals: [\n      [\n        /\"module\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.text/javascript\"\n        }\n      ],\n      [\n        /'module'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.text/javascript\"\n        }\n      ],\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type = $S2\n    scriptWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@scriptEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    scriptEmbedded: [\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [\n      [/type/, \"attribute.name\", \"@styleAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/(<\\/)(style\\s*)(>)/, [\"delimiter\", \"tag\", { token: \"delimiter\", next: \"@pop\" }]]\n    ],\n    // After <style ... type\n    styleAfterType: [\n      [/=/, \"delimiter\", \"@styleAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type =\n    styleAfterTypeEquals: [\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type = $S2\n    styleWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter\",\n          next: \"@styleEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value\"],\n      [/'([^']*)'/, \"attribute.value\"],\n      [/[\\w\\-]+/, \"attribute.name\"],\n      [/=/, \"delimiter\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    styleEmbedded: [\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ]\n    // -- END <style> tags handling\n  }\n};\nexport {\n  conf,\n  language\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","_editorApiJs","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","monaco_editor_core_exports","__copyProps","to","from","except","desc","key","enumerable","EMPTY_ELEMENTS","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","folding","markers","start","end","defaultToken","tokenPostfix","ignoreCase","tokenizer","root","token","next","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","destName"],"version":3,"file":"html.77be1f37.js.map"}