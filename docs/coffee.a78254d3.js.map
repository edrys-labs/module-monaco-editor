{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,Q,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,E,I,E,E,kD,E,iB,C,GAyO/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GAvOF,IAAI,EAAO,CACT,YAAa,wFACb,SAAU,CACR,aAAc,CAAC,MAAO,MAAM,CAC5B,YAAa,GACf,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CA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","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"6fdGp\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/coffee/coffee.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf);\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        blockComment: [\n            \"###\",\n            \"###\"\n        ],\n        lineComment: \"#\"\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nvar language = {\n    defaultToken: \"\",\n    ignoreCase: true,\n    tokenPostfix: \".coffee\",\n    brackets: [\n        {\n            open: \"{\",\n            close: \"}\",\n            token: \"delimiter.curly\"\n        },\n        {\n            open: \"[\",\n            close: \"]\",\n            token: \"delimiter.square\"\n        },\n        {\n            open: \"(\",\n            close: \")\",\n            token: \"delimiter.parenthesis\"\n        }\n    ],\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n    keywords: [\n        \"and\",\n        \"or\",\n        \"is\",\n        \"isnt\",\n        \"not\",\n        \"on\",\n        \"yes\",\n        \"@\",\n        \"no\",\n        \"off\",\n        \"true\",\n        \"false\",\n        \"null\",\n        \"this\",\n        \"new\",\n        \"delete\",\n        \"typeof\",\n        \"in\",\n        \"instanceof\",\n        \"return\",\n        \"throw\",\n        \"break\",\n        \"continue\",\n        \"debugger\",\n        \"if\",\n        \"else\",\n        \"switch\",\n        \"for\",\n        \"while\",\n        \"do\",\n        \"try\",\n        \"catch\",\n        \"finally\",\n        \"class\",\n        \"extends\",\n        \"super\",\n        \"undefined\",\n        \"then\",\n        \"unless\",\n        \"until\",\n        \"loop\",\n        \"of\",\n        \"by\",\n        \"when\"\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [\n                /\\@[a-zA-Z_]\\w*/,\n                \"variable.predefined\"\n            ],\n            [\n                /[a-zA-Z_]\\w*/,\n                {\n                    cases: {\n                        this: \"variable.predefined\",\n                        \"@keywords\": {\n                            token: \"keyword.$0\"\n                        },\n                        \"@default\": \"\"\n                    }\n                }\n            ],\n            // whitespace\n            [\n                /[ \\t\\r\\n]+/,\n                \"\"\n            ],\n            // Comments\n            [\n                /###/,\n                \"comment\",\n                \"@comment\"\n            ],\n            [\n                /#.*$/,\n                \"comment\"\n            ],\n            // regular expressions\n            [\n                \"///\",\n                {\n                    token: \"regexp\",\n                    next: \"@hereregexp\"\n                }\n            ],\n            [\n                /^(\\s*)(@regEx)/,\n                [\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\()(\\s*)(@regEx)/,\n                [\n                    \"@brackets\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\,)(\\s*)(@regEx)/,\n                [\n                    \"delimiter\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\=)(\\s*)(@regEx)/,\n                [\n                    \"delimiter\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\:)(\\s*)(@regEx)/,\n                [\n                    \"delimiter\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\[)(\\s*)(@regEx)/,\n                [\n                    \"@brackets\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\!)(\\s*)(@regEx)/,\n                [\n                    \"delimiter\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\&)(\\s*)(@regEx)/,\n                [\n                    \"delimiter\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\|)(\\s*)(@regEx)/,\n                [\n                    \"delimiter\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\?)(\\s*)(@regEx)/,\n                [\n                    \"delimiter\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\{)(\\s*)(@regEx)/,\n                [\n                    \"@brackets\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            [\n                /(\\;)(\\s*)(@regEx)/,\n                [\n                    \"\",\n                    \"\",\n                    \"regexp\"\n                ]\n            ],\n            // delimiters\n            [\n                /}/,\n                {\n                    cases: {\n                        \"$S2==interpolatedstring\": {\n                            token: \"string\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"@brackets\"\n                    }\n                }\n            ],\n            [\n                /[{}()\\[\\]]/,\n                \"@brackets\"\n            ],\n            [\n                /@symbols/,\n                \"delimiter\"\n            ],\n            // numbers\n            [\n                /\\d+[eE]([\\-+]?\\d+)?/,\n                \"number.float\"\n            ],\n            [\n                /\\d+\\.\\d+([eE][\\-+]?\\d+)?/,\n                \"number.float\"\n            ],\n            [\n                /0[xX][0-9a-fA-F]+/,\n                \"number.hex\"\n            ],\n            [\n                /0[0-7]+(?!\\d)/,\n                \"number.octal\"\n            ],\n            [\n                /\\d+/,\n                \"number\"\n            ],\n            // delimiter: after number because of .\\d floats\n            [\n                /[,.]/,\n                \"delimiter\"\n            ],\n            // strings:\n            [\n                /\"\"\"/,\n                \"string\",\n                '@herestring.\"\"\"'\n            ],\n            [\n                /'''/,\n                \"string\",\n                \"@herestring.'''\"\n            ],\n            [\n                /\"/,\n                {\n                    cases: {\n                        \"@eos\": \"string\",\n                        \"@default\": {\n                            token: \"string\",\n                            next: '@string.\"'\n                        }\n                    }\n                }\n            ],\n            [\n                /'/,\n                {\n                    cases: {\n                        \"@eos\": \"string\",\n                        \"@default\": {\n                            token: \"string\",\n                            next: \"@string.'\"\n                        }\n                    }\n                }\n            ]\n        ],\n        string: [\n            [\n                /[^\"'\\#\\\\]+/,\n                \"string\"\n            ],\n            [\n                /@escapes/,\n                \"string.escape\"\n            ],\n            [\n                /\\./,\n                \"string.escape.invalid\"\n            ],\n            [\n                /\\./,\n                \"string.escape.invalid\"\n            ],\n            [\n                /#{/,\n                {\n                    cases: {\n                        '$S2==\"': {\n                            token: \"string\",\n                            next: \"root.interpolatedstring\"\n                        },\n                        \"@default\": \"string\"\n                    }\n                }\n            ],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        \"$#==$S2\": {\n                            token: \"string\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"string\"\n                    }\n                }\n            ],\n            [\n                /#/,\n                \"string\"\n            ]\n        ],\n        herestring: [\n            [\n                /(\"\"\"|''')/,\n                {\n                    cases: {\n                        \"$1==$S2\": {\n                            token: \"string\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"string\"\n                    }\n                }\n            ],\n            [\n                /[^#\\\\'\"]+/,\n                \"string\"\n            ],\n            [\n                /['\"]+/,\n                \"string\"\n            ],\n            [\n                /@escapes/,\n                \"string.escape\"\n            ],\n            [\n                /\\./,\n                \"string.escape.invalid\"\n            ],\n            [\n                /#{/,\n                {\n                    token: \"string.quote\",\n                    next: \"root.interpolatedstring\"\n                }\n            ],\n            [\n                /#/,\n                \"string\"\n            ]\n        ],\n        comment: [\n            [\n                /[^#]+/,\n                \"comment\"\n            ],\n            [\n                /###/,\n                \"comment\",\n                \"@pop\"\n            ],\n            [\n                /#/,\n                \"comment\"\n            ]\n        ],\n        hereregexp: [\n            [\n                /[^\\\\\\/#]+/,\n                \"regexp\"\n            ],\n            [\n                /\\\\./,\n                \"regexp\"\n            ],\n            [\n                /#.*$/,\n                \"comment\"\n            ],\n            [\n                \"///[igm]*\",\n                {\n                    token: \"regexp\",\n                    next: \"@pop\"\n                }\n            ],\n            [\n                /\\//,\n                \"regexp\"\n            ]\n        ]\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=coffee.a78254d3.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/coffee/coffee.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    blockComment: [\"###\", \"###\"],\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".coffee\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n  keywords: [\n    \"and\",\n    \"or\",\n    \"is\",\n    \"isnt\",\n    \"not\",\n    \"on\",\n    \"yes\",\n    \"@\",\n    \"no\",\n    \"off\",\n    \"true\",\n    \"false\",\n    \"null\",\n    \"this\",\n    \"new\",\n    \"delete\",\n    \"typeof\",\n    \"in\",\n    \"instanceof\",\n    \"return\",\n    \"throw\",\n    \"break\",\n    \"continue\",\n    \"debugger\",\n    \"if\",\n    \"else\",\n    \"switch\",\n    \"for\",\n    \"while\",\n    \"do\",\n    \"try\",\n    \"catch\",\n    \"finally\",\n    \"class\",\n    \"extends\",\n    \"super\",\n    \"undefined\",\n    \"then\",\n    \"unless\",\n    \"until\",\n    \"loop\",\n    \"of\",\n    \"by\",\n    \"when\"\n  ],\n  // we include these common regular expressions\n  symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [/\\@[a-zA-Z_]\\w*/, \"variable.predefined\"],\n      [\n        /[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            this: \"variable.predefined\",\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // whitespace\n      [/[ \\t\\r\\n]+/, \"\"],\n      // Comments\n      [/###/, \"comment\", \"@comment\"],\n      [/#.*$/, \"comment\"],\n      // regular expressions\n      [\"///\", { token: \"regexp\", next: \"@hereregexp\" }],\n      [/^(\\s*)(@regEx)/, [\"\", \"regexp\"]],\n      [/(\\()(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\,)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\=)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\:)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\[)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\!)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\&)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\|)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\?)(\\s*)(@regEx)/, [\"delimiter\", \"\", \"regexp\"]],\n      [/(\\{)(\\s*)(@regEx)/, [\"@brackets\", \"\", \"regexp\"]],\n      [/(\\;)(\\s*)(@regEx)/, [\"\", \"\", \"regexp\"]],\n      // delimiters\n      [\n        /}/,\n        {\n          cases: {\n            \"$S2==interpolatedstring\": {\n              token: \"string\",\n              next: \"@pop\"\n            },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      // numbers\n      [/\\d+[eE]([\\-+]?\\d+)?/, \"number.float\"],\n      [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n      [/0[0-7]+(?!\\d)/, \"number.octal\"],\n      [/\\d+/, \"number\"],\n      // delimiter: after number because of .\\d floats\n      [/[,.]/, \"delimiter\"],\n      // strings:\n      [/\"\"\"/, \"string\", '@herestring.\"\"\"'],\n      [/'''/, \"string\", \"@herestring.'''\"],\n      [\n        /\"/,\n        {\n          cases: {\n            \"@eos\": \"string\",\n            \"@default\": { token: \"string\", next: '@string.\"' }\n          }\n        }\n      ],\n      [\n        /'/,\n        {\n          cases: {\n            \"@eos\": \"string\",\n            \"@default\": { token: \"string\", next: \"@string.'\" }\n          }\n        }\n      ]\n    ],\n    string: [\n      [/[^\"'\\#\\\\]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\./, \"string.escape.invalid\"],\n      [/\\./, \"string.escape.invalid\"],\n      [\n        /#{/,\n        {\n          cases: {\n            '$S2==\"': {\n              token: \"string\",\n              next: \"root.interpolatedstring\"\n            },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/#/, \"string\"]\n    ],\n    herestring: [\n      [\n        /(\"\"\"|''')/,\n        {\n          cases: {\n            \"$1==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [/[^#\\\\'\"]+/, \"string\"],\n      [/['\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\./, \"string.escape.invalid\"],\n      [/#{/, { token: \"string.quote\", next: \"root.interpolatedstring\" }],\n      [/#/, \"string\"]\n    ],\n    comment: [\n      [/[^#]+/, \"comment\"],\n      [/###/, \"comment\", \"@pop\"],\n      [/#/, \"comment\"]\n    ],\n    hereregexp: [\n      [/[^\\\\\\/#]+/, \"regexp\"],\n      [/\\\\./, \"regexp\"],\n      [/#.*$/, \"comment\"],\n      [\"///[igm]*\", { token: \"regexp\", next: \"@pop\" }],\n      [/\\//, \"regexp\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","ignoreCase","tokenPostfix","token","regEx","keywords","symbols","escapes","tokenizer","root","cases","this","next","string","herestring","comment","hereregexp","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"coffee.a78254d3.js.map"}