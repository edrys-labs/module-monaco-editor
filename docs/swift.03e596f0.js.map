{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,E,I,E,E,kD,E,iB,C,GAsT/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,EAGF;;8FAE8F,GAN9F,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GApTF,IAAI,EAAO,CACT,SAAU,CACR,YAAa,KACb,aAAc,CAAC,KAAM,KAAK,AAC5B,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,AACH,EACI,EAAW,CACb,aAAc,GACd,aAAc,SAEd,WAAY,kBACZ,WAAY,CACV,iBACA,YACA,gBACA,iBACA,YACA,iBACA,qBACA,aACA,aACA,YACA,qBACA,eACA,oBACA,gBACA,aACA,cACA,cACA,kBACA,qBACA,mBACA,uBACA,YACA,UACA,eACA,aACA,UACA,QACA,gBACA,WACA,YACA,QACA,eACA,kBACA,mBACA,kCACA,iBACA,YACA,aACA,WACA,oBACA,2BACD,CACD,gBAAiB,CAAC,OAAQ,SAAU,WAAY,cAAe,UAAU,CACzE,SAAU,CACR,aACA,gBACA,UACA,aACA,QACA,UACA,SACA,SACA,QACA,UACA,eACA,YACA,YACA,MACA,gBACA,WACA,QACA,YACA,kBACA,WACA,MACA,WACA,OACA,OACA,QACA,KACA,aACA,iBACA,gBACA,QACA,QACA,QACA,OACA,QACA,QACA,WACA,cACA,UACA,QACA,SACA,SACA,KACA,UACA,cACA,OACA,OACA,YACA,cACA,QACA,cACA,QACA,MACA,OACA,MACA,QACA,aACA,KACA,SACA,KACA,WACA,QACA,OACA,QACA,WACA,KACA,WACA,OACA,OACA,MACA,YACA,WACA,MACA,OACA,cACA,cACA,OACA,WACA,WACA,WACA,UACA,aACA,kBACA,SACA,UACA,WACA,SACA,SACA,WACA,WACA,SACA,QACA,OACA,OACA,MACA,OACA,SACA,SACA,YACA,QACA,SACA,QACA,SACA,OACA,MACA,YACA,UACA,SACA,MACA,OACA,QACA,QACA,UACA,cACA,UACD,CACD,QAAS,oCAET,cAAe,oPACf,YAAa,qFACb,UAAW,qDAEX,QAAS,wEACT,UAAW,CACT,KAAM,CACJ,CAAE,QAAS,aAAc,EACzB,CAAE,QAAS,UAAW,EACtB,CAA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","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"bS4jh\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/swift/swift.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf) /*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/ ;\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar conf = {\n    comments: {\n        lineComment: \"//\",\n        blockComment: [\n            \"/*\",\n            \"*/\"\n        ]\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        },\n        {\n            open: \"`\",\n            close: \"`\"\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: '\"',\n            close: '\"'\n        },\n        {\n            open: \"'\",\n            close: \"'\"\n        },\n        {\n            open: \"`\",\n            close: \"`\"\n        }\n    ]\n};\nvar language = {\n    defaultToken: \"\",\n    tokenPostfix: \".swift\",\n    // TODO(owensd): Support the full range of unicode valid identifiers.\n    identifier: /[a-zA-Z_][\\w$]*/,\n    attributes: [\n        \"@GKInspectable\",\n        \"@IBAction\",\n        \"@IBDesignable\",\n        \"@IBInspectable\",\n        \"@IBOutlet\",\n        \"@IBSegueAction\",\n        \"@NSApplicationMain\",\n        \"@NSCopying\",\n        \"@NSManaged\",\n        \"@Sendable\",\n        \"@UIApplicationMain\",\n        \"@autoclosure\",\n        \"@actorIndependent\",\n        \"@asyncHandler\",\n        \"@available\",\n        \"@convention\",\n        \"@derivative\",\n        \"@differentiable\",\n        \"@discardableResult\",\n        \"@dynamicCallable\",\n        \"@dynamicMemberLookup\",\n        \"@escaping\",\n        \"@frozen\",\n        \"@globalActor\",\n        \"@inlinable\",\n        \"@inline\",\n        \"@main\",\n        \"@noDerivative\",\n        \"@nonobjc\",\n        \"@noreturn\",\n        \"@objc\",\n        \"@objcMembers\",\n        \"@preconcurrency\",\n        \"@propertyWrapper\",\n        \"@requires_stored_property_inits\",\n        \"@resultBuilder\",\n        \"@testable\",\n        \"@unchecked\",\n        \"@unknown\",\n        \"@usableFromInline\",\n        \"@warn_unqualified_access\"\n    ],\n    accessmodifiers: [\n        \"open\",\n        \"public\",\n        \"internal\",\n        \"fileprivate\",\n        \"private\"\n    ],\n    keywords: [\n        \"#available\",\n        \"#colorLiteral\",\n        \"#column\",\n        \"#dsohandle\",\n        \"#else\",\n        \"#elseif\",\n        \"#endif\",\n        \"#error\",\n        \"#file\",\n        \"#fileID\",\n        \"#fileLiteral\",\n        \"#filePath\",\n        \"#function\",\n        \"#if\",\n        \"#imageLiteral\",\n        \"#keyPath\",\n        \"#line\",\n        \"#selector\",\n        \"#sourceLocation\",\n        \"#warning\",\n        \"Any\",\n        \"Protocol\",\n        \"Self\",\n        \"Type\",\n        \"actor\",\n        \"as\",\n        \"assignment\",\n        \"associatedtype\",\n        \"associativity\",\n        \"async\",\n        \"await\",\n        \"break\",\n        \"case\",\n        \"catch\",\n        \"class\",\n        \"continue\",\n        \"convenience\",\n        \"default\",\n        \"defer\",\n        \"deinit\",\n        \"didSet\",\n        \"do\",\n        \"dynamic\",\n        \"dynamicType\",\n        \"else\",\n        \"enum\",\n        \"extension\",\n        \"fallthrough\",\n        \"false\",\n        \"fileprivate\",\n        \"final\",\n        \"for\",\n        \"func\",\n        \"get\",\n        \"guard\",\n        \"higherThan\",\n        \"if\",\n        \"import\",\n        \"in\",\n        \"indirect\",\n        \"infix\",\n        \"init\",\n        \"inout\",\n        \"internal\",\n        \"is\",\n        \"isolated\",\n        \"lazy\",\n        \"left\",\n        \"let\",\n        \"lowerThan\",\n        \"mutating\",\n        \"nil\",\n        \"none\",\n        \"nonisolated\",\n        \"nonmutating\",\n        \"open\",\n        \"operator\",\n        \"optional\",\n        \"override\",\n        \"postfix\",\n        \"precedence\",\n        \"precedencegroup\",\n        \"prefix\",\n        \"private\",\n        \"protocol\",\n        \"public\",\n        \"repeat\",\n        \"required\",\n        \"rethrows\",\n        \"return\",\n        \"right\",\n        \"safe\",\n        \"self\",\n        \"set\",\n        \"some\",\n        \"static\",\n        \"struct\",\n        \"subscript\",\n        \"super\",\n        \"switch\",\n        \"throw\",\n        \"throws\",\n        \"true\",\n        \"try\",\n        \"typealias\",\n        \"unowned\",\n        \"unsafe\",\n        \"var\",\n        \"weak\",\n        \"where\",\n        \"while\",\n        \"willSet\",\n        \"__consuming\",\n        \"__owned\"\n    ],\n    symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n    // Moved . to operatorstart so it can be a delimiter\n    operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n    operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n    operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n    // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            {\n                include: \"@whitespace\"\n            },\n            {\n                include: \"@comment\"\n            },\n            {\n                include: \"@attribute\"\n            },\n            {\n                include: \"@literal\"\n            },\n            {\n                include: \"@keyword\"\n            },\n            {\n                include: \"@invokedmethod\"\n            },\n            {\n                include: \"@symbol\"\n            }\n        ],\n        whitespace: [\n            [\n                /\\s+/,\n                \"white\"\n            ],\n            [\n                /\"\"\"/,\n                \"string.quote\",\n                \"@endDblDocString\"\n            ]\n        ],\n        endDblDocString: [\n            [\n                /[^\"]+/,\n                \"string\"\n            ],\n            [\n                /\\\\\"/,\n                \"string\"\n            ],\n            [\n                /\"\"\"/,\n                \"string.quote\",\n                \"@popall\"\n            ],\n            [\n                /\"/,\n                \"string\"\n            ]\n        ],\n        symbol: [\n            [\n                /[{}()\\[\\]]/,\n                \"@brackets\"\n            ],\n            [\n                /[<>](?!@symbols)/,\n                \"@brackets\"\n            ],\n            [\n                /[.]/,\n                \"delimiter\"\n            ],\n            [\n                /@operators/,\n                \"operator\"\n            ],\n            [\n                /@symbols/,\n                \"operator\"\n            ]\n        ],\n        comment: [\n            [\n                /\\/\\/\\/.*$/,\n                \"comment.doc\"\n            ],\n            [\n                /\\/\\*\\*/,\n                \"comment.doc\",\n                \"@commentdocbody\"\n            ],\n            [\n                /\\/\\/.*$/,\n                \"comment\"\n            ],\n            [\n                /\\/\\*/,\n                \"comment\",\n                \"@commentbody\"\n            ]\n        ],\n        commentdocbody: [\n            [\n                /\\/\\*/,\n                \"comment\",\n                \"@commentbody\"\n            ],\n            [\n                /\\*\\//,\n                \"comment.doc\",\n                \"@pop\"\n            ],\n            [\n                /\\:[a-zA-Z]+\\:/,\n                \"comment.doc.param\"\n            ],\n            [\n                /./,\n                \"comment.doc\"\n            ]\n        ],\n        commentbody: [\n            [\n                /\\/\\*/,\n                \"comment\",\n                \"@commentbody\"\n            ],\n            [\n                /\\*\\//,\n                \"comment\",\n                \"@pop\"\n            ],\n            [\n                /./,\n                \"comment\"\n            ]\n        ],\n        attribute: [\n            [\n                /@@@identifier/,\n                {\n                    cases: {\n                        \"@attributes\": \"keyword.control\",\n                        \"@default\": \"\"\n                    }\n                }\n            ]\n        ],\n        literal: [\n            [\n                /\"/,\n                {\n                    token: \"string.quote\",\n                    next: \"@stringlit\"\n                }\n            ],\n            [\n                /0[b]([01]_?)+/,\n                \"number.binary\"\n            ],\n            [\n                /0[o]([0-7]_?)+/,\n                \"number.octal\"\n            ],\n            [\n                /0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/,\n                \"number.hex\"\n            ],\n            [\n                /(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/,\n                \"number.float\"\n            ],\n            [\n                /(\\d_?)+/,\n                \"number\"\n            ]\n        ],\n        stringlit: [\n            [\n                /\\\\\\(/,\n                {\n                    token: \"operator\",\n                    next: \"@interpolatedexpression\"\n                }\n            ],\n            [\n                /@escapes/,\n                \"string\"\n            ],\n            [\n                /\\\\./,\n                \"string.escape.invalid\"\n            ],\n            [\n                /\"/,\n                {\n                    token: \"string.quote\",\n                    next: \"@pop\"\n                }\n            ],\n            [\n                /./,\n                \"string\"\n            ]\n        ],\n        interpolatedexpression: [\n            [\n                /\\(/,\n                {\n                    token: \"operator\",\n                    next: \"@interpolatedexpression\"\n                }\n            ],\n            [\n                /\\)/,\n                {\n                    token: \"operator\",\n                    next: \"@pop\"\n                }\n            ],\n            {\n                include: \"@literal\"\n            },\n            {\n                include: \"@keyword\"\n            },\n            {\n                include: \"@symbol\"\n            }\n        ],\n        keyword: [\n            [\n                /`/,\n                {\n                    token: \"operator\",\n                    next: \"@escapedkeyword\"\n                }\n            ],\n            [\n                /@identifier/,\n                {\n                    cases: {\n                        \"@keywords\": \"keyword\",\n                        \"[A-Z][a-zA-Z0-9$]*\": \"type.identifier\",\n                        \"@default\": \"identifier\"\n                    }\n                }\n            ]\n        ],\n        escapedkeyword: [\n            [\n                /`/,\n                {\n                    token: \"operator\",\n                    next: \"@pop\"\n                }\n            ],\n            [\n                /./,\n                \"identifier\"\n            ]\n        ],\n        invokedmethod: [\n            [\n                /([.])(@identifier)/,\n                {\n                    cases: {\n                        $2: [\n                            \"delimeter\",\n                            \"type.identifier\"\n                        ],\n                        \"@default\": \"\"\n                    }\n                }\n            ]\n        ]\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=swift.03e596f0.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/swift/swift.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"`\", close: \"`\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".swift\",\n  // TODO(owensd): Support the full range of unicode valid identifiers.\n  identifier: /[a-zA-Z_][\\w$]*/,\n  attributes: [\n    \"@GKInspectable\",\n    \"@IBAction\",\n    \"@IBDesignable\",\n    \"@IBInspectable\",\n    \"@IBOutlet\",\n    \"@IBSegueAction\",\n    \"@NSApplicationMain\",\n    \"@NSCopying\",\n    \"@NSManaged\",\n    \"@Sendable\",\n    \"@UIApplicationMain\",\n    \"@autoclosure\",\n    \"@actorIndependent\",\n    \"@asyncHandler\",\n    \"@available\",\n    \"@convention\",\n    \"@derivative\",\n    \"@differentiable\",\n    \"@discardableResult\",\n    \"@dynamicCallable\",\n    \"@dynamicMemberLookup\",\n    \"@escaping\",\n    \"@frozen\",\n    \"@globalActor\",\n    \"@inlinable\",\n    \"@inline\",\n    \"@main\",\n    \"@noDerivative\",\n    \"@nonobjc\",\n    \"@noreturn\",\n    \"@objc\",\n    \"@objcMembers\",\n    \"@preconcurrency\",\n    \"@propertyWrapper\",\n    \"@requires_stored_property_inits\",\n    \"@resultBuilder\",\n    \"@testable\",\n    \"@unchecked\",\n    \"@unknown\",\n    \"@usableFromInline\",\n    \"@warn_unqualified_access\"\n  ],\n  accessmodifiers: [\"open\", \"public\", \"internal\", \"fileprivate\", \"private\"],\n  keywords: [\n    \"#available\",\n    \"#colorLiteral\",\n    \"#column\",\n    \"#dsohandle\",\n    \"#else\",\n    \"#elseif\",\n    \"#endif\",\n    \"#error\",\n    \"#file\",\n    \"#fileID\",\n    \"#fileLiteral\",\n    \"#filePath\",\n    \"#function\",\n    \"#if\",\n    \"#imageLiteral\",\n    \"#keyPath\",\n    \"#line\",\n    \"#selector\",\n    \"#sourceLocation\",\n    \"#warning\",\n    \"Any\",\n    \"Protocol\",\n    \"Self\",\n    \"Type\",\n    \"actor\",\n    \"as\",\n    \"assignment\",\n    \"associatedtype\",\n    \"associativity\",\n    \"async\",\n    \"await\",\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"class\",\n    \"continue\",\n    \"convenience\",\n    \"default\",\n    \"defer\",\n    \"deinit\",\n    \"didSet\",\n    \"do\",\n    \"dynamic\",\n    \"dynamicType\",\n    \"else\",\n    \"enum\",\n    \"extension\",\n    \"fallthrough\",\n    \"false\",\n    \"fileprivate\",\n    \"final\",\n    \"for\",\n    \"func\",\n    \"get\",\n    \"guard\",\n    \"higherThan\",\n    \"if\",\n    \"import\",\n    \"in\",\n    \"indirect\",\n    \"infix\",\n    \"init\",\n    \"inout\",\n    \"internal\",\n    \"is\",\n    \"isolated\",\n    \"lazy\",\n    \"left\",\n    \"let\",\n    \"lowerThan\",\n    \"mutating\",\n    \"nil\",\n    \"none\",\n    \"nonisolated\",\n    \"nonmutating\",\n    \"open\",\n    \"operator\",\n    \"optional\",\n    \"override\",\n    \"postfix\",\n    \"precedence\",\n    \"precedencegroup\",\n    \"prefix\",\n    \"private\",\n    \"protocol\",\n    \"public\",\n    \"repeat\",\n    \"required\",\n    \"rethrows\",\n    \"return\",\n    \"right\",\n    \"safe\",\n    \"self\",\n    \"set\",\n    \"some\",\n    \"static\",\n    \"struct\",\n    \"subscript\",\n    \"super\",\n    \"switch\",\n    \"throw\",\n    \"throws\",\n    \"true\",\n    \"try\",\n    \"typealias\",\n    \"unowned\",\n    \"unsafe\",\n    \"var\",\n    \"weak\",\n    \"where\",\n    \"while\",\n    \"willSet\",\n    \"__consuming\",\n    \"__owned\"\n  ],\n  symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\n  // Moved . to operatorstart so it can be a delimiter\n  operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\n  operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\n  operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\n  // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      { include: \"@comment\" },\n      { include: \"@attribute\" },\n      { include: \"@literal\" },\n      { include: \"@keyword\" },\n      { include: \"@invokedmethod\" },\n      { include: \"@symbol\" }\n    ],\n    whitespace: [\n      [/\\s+/, \"white\"],\n      [/\"\"\"/, \"string.quote\", \"@endDblDocString\"]\n    ],\n    endDblDocString: [\n      [/[^\"]+/, \"string\"],\n      [/\\\\\"/, \"string\"],\n      [/\"\"\"/, \"string.quote\", \"@popall\"],\n      [/\"/, \"string\"]\n    ],\n    symbol: [\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [/[.]/, \"delimiter\"],\n      [/@operators/, \"operator\"],\n      [/@symbols/, \"operator\"]\n    ],\n    comment: [\n      [/\\/\\/\\/.*$/, \"comment.doc\"],\n      [/\\/\\*\\*/, \"comment.doc\", \"@commentdocbody\"],\n      [/\\/\\/.*$/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@commentbody\"]\n    ],\n    commentdocbody: [\n      [/\\/\\*/, \"comment\", \"@commentbody\"],\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\n      [/\\:[a-zA-Z]+\\:/, \"comment.doc.param\"],\n      [/./, \"comment.doc\"]\n    ],\n    commentbody: [\n      [/\\/\\*/, \"comment\", \"@commentbody\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/./, \"comment\"]\n    ],\n    attribute: [\n      [\n        /@@@identifier/,\n        {\n          cases: {\n            \"@attributes\": \"keyword.control\",\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ],\n    literal: [\n      [/\"/, { token: \"string.quote\", next: \"@stringlit\" }],\n      [/0[b]([01]_?)+/, \"number.binary\"],\n      [/0[o]([0-7]_?)+/, \"number.octal\"],\n      [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, \"number.hex\"],\n      [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, \"number.float\"],\n      [/(\\d_?)+/, \"number\"]\n    ],\n    stringlit: [\n      [/\\\\\\(/, { token: \"operator\", next: \"@interpolatedexpression\" }],\n      [/@escapes/, \"string\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }],\n      [/./, \"string\"]\n    ],\n    interpolatedexpression: [\n      [/\\(/, { token: \"operator\", next: \"@interpolatedexpression\" }],\n      [/\\)/, { token: \"operator\", next: \"@pop\" }],\n      { include: \"@literal\" },\n      { include: \"@keyword\" },\n      { include: \"@symbol\" }\n    ],\n    keyword: [\n      [/`/, { token: \"operator\", next: \"@escapedkeyword\" }],\n      [\n        /@identifier/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"[A-Z][a-zA-Z0-9$]*\": \"type.identifier\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ]\n    ],\n    escapedkeyword: [\n      [/`/, { token: \"operator\", next: \"@pop\" }],\n      [/./, \"identifier\"]\n    ],\n    invokedmethod: [\n      [\n        /([.])(@identifier)/,\n        {\n          cases: {\n            $2: [\"delimeter\", \"type.identifier\"],\n            \"@default\": \"\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n/*!---------------------------------------------------------------------------------------------\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\n *--------------------------------------------------------------------------------------------*/\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","identifier","attributes","accessmodifiers","keywords","symbols","operatorstart","operatorend","operators","escapes","tokenizer","root","include","whitespace","endDblDocString","symbol","comment","commentdocbody","commentbody","attribute","cases","literal","token","next","stringlit","interpolatedexpression","keyword","escapedkeyword","invokedmethod","$2","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"swift.03e596f0.js.map"}