{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,E,I,E,E,kD,E,iB,C,GAmZ/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GAjZF,IAAI,EAAO,CACT,SAAU,CACR,YAAa,IACf,EACA,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,UAAU,AAAC,EACtD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,UAAU,AAAC,EACtD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,UAAU,AAAC,EACtD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,UAAU,AAAC,EACtD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,UAAU,AAAC,EACvD,CACD,QAAS,CACP,QAAS,CAAA,CACX,CACF,EACI,EAAW,CACb,aAAc,GACd,aAAc,OACd,WAAY,CAAA,EACZ,SAAU,CACR,CAAE,MAAO,kBAAmB,KAAM,IAAK,MAAO,GAAI,EAClD,CAAE,MAAO,kBAAmB,KAAM,IAAK,MAAO,GAAI,EAClD,CAAE,MAAO,wBAAyB,KAAM,IAAK,MAAO,GAAI,EACzD,CACD,SAAU,CACR,SACA,QACA,OACA,UACA,UACA,OACA,OACA,UACA,MACA,KACA,KACA,UACA,QACA,SACA,SACA,MACA,OACD,CACD,KAAM,CACJ,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,WACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,WACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,OACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,SACA,MACA,QACA,KACA,OACA,MACA,OACA,OACA,OACA,QACA,MACA,WACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,SACA,KACA,IACA,KACA,QACA,MACD,CAED,QAAS,8BACT,QAAS,wEACT,UAAW,CACT,KAAM,CAEJ,CACE,2BACA,CACE,MAAO,CACL,UAAW,CACT,MAAO,CACL,OAAQ,CAAC,GAAI,MAAM,CACnB,WAAY,CAAC,GAAI,CAAE,MAAO,MAAO,KAAM,SAAU,EAAE,AACrD,CACF,EACA,cAAe,CAAC,GAAI,CAAE,MAAO,YAAa,EAAE,CAC5C,WAAY,CAAC,GAAI,GAAG,AACtB,CACF,EACD,CAED,CACE,4BACA,CACE,MA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","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"lijk5\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/pug/pug.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf);\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar conf = {\n    comments: {\n        lineComment: \"//\"\n    },\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: '\"',\n            close: '\"',\n            notIn: [\n                \"string\",\n                \"comment\"\n            ]\n        },\n        {\n            open: \"'\",\n            close: \"'\",\n            notIn: [\n                \"string\",\n                \"comment\"\n            ]\n        },\n        {\n            open: \"{\",\n            close: \"}\",\n            notIn: [\n                \"string\",\n                \"comment\"\n            ]\n        },\n        {\n            open: \"[\",\n            close: \"]\",\n            notIn: [\n                \"string\",\n                \"comment\"\n            ]\n        },\n        {\n            open: \"(\",\n            close: \")\",\n            notIn: [\n                \"string\",\n                \"comment\"\n            ]\n        }\n    ],\n    folding: {\n        offSide: true\n    }\n};\nvar language = {\n    defaultToken: \"\",\n    tokenPostfix: \".pug\",\n    ignoreCase: true,\n    brackets: [\n        {\n            token: \"delimiter.curly\",\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            token: \"delimiter.array\",\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            token: \"delimiter.parenthesis\",\n            open: \"(\",\n            close: \")\"\n        }\n    ],\n    keywords: [\n        \"append\",\n        \"block\",\n        \"case\",\n        \"default\",\n        \"doctype\",\n        \"each\",\n        \"else\",\n        \"extends\",\n        \"for\",\n        \"if\",\n        \"in\",\n        \"include\",\n        \"mixin\",\n        \"typeof\",\n        \"unless\",\n        \"var\",\n        \"when\"\n    ],\n    tags: [\n        \"a\",\n        \"abbr\",\n        \"acronym\",\n        \"address\",\n        \"area\",\n        \"article\",\n        \"aside\",\n        \"audio\",\n        \"b\",\n        \"base\",\n        \"basefont\",\n        \"bdi\",\n        \"bdo\",\n        \"blockquote\",\n        \"body\",\n        \"br\",\n        \"button\",\n        \"canvas\",\n        \"caption\",\n        \"center\",\n        \"cite\",\n        \"code\",\n        \"col\",\n        \"colgroup\",\n        \"command\",\n        \"datalist\",\n        \"dd\",\n        \"del\",\n        \"details\",\n        \"dfn\",\n        \"div\",\n        \"dl\",\n        \"dt\",\n        \"em\",\n        \"embed\",\n        \"fieldset\",\n        \"figcaption\",\n        \"figure\",\n        \"font\",\n        \"footer\",\n        \"form\",\n        \"frame\",\n        \"frameset\",\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"h4\",\n        \"h5\",\n        \"h6\",\n        \"head\",\n        \"header\",\n        \"hgroup\",\n        \"hr\",\n        \"html\",\n        \"i\",\n        \"iframe\",\n        \"img\",\n        \"input\",\n        \"ins\",\n        \"keygen\",\n        \"kbd\",\n        \"label\",\n        \"li\",\n        \"link\",\n        \"map\",\n        \"mark\",\n        \"menu\",\n        \"meta\",\n        \"meter\",\n        \"nav\",\n        \"noframes\",\n        \"noscript\",\n        \"object\",\n        \"ol\",\n        \"optgroup\",\n        \"option\",\n        \"output\",\n        \"p\",\n        \"param\",\n        \"pre\",\n        \"progress\",\n        \"q\",\n        \"rp\",\n        \"rt\",\n        \"ruby\",\n        \"s\",\n        \"samp\",\n        \"script\",\n        \"section\",\n        \"select\",\n        \"small\",\n        \"source\",\n        \"span\",\n        \"strike\",\n        \"strong\",\n        \"style\",\n        \"sub\",\n        \"summary\",\n        \"sup\",\n        \"table\",\n        \"tbody\",\n        \"td\",\n        \"textarea\",\n        \"tfoot\",\n        \"th\",\n        \"thead\",\n        \"time\",\n        \"title\",\n        \"tr\",\n        \"tracks\",\n        \"tt\",\n        \"u\",\n        \"ul\",\n        \"video\",\n        \"wbr\"\n    ],\n    // we include these common regular expressions\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            // Tag or a keyword at start\n            [\n                /^(\\s*)([a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        \"$2@tags\": {\n                            cases: {\n                                \"@eos\": [\n                                    \"\",\n                                    \"tag\"\n                                ],\n                                \"@default\": [\n                                    \"\",\n                                    {\n                                        token: \"tag\",\n                                        next: \"@tag.$1\"\n                                    }\n                                ]\n                            }\n                        },\n                        \"$2@keywords\": [\n                            \"\",\n                            {\n                                token: \"keyword.$2\"\n                            }\n                        ],\n                        \"@default\": [\n                            \"\",\n                            \"\"\n                        ]\n                    }\n                }\n            ],\n            // id\n            [\n                /^(\\s*)(#[a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        \"@eos\": [\n                            \"\",\n                            \"tag.id\"\n                        ],\n                        \"@default\": [\n                            \"\",\n                            {\n                                token: \"tag.id\",\n                                next: \"@tag.$1\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            // class\n            [\n                /^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        \"@eos\": [\n                            \"\",\n                            \"tag.class\"\n                        ],\n                        \"@default\": [\n                            \"\",\n                            {\n                                token: \"tag.class\",\n                                next: \"@tag.$1\"\n                            }\n                        ]\n                    }\n                }\n            ],\n            // plain text with pipe\n            [\n                /^(\\s*)(\\|.*)$/,\n                \"\"\n            ],\n            {\n                include: \"@whitespace\"\n            },\n            // keywords\n            [\n                /[a-zA-Z_$][\\w$]*/,\n                {\n                    cases: {\n                        \"@keywords\": {\n                            token: \"keyword.$0\"\n                        },\n                        \"@default\": \"\"\n                    }\n                }\n            ],\n            // delimiters and operators\n            [\n                /[{}()\\[\\]]/,\n                \"@brackets\"\n            ],\n            [\n                /@symbols/,\n                \"delimiter\"\n            ],\n            // numbers\n            [\n                /\\d+\\.\\d+([eE][\\-+]?\\d+)?/,\n                \"number.float\"\n            ],\n            [\n                /\\d+/,\n                \"number\"\n            ],\n            // strings:\n            [\n                /\"/,\n                \"string\",\n                '@string.\"'\n            ],\n            [\n                /'/,\n                \"string\",\n                \"@string.'\"\n            ]\n        ],\n        tag: [\n            [\n                /(\\.)(\\s*$)/,\n                [\n                    {\n                        token: \"delimiter\",\n                        next: \"@blockText.$S2.\"\n                    },\n                    \"\"\n                ]\n            ],\n            [\n                /\\s+/,\n                {\n                    token: \"\",\n                    next: \"@simpleText\"\n                }\n            ],\n            // id\n            [\n                /#[a-zA-Z_-][\\w-]*/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"tag.id\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"tag.id\"\n                    }\n                }\n            ],\n            // class\n            [\n                /\\.[a-zA-Z_-][\\w-]*/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"tag.class\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": \"tag.class\"\n                    }\n                }\n            ],\n            // attributes\n            [\n                /\\(/,\n                {\n                    token: \"delimiter.parenthesis\",\n                    next: \"@attributeList\"\n                }\n            ]\n        ],\n        simpleText: [\n            [\n                /[^#]+$/,\n                {\n                    token: \"\",\n                    next: \"@popall\"\n                }\n            ],\n            [\n                /[^#]+/,\n                {\n                    token: \"\"\n                }\n            ],\n            // interpolation\n            [\n                /(#{)([^}]*)(})/,\n                {\n                    cases: {\n                        \"@eos\": [\n                            \"interpolation.delimiter\",\n                            \"interpolation\",\n                            {\n                                token: \"interpolation.delimiter\",\n                                next: \"@popall\"\n                            }\n                        ],\n                        \"@default\": [\n                            \"interpolation.delimiter\",\n                            \"interpolation\",\n                            \"interpolation.delimiter\"\n                        ]\n                    }\n                }\n            ],\n            [\n                /#$/,\n                {\n                    token: \"\",\n                    next: \"@popall\"\n                }\n            ],\n            [\n                /#/,\n                \"\"\n            ]\n        ],\n        attributeList: [\n            [\n                /\\s+/,\n                \"\"\n            ],\n            [\n                /(\\w+)(\\s*=\\s*)(\"|')/,\n                [\n                    \"attribute.name\",\n                    \"delimiter\",\n                    {\n                        token: \"attribute.value\",\n                        next: \"@value.$3\"\n                    }\n                ]\n            ],\n            [\n                /\\w+/,\n                \"attribute.name\"\n            ],\n            [\n                /,/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"attribute.delimiter\",\n                            next: \"@popall\"\n                        },\n                        \"@default\": \"attribute.delimiter\"\n                    }\n                }\n            ],\n            [\n                /\\)$/,\n                {\n                    token: \"delimiter.parenthesis\",\n                    next: \"@popall\"\n                }\n            ],\n            [\n                /\\)/,\n                {\n                    token: \"delimiter.parenthesis\",\n                    next: \"@pop\"\n                }\n            ]\n        ],\n        whitespace: [\n            [\n                /^(\\s*)(\\/\\/.*)$/,\n                {\n                    token: \"comment\",\n                    next: \"@blockText.$1.comment\"\n                }\n            ],\n            [\n                /[ \\t\\r\\n]+/,\n                \"\"\n            ],\n            [\n                /<!--/,\n                {\n                    token: \"comment\",\n                    next: \"@comment\"\n                }\n            ]\n        ],\n        blockText: [\n            [\n                /^\\s+.*$/,\n                {\n                    cases: {\n                        \"($S2\\\\s+.*$)\": {\n                            token: \"$S3\"\n                        },\n                        \"@default\": {\n                            token: \"@rematch\",\n                            next: \"@popall\"\n                        }\n                    }\n                }\n            ],\n            [\n                /./,\n                {\n                    token: \"@rematch\",\n                    next: \"@popall\"\n                }\n            ]\n        ],\n        comment: [\n            [\n                /[^<\\-]+/,\n                \"comment.content\"\n            ],\n            [\n                /-->/,\n                {\n                    token: \"comment\",\n                    next: \"@pop\"\n                }\n            ],\n            [\n                /<!--/,\n                \"comment.content.invalid\"\n            ],\n            [\n                /[<\\-]/,\n                \"comment.content\"\n            ]\n        ],\n        string: [\n            [\n                /[^\\\\\"'#]+/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"string\",\n                            next: \"@popall\"\n                        },\n                        \"@default\": \"string\"\n                    }\n                }\n            ],\n            [\n                /@escapes/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"string.escape\",\n                            next: \"@popall\"\n                        },\n                        \"@default\": \"string.escape\"\n                    }\n                }\n            ],\n            [\n                /\\\\./,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"string.escape.invalid\",\n                            next: \"@popall\"\n                        },\n                        \"@default\": \"string.escape.invalid\"\n                    }\n                }\n            ],\n            // interpolation\n            [\n                /(#{)([^}]*)(})/,\n                [\n                    \"interpolation.delimiter\",\n                    \"interpolation\",\n                    \"interpolation.delimiter\"\n                ]\n            ],\n            [\n                /#/,\n                \"string\"\n            ],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        \"$#==$S2\": {\n                            token: \"string\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": {\n                            token: \"string\"\n                        }\n                    }\n                }\n            ]\n        ],\n        // Almost identical to above, except for escapes and the output token\n        value: [\n            [\n                /[^\\\\\"']+/,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"attribute.value\",\n                            next: \"@popall\"\n                        },\n                        \"@default\": \"attribute.value\"\n                    }\n                }\n            ],\n            [\n                /\\\\./,\n                {\n                    cases: {\n                        \"@eos\": {\n                            token: \"attribute.value\",\n                            next: \"@popall\"\n                        },\n                        \"@default\": \"attribute.value\"\n                    }\n                }\n            ],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        \"$#==$S2\": {\n                            token: \"attribute.value\",\n                            next: \"@pop\"\n                        },\n                        \"@default\": {\n                            token: \"attribute.value\"\n                        }\n                    }\n                }\n            ]\n        ]\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=pug.05ff2f35.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/pug/pug.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }\n  ],\n  folding: {\n    offSide: true\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".pug\",\n  ignoreCase: true,\n  brackets: [\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.array\", open: \"[\", close: \"]\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" }\n  ],\n  keywords: [\n    \"append\",\n    \"block\",\n    \"case\",\n    \"default\",\n    \"doctype\",\n    \"each\",\n    \"else\",\n    \"extends\",\n    \"for\",\n    \"if\",\n    \"in\",\n    \"include\",\n    \"mixin\",\n    \"typeof\",\n    \"unless\",\n    \"var\",\n    \"when\"\n  ],\n  tags: [\n    \"a\",\n    \"abbr\",\n    \"acronym\",\n    \"address\",\n    \"area\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"base\",\n    \"basefont\",\n    \"bdi\",\n    \"bdo\",\n    \"blockquote\",\n    \"body\",\n    \"br\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"center\",\n    \"cite\",\n    \"code\",\n    \"col\",\n    \"colgroup\",\n    \"command\",\n    \"datalist\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"font\",\n    \"footer\",\n    \"form\",\n    \"frame\",\n    \"frameset\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"head\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"html\",\n    \"i\",\n    \"iframe\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"keygen\",\n    \"kbd\",\n    \"label\",\n    \"li\",\n    \"link\",\n    \"map\",\n    \"mark\",\n    \"menu\",\n    \"meta\",\n    \"meter\",\n    \"nav\",\n    \"noframes\",\n    \"noscript\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"output\",\n    \"p\",\n    \"param\",\n    \"pre\",\n    \"progress\",\n    \"q\",\n    \"rp\",\n    \"rt\",\n    \"ruby\",\n    \"s\",\n    \"samp\",\n    \"script\",\n    \"section\",\n    \"select\",\n    \"small\",\n    \"source\",\n    \"span\",\n    \"strike\",\n    \"strong\",\n    \"style\",\n    \"sub\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"title\",\n    \"tr\",\n    \"tracks\",\n    \"tt\",\n    \"u\",\n    \"ul\",\n    \"video\",\n    \"wbr\"\n  ],\n  // we include these common regular expressions\n  symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      // Tag or a keyword at start\n      [\n        /^(\\s*)([a-zA-Z_-][\\w-]*)/,\n        {\n          cases: {\n            \"$2@tags\": {\n              cases: {\n                \"@eos\": [\"\", \"tag\"],\n                \"@default\": [\"\", { token: \"tag\", next: \"@tag.$1\" }]\n              }\n            },\n            \"$2@keywords\": [\"\", { token: \"keyword.$2\" }],\n            \"@default\": [\"\", \"\"]\n          }\n        }\n      ],\n      // id\n      [\n        /^(\\s*)(#[a-zA-Z_-][\\w-]*)/,\n        {\n          cases: {\n            \"@eos\": [\"\", \"tag.id\"],\n            \"@default\": [\"\", { token: \"tag.id\", next: \"@tag.$1\" }]\n          }\n        }\n      ],\n      // class\n      [\n        /^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/,\n        {\n          cases: {\n            \"@eos\": [\"\", \"tag.class\"],\n            \"@default\": [\"\", { token: \"tag.class\", next: \"@tag.$1\" }]\n          }\n        }\n      ],\n      // plain text with pipe\n      [/^(\\s*)(\\|.*)$/, \"\"],\n      { include: \"@whitespace\" },\n      // keywords\n      [\n        /[a-zA-Z_$][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // delimiters and operators\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, \"delimiter\"],\n      // numbers\n      [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/\\d+/, \"number\"],\n      // strings:\n      [/\"/, \"string\", '@string.\"'],\n      [/'/, \"string\", \"@string.'\"]\n    ],\n    tag: [\n      [/(\\.)(\\s*$)/, [{ token: \"delimiter\", next: \"@blockText.$S2.\" }, \"\"]],\n      [/\\s+/, { token: \"\", next: \"@simpleText\" }],\n      // id\n      [\n        /#[a-zA-Z_-][\\w-]*/,\n        {\n          cases: {\n            \"@eos\": { token: \"tag.id\", next: \"@pop\" },\n            \"@default\": \"tag.id\"\n          }\n        }\n      ],\n      // class\n      [\n        /\\.[a-zA-Z_-][\\w-]*/,\n        {\n          cases: {\n            \"@eos\": { token: \"tag.class\", next: \"@pop\" },\n            \"@default\": \"tag.class\"\n          }\n        }\n      ],\n      // attributes\n      [/\\(/, { token: \"delimiter.parenthesis\", next: \"@attributeList\" }]\n    ],\n    simpleText: [\n      [/[^#]+$/, { token: \"\", next: \"@popall\" }],\n      [/[^#]+/, { token: \"\" }],\n      // interpolation\n      [\n        /(#{)([^}]*)(})/,\n        {\n          cases: {\n            \"@eos\": [\n              \"interpolation.delimiter\",\n              \"interpolation\",\n              {\n                token: \"interpolation.delimiter\",\n                next: \"@popall\"\n              }\n            ],\n            \"@default\": [\"interpolation.delimiter\", \"interpolation\", \"interpolation.delimiter\"]\n          }\n        }\n      ],\n      [/#$/, { token: \"\", next: \"@popall\" }],\n      [/#/, \"\"]\n    ],\n    attributeList: [\n      [/\\s+/, \"\"],\n      [\n        /(\\w+)(\\s*=\\s*)(\"|')/,\n        [\"attribute.name\", \"delimiter\", { token: \"attribute.value\", next: \"@value.$3\" }]\n      ],\n      [/\\w+/, \"attribute.name\"],\n      [\n        /,/,\n        {\n          cases: {\n            \"@eos\": {\n              token: \"attribute.delimiter\",\n              next: \"@popall\"\n            },\n            \"@default\": \"attribute.delimiter\"\n          }\n        }\n      ],\n      [/\\)$/, { token: \"delimiter.parenthesis\", next: \"@popall\" }],\n      [/\\)/, { token: \"delimiter.parenthesis\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/^(\\s*)(\\/\\/.*)$/, { token: \"comment\", next: \"@blockText.$1.comment\" }],\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/<!--/, { token: \"comment\", next: \"@comment\" }]\n    ],\n    blockText: [\n      [\n        /^\\s+.*$/,\n        {\n          cases: {\n            \"($S2\\\\s+.*$)\": { token: \"$S3\" },\n            \"@default\": { token: \"@rematch\", next: \"@popall\" }\n          }\n        }\n      ],\n      [/./, { token: \"@rematch\", next: \"@popall\" }]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, { token: \"comment\", next: \"@pop\" }],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ],\n    string: [\n      [\n        /[^\\\\\"'#]+/,\n        {\n          cases: {\n            \"@eos\": { token: \"string\", next: \"@popall\" },\n            \"@default\": \"string\"\n          }\n        }\n      ],\n      [\n        /@escapes/,\n        {\n          cases: {\n            \"@eos\": { token: \"string.escape\", next: \"@popall\" },\n            \"@default\": \"string.escape\"\n          }\n        }\n      ],\n      [\n        /\\\\./,\n        {\n          cases: {\n            \"@eos\": {\n              token: \"string.escape.invalid\",\n              next: \"@popall\"\n            },\n            \"@default\": \"string.escape.invalid\"\n          }\n        }\n      ],\n      // interpolation\n      [/(#{)([^}]*)(})/, [\"interpolation.delimiter\", \"interpolation\", \"interpolation.delimiter\"]],\n      [/#/, \"string\"],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": { token: \"string\" }\n          }\n        }\n      ]\n    ],\n    // Almost identical to above, except for escapes and the output token\n    value: [\n      [\n        /[^\\\\\"']+/,\n        {\n          cases: {\n            \"@eos\": { token: \"attribute.value\", next: \"@popall\" },\n            \"@default\": \"attribute.value\"\n          }\n        }\n      ],\n      [\n        /\\\\./,\n        {\n          cases: {\n            \"@eos\": { token: \"attribute.value\", next: \"@popall\" },\n            \"@default\": \"attribute.value\"\n          }\n        }\n      ],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"attribute.value\", next: \"@pop\" },\n            \"@default\": { token: \"attribute.value\" }\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","folding","offSide","defaultToken","tokenPostfix","ignoreCase","token","keywords","tags","symbols","escapes","tokenizer","root","cases","next","include","tag","simpleText","attributeList","whitespace","blockText","comment","string","value","interopDefault","a","__esModule","default","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"pug.05ff2f35.js.map"}