{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,ECAA;;;;;+EAK+E,E,I,E,E,kD,E,iB,C,GA+K/E,EAAA,MAAA,CAAA,EAAA,OAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,WAAA,IAEE,GA7KF,IAAI,EAAO,CACT,SAAU,CACR,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACV,CAAC,IAAK,IAAI,CACX,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAS,AAAC,EAC5C,CACD,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACxB,CAAE,KAAM,IAAK,MAAO,GAAI,EACzB,CACD,QAAS,CACP,QAAS,CACP,MAAO,AAAI,OAAO,uCAC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","sources":["<anon>","node_modules/monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"hLliF\":[function(require,module,exports,__globalThis) {\n/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/ // src/basic-languages/restructuredtext/restructuredtext.ts\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"conf\", ()=>conf);\nparcelHelpers.export(exports, \"language\", ()=>language);\nvar conf = {\n    brackets: [\n        [\n            \"{\",\n            \"}\"\n        ],\n        [\n            \"[\",\n            \"]\"\n        ],\n        [\n            \"(\",\n            \")\"\n        ]\n    ],\n    autoClosingPairs: [\n        {\n            open: \"{\",\n            close: \"}\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: \"<\",\n            close: \">\",\n            notIn: [\n                \"string\"\n            ]\n        }\n    ],\n    surroundingPairs: [\n        {\n            open: \"(\",\n            close: \")\"\n        },\n        {\n            open: \"[\",\n            close: \"]\"\n        },\n        {\n            open: \"`\",\n            close: \"`\"\n        }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n            end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n        }\n    }\n};\nvar language = {\n    defaultToken: \"\",\n    tokenPostfix: \".rst\",\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    escapes: /\\\\(?:@control)/,\n    empty: [\n        \"area\",\n        \"base\",\n        \"basefont\",\n        \"br\",\n        \"col\",\n        \"frame\",\n        \"hr\",\n        \"img\",\n        \"input\",\n        \"isindex\",\n        \"link\",\n        \"meta\",\n        \"param\"\n    ],\n    alphanumerics: /[A-Za-z0-9]/,\n    simpleRefNameWithoutBq: /(?:@alphanumerics[-_+:.]*@alphanumerics)+|(?:@alphanumerics+)/,\n    simpleRefName: /(?:`@phrase`|@simpleRefNameWithoutBq)/,\n    phrase: /@simpleRefNameWithoutBq(?:\\s@simpleRefNameWithoutBq)*/,\n    citationName: /[A-Za-z][A-Za-z0-9-_.]*/,\n    blockLiteralStart: /(?:[!\"#$%&'()*+,-./:;<=>?@\\[\\]^_`{|}~]|[\\s])/,\n    precedingChars: /(?:[ -:/'\"<([{])/,\n    followingChars: /(?:[ -.,:;!?/'\")\\]}>]|$)/,\n    punctuation: /(=|-|~|`|#|\"|\\^|\\+|\\*|:|\\.|'|_|\\+)/,\n    tokenizer: {\n        root: [\n            //sections\n            [\n                /^(@punctuation{3,}$){1,1}?/,\n                \"keyword\"\n            ],\n            //line-blocks\n            //No rules on it\n            //bullet-lists\n            [\n                /^\\s*([\\*\\-+‣•]|[a-zA-Z0-9]+\\.|\\([a-zA-Z0-9]+\\)|[a-zA-Z0-9]+\\))\\s/,\n                \"keyword\"\n            ],\n            //literal-blocks\n            [\n                /([ ]::)\\s*$/,\n                \"keyword\",\n                \"@blankLineOfLiteralBlocks\"\n            ],\n            [\n                /(::)\\s*$/,\n                \"keyword\",\n                \"@blankLineOfLiteralBlocks\"\n            ],\n            {\n                include: \"@tables\"\n            },\n            {\n                include: \"@explicitMarkupBlocks\"\n            },\n            {\n                include: \"@inlineMarkup\"\n            }\n        ],\n        explicitMarkupBlocks: [\n            //citations\n            {\n                include: \"@citations\"\n            },\n            //footnotes\n            {\n                include: \"@footnotes\"\n            },\n            //directives\n            [\n                /^(\\.\\.\\s)(@simpleRefName)(::\\s)(.*)$/,\n                [\n                    {\n                        token: \"\",\n                        next: \"subsequentLines\"\n                    },\n                    \"keyword\",\n                    \"\",\n                    \"\"\n                ]\n            ],\n            //hyperlink-targets\n            [\n                /^(\\.\\.)(\\s+)(_)(@simpleRefName)(:)(\\s+)(.*)/,\n                [\n                    {\n                        token: \"\",\n                        next: \"hyperlinks\"\n                    },\n                    \"\",\n                    \"\",\n                    \"string.link\",\n                    \"\",\n                    \"\",\n                    \"string.link\"\n                ]\n            ],\n            //anonymous-hyperlinks\n            [\n                /^((?:(?:\\.\\.)(?:\\s+))?)(__)(:)(\\s+)(.*)/,\n                [\n                    {\n                        token: \"\",\n                        next: \"subsequentLines\"\n                    },\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"string.link\"\n                ]\n            ],\n            [\n                /^(__\\s+)(.+)/,\n                [\n                    \"\",\n                    \"string.link\"\n                ]\n            ],\n            //substitution-definitions\n            [\n                /^(\\.\\.)( \\|)([^| ]+[^|]*[^| ]*)(\\| )(@simpleRefName)(:: .*)/,\n                [\n                    {\n                        token: \"\",\n                        next: \"subsequentLines\"\n                    },\n                    \"\",\n                    \"string.link\",\n                    \"\",\n                    \"keyword\",\n                    \"\"\n                ],\n                \"@rawBlocks\"\n            ],\n            [\n                /(\\|)([^| ]+[^|]*[^| ]*)(\\|_{0,2})/,\n                [\n                    \"\",\n                    \"string.link\",\n                    \"\"\n                ]\n            ],\n            //comments\n            [\n                /^(\\.\\.)([ ].*)$/,\n                [\n                    {\n                        token: \"\",\n                        next: \"@comments\"\n                    },\n                    \"comment\"\n                ]\n            ]\n        ],\n        inlineMarkup: [\n            {\n                include: \"@citationsReference\"\n            },\n            {\n                include: \"@footnotesReference\"\n            },\n            //hyperlink-references\n            [\n                /(@simpleRefName)(_{1,2})/,\n                [\n                    \"string.link\",\n                    \"\"\n                ]\n            ],\n            //embedded-uris-and-aliases\n            [\n                /(`)([^<`]+\\s+)(<)(.*)(>)(`)(_)/,\n                [\n                    \"\",\n                    \"string.link\",\n                    \"\",\n                    \"string.link\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ]\n            ],\n            //emphasis\n            [\n                /\\*\\*([^\\\\*]|\\*(?!\\*))+\\*\\*/,\n                \"strong\"\n            ],\n            [\n                /\\*[^*]+\\*/,\n                \"emphasis\"\n            ],\n            //inline-literals\n            [\n                /(``)((?:[^`]|\\`(?!`))+)(``)/,\n                [\n                    \"\",\n                    \"keyword\",\n                    \"\"\n                ]\n            ],\n            [\n                /(__\\s+)(.+)/,\n                [\n                    \"\",\n                    \"keyword\"\n                ]\n            ],\n            //interpreted-text\n            [\n                /(:)((?:@simpleRefNameWithoutBq)?)(:`)([^`]+)(`)/,\n                [\n                    \"\",\n                    \"keyword\",\n                    \"\",\n                    \"\",\n                    \"\"\n                ]\n            ],\n            [\n                /(`)([^`]+)(`:)((?:@simpleRefNameWithoutBq)?)(:)/,\n                [\n                    \"\",\n                    \"\",\n                    \"\",\n                    \"keyword\",\n                    \"\"\n                ]\n            ],\n            [\n                /(`)([^`]+)(`)/,\n                \"\"\n            ],\n            //inline-internal-targets\n            [\n                /(_`)(@phrase)(`)/,\n                [\n                    \"\",\n                    \"string.link\",\n                    \"\"\n                ]\n            ]\n        ],\n        citations: [\n            [\n                /^(\\.\\.\\s+\\[)((?:@citationName))(\\]\\s+)(.*)/,\n                [\n                    {\n                        token: \"\",\n                        next: \"@subsequentLines\"\n                    },\n                    \"string.link\",\n                    \"\",\n                    \"\"\n                ]\n            ]\n        ],\n        citationsReference: [\n            [\n                /(\\[)(@citationName)(\\]_)/,\n                [\n                    \"\",\n                    \"string.link\",\n                    \"\"\n                ]\n            ]\n        ],\n        footnotes: [\n            [\n                /^(\\.\\.\\s+\\[)((?:[0-9]+))(\\]\\s+.*)/,\n                [\n                    {\n                        token: \"\",\n                        next: \"@subsequentLines\"\n                    },\n                    \"string.link\",\n                    \"\"\n                ]\n            ],\n            [\n                /^(\\.\\.\\s+\\[)((?:#@simpleRefName?))(\\]\\s+)(.*)/,\n                [\n                    {\n                        token: \"\",\n                        next: \"@subsequentLines\"\n                    },\n                    \"string.link\",\n                    \"\",\n                    \"\"\n                ]\n            ],\n            [\n                /^(\\.\\.\\s+\\[)((?:\\*))(\\]\\s+)(.*)/,\n                [\n                    {\n                        token: \"\",\n                        next: \"@subsequentLines\"\n                    },\n                    \"string.link\",\n                    \"\",\n                    \"\"\n                ]\n            ]\n        ],\n        footnotesReference: [\n            [\n                /(\\[)([0-9]+)(\\])(_)/,\n                [\n                    \"\",\n                    \"string.link\",\n                    \"\",\n                    \"\"\n                ]\n            ],\n            [\n                /(\\[)(#@simpleRefName?)(\\])(_)/,\n                [\n                    \"\",\n                    \"string.link\",\n                    \"\",\n                    \"\"\n                ]\n            ],\n            [\n                /(\\[)(\\*)(\\])(_)/,\n                [\n                    \"\",\n                    \"string.link\",\n                    \"\",\n                    \"\"\n                ]\n            ]\n        ],\n        blankLineOfLiteralBlocks: [\n            [\n                /^$/,\n                \"\",\n                \"@subsequentLinesOfLiteralBlocks\"\n            ],\n            [\n                /^.*$/,\n                \"\",\n                \"@pop\"\n            ]\n        ],\n        subsequentLinesOfLiteralBlocks: [\n            [\n                /(@blockLiteralStart+)(.*)/,\n                [\n                    \"keyword\",\n                    \"\"\n                ]\n            ],\n            [\n                /^(?!blockLiteralStart)/,\n                \"\",\n                \"@popall\"\n            ]\n        ],\n        subsequentLines: [\n            [\n                /^[\\s]+.*/,\n                \"\"\n            ],\n            [\n                /^(?!\\s)/,\n                \"\",\n                \"@pop\"\n            ]\n        ],\n        hyperlinks: [\n            [\n                /^[\\s]+.*/,\n                \"string.link\"\n            ],\n            [\n                /^(?!\\s)/,\n                \"\",\n                \"@pop\"\n            ]\n        ],\n        comments: [\n            [\n                /^[\\s]+.*/,\n                \"comment\"\n            ],\n            [\n                /^(?!\\s)/,\n                \"\",\n                \"@pop\"\n            ]\n        ],\n        tables: [\n            [\n                /\\+-[+-]+/,\n                \"keyword\"\n            ],\n            [\n                /\\+=[+=]+/,\n                \"keyword\"\n            ]\n        ]\n    }\n};\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"k3151\"}],\"k3151\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}]},[], null, \"parcelRequire94c2\")\n\n//# sourceMappingURL=restructuredtext.3fb12dce.js.map\n","/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.0(f6dc0eb8fce67e57f6036f4769d92c1666cdf546)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/restructuredtext/restructuredtext.ts\nvar conf = {\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\", notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"(\", close: \")\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"`\", close: \"`\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*<!--\\\\s*#?region\\\\b.*-->\"),\n      end: new RegExp(\"^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".rst\",\n  control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n  escapes: /\\\\(?:@control)/,\n  empty: [\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"link\",\n    \"meta\",\n    \"param\"\n  ],\n  alphanumerics: /[A-Za-z0-9]/,\n  simpleRefNameWithoutBq: /(?:@alphanumerics[-_+:.]*@alphanumerics)+|(?:@alphanumerics+)/,\n  simpleRefName: /(?:`@phrase`|@simpleRefNameWithoutBq)/,\n  phrase: /@simpleRefNameWithoutBq(?:\\s@simpleRefNameWithoutBq)*/,\n  citationName: /[A-Za-z][A-Za-z0-9-_.]*/,\n  blockLiteralStart: /(?:[!\"#$%&'()*+,-./:;<=>?@\\[\\]^_`{|}~]|[\\s])/,\n  precedingChars: /(?:[ -:/'\"<([{])/,\n  followingChars: /(?:[ -.,:;!?/'\")\\]}>]|$)/,\n  punctuation: /(=|-|~|`|#|\"|\\^|\\+|\\*|:|\\.|'|_|\\+)/,\n  tokenizer: {\n    root: [\n      //sections\n      [/^(@punctuation{3,}$){1,1}?/, \"keyword\"],\n      //line-blocks\n      //No rules on it\n      //bullet-lists\n      [/^\\s*([\\*\\-+‣•]|[a-zA-Z0-9]+\\.|\\([a-zA-Z0-9]+\\)|[a-zA-Z0-9]+\\))\\s/, \"keyword\"],\n      //literal-blocks\n      [/([ ]::)\\s*$/, \"keyword\", \"@blankLineOfLiteralBlocks\"],\n      [/(::)\\s*$/, \"keyword\", \"@blankLineOfLiteralBlocks\"],\n      { include: \"@tables\" },\n      { include: \"@explicitMarkupBlocks\" },\n      { include: \"@inlineMarkup\" }\n    ],\n    explicitMarkupBlocks: [\n      //citations\n      { include: \"@citations\" },\n      //footnotes\n      { include: \"@footnotes\" },\n      //directives\n      [\n        /^(\\.\\.\\s)(@simpleRefName)(::\\s)(.*)$/,\n        [{ token: \"\", next: \"subsequentLines\" }, \"keyword\", \"\", \"\"]\n      ],\n      //hyperlink-targets\n      [\n        /^(\\.\\.)(\\s+)(_)(@simpleRefName)(:)(\\s+)(.*)/,\n        [{ token: \"\", next: \"hyperlinks\" }, \"\", \"\", \"string.link\", \"\", \"\", \"string.link\"]\n      ],\n      //anonymous-hyperlinks\n      [\n        /^((?:(?:\\.\\.)(?:\\s+))?)(__)(:)(\\s+)(.*)/,\n        [{ token: \"\", next: \"subsequentLines\" }, \"\", \"\", \"\", \"string.link\"]\n      ],\n      [/^(__\\s+)(.+)/, [\"\", \"string.link\"]],\n      //substitution-definitions\n      [\n        /^(\\.\\.)( \\|)([^| ]+[^|]*[^| ]*)(\\| )(@simpleRefName)(:: .*)/,\n        [{ token: \"\", next: \"subsequentLines\" }, \"\", \"string.link\", \"\", \"keyword\", \"\"],\n        \"@rawBlocks\"\n      ],\n      [/(\\|)([^| ]+[^|]*[^| ]*)(\\|_{0,2})/, [\"\", \"string.link\", \"\"]],\n      //comments\n      [/^(\\.\\.)([ ].*)$/, [{ token: \"\", next: \"@comments\" }, \"comment\"]]\n    ],\n    inlineMarkup: [\n      { include: \"@citationsReference\" },\n      { include: \"@footnotesReference\" },\n      //hyperlink-references\n      [/(@simpleRefName)(_{1,2})/, [\"string.link\", \"\"]],\n      //embedded-uris-and-aliases\n      [/(`)([^<`]+\\s+)(<)(.*)(>)(`)(_)/, [\"\", \"string.link\", \"\", \"string.link\", \"\", \"\", \"\"]],\n      //emphasis\n      [/\\*\\*([^\\\\*]|\\*(?!\\*))+\\*\\*/, \"strong\"],\n      [/\\*[^*]+\\*/, \"emphasis\"],\n      //inline-literals\n      [/(``)((?:[^`]|\\`(?!`))+)(``)/, [\"\", \"keyword\", \"\"]],\n      [/(__\\s+)(.+)/, [\"\", \"keyword\"]],\n      //interpreted-text\n      [/(:)((?:@simpleRefNameWithoutBq)?)(:`)([^`]+)(`)/, [\"\", \"keyword\", \"\", \"\", \"\"]],\n      [/(`)([^`]+)(`:)((?:@simpleRefNameWithoutBq)?)(:)/, [\"\", \"\", \"\", \"keyword\", \"\"]],\n      [/(`)([^`]+)(`)/, \"\"],\n      //inline-internal-targets\n      [/(_`)(@phrase)(`)/, [\"\", \"string.link\", \"\"]]\n    ],\n    citations: [\n      [\n        /^(\\.\\.\\s+\\[)((?:@citationName))(\\]\\s+)(.*)/,\n        [{ token: \"\", next: \"@subsequentLines\" }, \"string.link\", \"\", \"\"]\n      ]\n    ],\n    citationsReference: [[/(\\[)(@citationName)(\\]_)/, [\"\", \"string.link\", \"\"]]],\n    footnotes: [\n      [\n        /^(\\.\\.\\s+\\[)((?:[0-9]+))(\\]\\s+.*)/,\n        [{ token: \"\", next: \"@subsequentLines\" }, \"string.link\", \"\"]\n      ],\n      [\n        /^(\\.\\.\\s+\\[)((?:#@simpleRefName?))(\\]\\s+)(.*)/,\n        [{ token: \"\", next: \"@subsequentLines\" }, \"string.link\", \"\", \"\"]\n      ],\n      [\n        /^(\\.\\.\\s+\\[)((?:\\*))(\\]\\s+)(.*)/,\n        [{ token: \"\", next: \"@subsequentLines\" }, \"string.link\", \"\", \"\"]\n      ]\n    ],\n    footnotesReference: [\n      [/(\\[)([0-9]+)(\\])(_)/, [\"\", \"string.link\", \"\", \"\"]],\n      [/(\\[)(#@simpleRefName?)(\\])(_)/, [\"\", \"string.link\", \"\", \"\"]],\n      [/(\\[)(\\*)(\\])(_)/, [\"\", \"string.link\", \"\", \"\"]]\n    ],\n    blankLineOfLiteralBlocks: [\n      [/^$/, \"\", \"@subsequentLinesOfLiteralBlocks\"],\n      [/^.*$/, \"\", \"@pop\"]\n    ],\n    subsequentLinesOfLiteralBlocks: [\n      [/(@blockLiteralStart+)(.*)/, [\"keyword\", \"\"]],\n      [/^(?!blockLiteralStart)/, \"\", \"@popall\"]\n    ],\n    subsequentLines: [\n      [/^[\\s]+.*/, \"\"],\n      [/^(?!\\s)/, \"\", \"@pop\"]\n    ],\n    hyperlinks: [\n      [/^[\\s]+.*/, \"string.link\"],\n      [/^(?!\\s)/, \"\", \"@pop\"]\n    ],\n    comments: [\n      [/^[\\s]+.*/, \"comment\"],\n      [/^(?!\\s)/, \"\", \"@pop\"]\n    ],\n    tables: [\n      [/\\+-[+-]+/, \"keyword\"],\n      [/\\+=[+=]+/, \"keyword\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","__globalThis","parcelHelpers","defineInteropFlag","export","conf","language","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","control","escapes","empty","alphanumerics","simpleRefNameWithoutBq","simpleRefName","phrase","citationName","blockLiteralStart","precedingChars","followingChars","punctuation","tokenizer","root","include","explicitMarkupBlocks","token","next","inlineMarkup","citations","citationsReference","footnotes","footnotesReference","blankLineOfLiteralBlocks","subsequentLinesOfLiteralBlocks","subsequentLines","hyperlinks","comments","tables","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","forEach","key","prototype","hasOwnProperty","enumerable","destName"],"version":3,"file":"restructuredtext.3fb12dce.js.map"}